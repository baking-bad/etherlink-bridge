{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "ticketHash",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "ticketOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inboxLevel",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inboxMsgId",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "ticketHash",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "ticketOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes22",
          "name": "receiver",
          "type": "bytes22"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalId",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "content",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract KernelMock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver22",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_InboxDepositCallsTokenMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_RevertWhen_WithdrawMoreThanTicketBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ShouldDecreaseTicketBalanceOfTokenIfWithdrawSucceed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ShouldEmitDepositEventOnDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ShouldEmitWithdrawEventOnWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ShouldIncreaseTicketBalanceOfTokenIfDepositSucceed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_WithdrawCallsTokenBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticketHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticketer",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20Proxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrongContent",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrongTicketer",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "266:3059:33:-:0;;;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;-1:-1:-1;;;;;;326:12:30;;;;168:25:34;326:7:30;;141:18:34;326:12:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;303:35;;;-1:-1:-1;;;;;;303:35:30;-1:-1:-1;;;;;303:35:30;;;;;;;;;;365:12;;-1:-1:-1;;;;;;365:12:30;;373:3;365:12;;;168:25:34;365:7:30;;;;141:18:34;;365:12:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;344:33;;;-1:-1:-1;;;;;;344:33:30;-1:-1:-1;;;;;344:33:30;;;;;;;;;;414:50;;;-1:-1:-1;;;;;;414:50:30;;;;;;;;470:61;;;;;;;;;;560:34;;-1:-1:-1;;;560:34:30;;;891:29:34;936:12;;560:34:30;;;;;;;;;;;;537:57;;;;;;;:::i;:::-;-1:-1:-1;628:42:30;;3888:24:34;628:42:30;;;3876:37:34;3929:12;;628:42:30;;;;;;;;;;;;600:70;;;;;;;:::i;:::-;-1:-1:-1;700:35:30;;;;;;;;;;;;;;;;;676:59;;;;;;:::i;:::-;-1:-1:-1;741:61:30;;;-1:-1:-1;;;;;;741:61:30;;;;;266:3059:33;;;;;;;;;;;;204:290:34;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;369:16;;-1:-1:-1;;;;;414:31:34;;404:42;;394:70;;460:1;457;450:12;394:70;483:5;204:290;-1:-1:-1;;;204:290:34:o;959:127::-;1020:10;1015:3;1011:20;1008:1;1001:31;1051:4;1048:1;1041:15;1075:4;1072:1;1065:15;1091:380;1170:1;1166:12;;;;1213;;;1234:61;;1288:4;1280:6;1276:17;1266:27;;1234:61;1341:2;1333:6;1330:14;1310:18;1307:38;1304:161;;1387:10;1382:3;1378:20;1375:1;1368:31;1422:4;1419:1;1412:15;1450:4;1447:1;1440:15;1304:161;;1091:380;;;:::o;1601:544::-;1702:2;1697:3;1694:11;1691:448;;;1738:1;1763:5;1759:2;1752:17;1808:4;1804:2;1794:19;1878:2;1866:10;1862:19;1859:1;1855:27;1849:4;1845:38;1914:4;1902:10;1899:20;1896:47;;;-1:-1:-1;1937:4:34;1896:47;1992:2;1987:3;1983:12;1980:1;1976:20;1970:4;1966:31;1956:41;;2047:82;2065:2;2058:5;2055:13;2047:82;;;2110:17;;;2091:1;2080:13;2047:82;;;2051:3;;;1691:448;1601:544;;;:::o;2321:1348::-;2439:10;;-1:-1:-1;;;;;2461:30:34;;2458:56;;;2494:18;;:::i;:::-;2523:96;2612:6;2572:38;2604:4;2598:11;2572:38;:::i;:::-;2566:4;2523:96;:::i;:::-;2674:4;;2738:2;2727:14;;2755:1;2750:662;;;;3456:1;3473:6;3470:89;;;-1:-1:-1;3525:19:34;;;3519:26;3470:89;-1:-1:-1;;2278:1:34;2274:11;;;2270:24;2266:29;2256:40;2302:1;2298:11;;;2253:57;3572:81;;2720:943;;2750:662;1548:1;1541:14;;;1585:4;1572:18;;-1:-1:-1;;2786:20:34;;;2903:236;2917:7;2914:1;2911:14;2903:236;;;3006:19;;;3000:26;2985:42;;3098:27;;;;3066:1;3054:14;;;;2933:19;;2903:236;;;2907:3;3167:6;3158:7;3155:19;3152:201;;;3228:19;;;3222:26;-1:-1:-1;;3311:1:34;3307:14;;;3323:3;3303:24;3299:37;3295:42;3280:58;3265:74;;3152:201;-1:-1:-1;;;;;3399:1:34;3383:14;;;3379:22;3366:36;;-1:-1:-1;2321:1348:34:o;3674:273::-;266:3059:33;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "266:3059:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:352:30;;;:::i;:::-;;2392:425:33;;;:::i;1212:394::-;;;:::i;2452:134:6:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1612:479:33;;;:::i;3360:151:6:-;;;:::i;:::-;;;;;;;:::i;741:61:30:-;;;;;;;;;;;;-1:-1:-1;;3285:40:34;;;3267:59;;3255:2;3240:18;741:61:30;3121:211:34;2823:500:33;;;:::i;3221:133:6:-;;;:::i;414:50:30:-;;;;;;;;;2922:141:6;;;:::i;470:61:30:-;;;;;;;;;600:70;;;:::i;:::-;;;;;;;:::i;2738:178:6:-;;;:::i;:::-;;;;;;;:::i;383:25:30:-;;;;;;;;;5278::34;;;5266:2;5251:18;383:25:30;5132:177:34;2592:140:6;;;:::i;:::-;;;;;;;:::i;537:57:30:-;;;:::i;3069:146:6:-;;;:::i;643:563:33:-;;;:::i;337:300::-;;;:::i;2157:141:6:-;;;:::i;1819:584:0:-;;;:::i;:::-;;;6287:14:34;;6280:22;6262:41;;6250:2;6235:18;1819:584:0;6122:187:34;344:33:30;;;;;-1:-1:-1;;;;;344:33:30;;;;;;-1:-1:-1;;;;;6478:32:34;;;6460:51;;6448:2;6433:18;344:33:30;6314:203:34;273:24:30;;;;;-1:-1:-1;;;;;273:24:30;;;2097:289:33;;;:::i;2304:142:6:-;;;:::i;676:59:30:-;;;:::i;1572:26:0:-;;;;;;;;;303:35:30;;;;;-1:-1:-1;;;;;303:35:30;;;244:23;;;;;-1:-1:-1;;;;;244:23:30;;;809:352;852:5;;843:24;;;-1:-1:-1;;;843:24:30;;-1:-1:-1;;;;;852:5:30;;;843:24;;;7190:51:34;7257:18;;;7250:30;7316:1;7296:18;;;7289:29;-1:-1:-1;;;7334:18:34;;;7327:35;-1:-1:-1;;;;;;;;;;;843:8:30;;;7379:19:34;;843:24:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;886:3:30;;877:20;;;-1:-1:-1;;;877:20:30;;-1:-1:-1;;;;;886:3:30;;;877:20;;;7621:51:34;7688:18;;;7681:30;7747:1;7727:18;;;7720:29;-1:-1:-1;;;7765:18:34;;;7758:33;-1:-1:-1;;;;;;;;;;;877:8:30;-1:-1:-1;877:8:30;;-1:-1:-1;7808:19:34;;877:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;916:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;907:6:30;:25;;-1:-1:-1;;;;;;907:25:30;-1:-1:-1;;;;;907:25:30;;;;;;;;;978:8;;950:152;;978:8;;;;;;1000:7;;1090:2;;950:152;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;942:5:30;:160;;-1:-1:-1;;;;;;942:160:30;-1:-1:-1;;;;;942:160:30;;;;;;;;;;1136:8;;1146:7;1125:29;;;;1136:8;;;1146:7;1125:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;:29::i;:::-;1112:10;:42;809:352::o;2392:425:33:-;2529:37;;-1:-1:-1;;;2529:37:33;;2543:4;2529:37;;;10671:41:34;;;10728:18;;;10721:50;;;10787:18;;;10780:50;;;10846:18;;;10839:50;-1:-1:-1;;;;;;;;;;;2529:13:33;;;10643:19:34;;2529:37:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2666:10:33;;;2686:5;;2694:3;;2645:91;;;-1:-1:-1;;;;;2686:5:33;;;11207:34:34;;2694:3:33;;;;11257:18:34;;;11250:43;;;;2699:3:33;11309:18:34;;;11302:34;-1:-1:-1;11367:2:34;11352:18;;11345:34;;;11410:3;11395:19;;11388:35;;;2645:91:33;;-1:-1:-1;;;;;;2666:10:33;;2645:91;;;;;11156:3:34;2645:91:33;;;2746:6;;2774:5;;2782:3;;2792:8;;2746:64;;-1:-1:-1;;;2746:64:33;;-1:-1:-1;;;;;2746:6:33;;;;:19;;:64;;2774:5;;;;2782:3;;;2787;;2792:8;;;2802:7;;2746:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:370;;2392:425::o;1212:394::-;1286:6;;1314:5;;1322:3;;1330:8;;1286:62;;-1:-1:-1;;;1286:62:33;;-1:-1:-1;;;;;1286:6:33;;;;:19;;:62;;1314:5;;;;1322:3;;;1286:6;;1330:8;;;1340:7;;1286:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1367:6:33;;1385:8;;1412:5;;1367:52;;-1:-1:-1;;;1367:52:33;;1358:65;;-1:-1:-1;;;;;;1367:6:33;;;;-1:-1:-1;1367:17:33;;:52;;1385:8;;;1395:7;;1412:5;;;1367:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1421:1;1358:8;:65::i;:::-;1450:5;;1433:24;;-1:-1:-1;;;1433:24:33;;-1:-1:-1;;;;;1450:5:33;;;1433:24;;;6460:51:34;-1:-1:-1;;;;;;;;;;;1433:8:33;;;6433:18:34;;1433:24:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1467:59:33;;-1:-1:-1;;;1467:59:33;;13479:2:34;1467:59:33;;;13461:21:34;13518:2;13498:18;;;13491:30;13557:34;13537:18;;;13530:62;-1:-1:-1;;;13608:18:34;;;13601:38;-1:-1:-1;;;;;;;;;;;1467:15:33;-1:-1:-1;1467:15:33;;-1:-1:-1;13656:19:34;;1467:59:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:6:33;;1560:5;;1581:8;;1536:63;;-1:-1:-1;;;1536:63:33;;-1:-1:-1;;;;;1536:6:33;;;;-1:-1:-1;1536:15:33;;-1:-1:-1;1536:63:33;;1560:5;;;;1568:8;;1578:1;;1581:8;;;;;;1591:7;;1536:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1212:394::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;1612:479:33:-;1668:6;;1696:5;;1704;;1716:8;;1668:66;;-1:-1:-1;;;1668:66:33;;-1:-1:-1;;;;;1668:6:33;;;;:19;;:66;;1696:5;;;;1704;;;1711:3;;1716:8;;;1726:7;;1668:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1753:5:33;;1769;;1753:22;;-1:-1:-1;;;1753:22:33;;-1:-1:-1;;;;;1769:5:33;;;1753:22;;;6460:51:34;1744:37:33;;-1:-1:-1;1753:5:33;;;-1:-1:-1;1753:15:33;;6433:18:34;;1753:22:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1777:3;1744:8;:37::i;:::-;1846:5;;1863;;1874:10;;;1831:55;;;-1:-1:-1;;;;;1863:5:33;;;1831:55;;;14573:51:34;1870:2:33;14640:18:34;;;14633:34;14683:18;;;;14676:34;;;;1831:55:33;;;;;;;;;;14546:18:34;;1831:55:33;;;;;;;-1:-1:-1;;;;;1831:55:33;-1:-1:-1;;;1831:55:33;;;1896:43;;-1:-1:-1;;;1896:43:33;;1831:55;;-1:-1:-1;;;;;;;;;;;1896:13:33;;;:43;;1846:5;;;;;1831:55;;1896:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1958:5:33;;1949:15;;-1:-1:-1;;;1949:15:33;;-1:-1:-1;;;;;1958:5:33;;;1949:15;;;6460:51:34;-1:-1:-1;;;;;;;;;;;1949:8:33;-1:-1:-1;1949:8:33;;-1:-1:-1;6433:18:34;;1949:15:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1974:6:33;;1998:5;;2020:8;;1974:64;;-1:-1:-1;;;1974:64:33;;-1:-1:-1;;;;;1974:6:33;;;;-1:-1:-1;1974:15:33;;-1:-1:-1;1974:64:33;;1998:5;;;;2006:8;;2016:2;;2020:8;;;;;;2030:7;;1974:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2057:5:33;;2073;;2057:22;;-1:-1:-1;;;2057:22:33;;-1:-1:-1;;;;;2073:5:33;;;2057:22;;;6460:51:34;2048:36:33;;-1:-1:-1;2057:5:33;;;-1:-1:-1;2057:15:33;;6433:18:34;;2057:22:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2081:2;2048:8;:36::i;:::-;1658:433;1612:479::o;3360:151:6:-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;2823:500:33:-;2890:6;;2918:5;;2926:3;;2936:8;;2890:64;;-1:-1:-1;;;2890:64:33;;-1:-1:-1;;;;;2890:6:33;;;;:19;;:64;;2918:5;;;;2926:3;;;2931;;2936:8;;;2946:7;;2890:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2973:3:33;;2964:13;;-1:-1:-1;;;2964:13:33;;-1:-1:-1;;;;;2973:3:33;;;2964:13;;;6460:51:34;-1:-1:-1;;;;;;;;;;;2964:8:33;-1:-1:-1;2964:8:33;;-1:-1:-1;6433:18:34;;2964:13:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3059:37:33;;-1:-1:-1;;;3059:37:33;;3073:4;3059:37;;;10671:41:34;;;10728:18;;;10721:50;;;10787:18;;;10780:50;;;10846:18;;;10839:50;-1:-1:-1;;;;;;;;;;;3059:13:33;-1:-1:-1;3059:13:33;;-1:-1:-1;10643:19:34;;3059:37:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3169:10:33;;;3181:3;;3194:5;;3202:10;;3145:96;;;-1:-1:-1;;;;;3181:3:33;;;16025:34:34;;3194:5:33;;;;16075:18:34;;;16068:43;;;;3202:10:33;;;;;-1:-1:-1;;16147:40:34;16127:18;;;16120:68;;;;3214:3:33;16219:2:34;16204:18;;16197:34;-1:-1:-1;16262:3:34;16247:19;;16240:35;;;-1:-1:-1;;3169:10:33;-1:-1:-1;3145:96:33;;15974:3:34;15959:19;3145:96:33;;;;;;;3251:6;;3275:5;;3298:8;;3251:65;;-1:-1:-1;;;3251:65:33;;-1:-1:-1;;;;;3251:6:33;;;;:15;;:65;;3275:5;;;3283:8;;3293:3;;3298:8;;;;;;3308:7;;3251:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:443;2823:500::o;3221:133:6:-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;600:70:30:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2738:178:6:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;537:57:30;;;;;;;:::i;3069:146:6:-;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;643:563:33;749:6;;767:8;;794:5;;749:52;;-1:-1:-1;;;749:52:33;;740:65;;-1:-1:-1;;;;;749:6:33;;;;:17;;:52;;767:8;;;;;;777:7;;794:5;;;749:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;803:1;740:8;:65::i;:::-;815:6;;843:5;;851;;863:8;;815:66;;-1:-1:-1;;;815:66:33;;-1:-1:-1;;;;;815:6:33;;;;:19;;:66;;843:5;;;;851;;;858:3;;863:8;;;873:7;;815:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;900:6:33;;918:8;;945:5;;900:52;;-1:-1:-1;;;900:52:33;;891:67;;-1:-1:-1;;;;;;900:6:33;;;;-1:-1:-1;900:17:33;;:52;;918:8;;;928:7;;945:5;;;900:52;;;:::i;891:67::-;977:6;;995:8;;1014:5;;977:43;;-1:-1:-1;;;977:43:33;;968:56;;-1:-1:-1;;;;;977:6:33;;;;:17;;:43;;995:8;;;;;;1005:7;;1014:5;;;977:43;;;:::i;968:56::-;1043:5;;1034:15;;-1:-1:-1;;;1034:15:33;;-1:-1:-1;;;;;1043:5:33;;;1034:15;;;6460:51:34;-1:-1:-1;;;;;;;;;;;1034:8:33;;;6433:18:34;;1034:15:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1059:6:33;;1083:5;;1105:8;;1059:64;;-1:-1:-1;;;1059:64:33;;-1:-1:-1;;;;;1059:6:33;;;;-1:-1:-1;1059:15:33;;-1:-1:-1;1059:64:33;;1083:5;;;;1091:8;;1101:2;;1105:8;;;;;;1115:7;;1059:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1142:6:33;;1160:8;;1187:5;;1142:52;;-1:-1:-1;;;1142:52:33;;1133:66;;-1:-1:-1;;;;;;1142:6:33;;;;-1:-1:-1;1142:17:33;;:52;;1160:8;;;1170:7;;1187:5;;;1142:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1196:2;1133:8;:66::i;:::-;643:563::o;337:300::-;421:6;;449:5;;457;;469:8;;421:66;;-1:-1:-1;;;421:66:33;;-1:-1:-1;;;;;421:6:33;;;;:19;;:66;;449:5;;;;457;;;464:3;;469:8;;;479:7;;421:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;506:6:33;;524:8;;551:5;;506:52;;-1:-1:-1;;;506:52:33;;497:67;;-1:-1:-1;;;;;;506:6:33;;;;-1:-1:-1;506:17:33;;:52;;524:8;;;534:7;;551:5;;;506:52;;;:::i;497:67::-;583:6;;601:8;;620:5;;583:43;;-1:-1:-1;;;583:43:33;;574:56;;-1:-1:-1;;;;;583:6:33;;;;:17;;:43;;601:8;;;;;;611:7;;620:5;;;583:43;;;:::i;2157:141:6:-;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:0;3066:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:0;;;17815:51:34;;;-1:-1:-1;;;17882:18:34;;;17875:34;2196:43:0;;;;;;;;;17788:18:34;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2097:289:33:-;2212:5;;2228;;2239:10;;;2197:54;;;-1:-1:-1;;;;;2228:5:33;;;2197:54;;;14573:51:34;2235:2:33;14640:18:34;;;14633:34;14683:18;;;;14676:34;;;;2197:54:33;;;;;;;;;;14546:18:34;;2197:54:33;;;;;;;-1:-1:-1;;;;;2197:54:33;-1:-1:-1;;;2197:54:33;;;2261:43;;-1:-1:-1;;;2261:43:33;;2197:54;;-1:-1:-1;;;;;;;;;;;2261:13:33;;;:43;;2212:5;;;;;2197:54;;2261:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2314:6:33;;2342:5;;2350;;2361:8;;2314:65;;-1:-1:-1;;;2314:65:33;;-1:-1:-1;;;;;2314:6:33;;;;-1:-1:-1;2314:19:33;;-1:-1:-1;2314:65:33;;2342:5;;;;2350;;;;2357:2;;2361:8;;;2371:7;;2314:65;;;:::i;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;676:59:30:-;;;;;;;:::i;391:179:25:-;473:18;547:8;557:7;530:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;530:35:25;;;;;;;;;520:46;;530:35;520:46;;;;;391:179;-1:-1:-1;;;391:179:25:o;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;20457:2:34;20439:21;;;20496:2;20476:18;;;20469:30;20535:34;20530:2;20515:18;;20508:62;-1:-1:-1;;;20601:2:34;20586:18;;20579:32;20643:3;20628:19;;20255:398;5293:41:0;;;;;;;;5353:31;;;20870:21:34;;;20927:2;20907:18;;;20900:30;-1:-1:-1;;;20961:2:34;20946:18;;20939:40;21046:4;21031:20;;21024:36;;;5353:31:0;;;;;;;21011:3:34;5353:31:0;;;5403;;;21283:21:34;;;21340:2;21320:18;;;21313:30;-1:-1:-1;;;21374:2:34;21359:18;;21352:40;21459:4;21444:20;;21437:36;;;5403:31:0;;;;;;;21424:3:34;5403:31:0;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;-1:-1:-1;;;;;;;;;;;2985:55:0;3066:16;2452:359;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:0;;;14573:51:34;;;-1:-1:-1;;;14640:18:34;;;14633:34;;;;2712:4:0;14683:18:34;;;14676:34;2489:11:0;;1671:64;2586:43;;14546:18:34;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;180:658:34:-;351:2;403:21;;;473:13;;376:18;;;495:22;;;322:4;;351:2;574:15;;;;548:2;533:18;;;322:4;617:195;631:6;628:1;625:13;617:195;;;696:13;;-1:-1:-1;;;;;692:39:34;680:52;;787:15;;;;752:12;;;;728:1;646:9;617:195;;;-1:-1:-1;829:3:34;;180:658;-1:-1:-1;;;;;;180:658:34:o;843:250::-;928:1;938:113;952:6;949:1;946:13;938:113;;;1028:11;;;1022:18;1009:11;;;1002:39;974:2;967:10;938:113;;;-1:-1:-1;;1085:1:34;1067:16;;1060:27;843:250::o;1098:271::-;1140:3;1178:5;1172:12;1205:6;1200:3;1193:19;1221:76;1290:6;1283:4;1278:3;1274:14;1267:4;1260:5;1256:16;1221:76;:::i;:::-;1351:2;1330:15;-1:-1:-1;;1326:29:34;1317:39;;;;1358:4;1313:50;;1098:271;-1:-1:-1;;1098:271:34:o;1374:1742::-;1607:2;1659:21;;;1729:13;;1632:18;;;1751:22;;;1578:4;;1607:2;1792;;1810:18;;;;1847:1;1890:15;;;1875:31;;1871:40;;1934:15;;;1578:4;;1998:1089;2014:6;2009:3;2006:15;1998:1089;;;-1:-1:-1;;2083:22:34;;;2079:36;2067:49;;2139:13;;2226:9;;-1:-1:-1;;;;;2222:35:34;2207:51;;2297:11;;2291:18;2329:15;;;2322:27;;;2410:19;;2179:15;;;2442:24;;;2623:21;;;;2489:2;2571:17;;;2559:30;;2555:39;;;2513:15;;;;2668:1;2682:296;2698:8;2693:3;2690:17;2682:296;;;2804:2;2800:7;2791:6;2783;2779:19;2775:33;2768:5;2761:48;2836:42;2871:6;2860:8;2854:15;2836:42;:::i;:::-;2907:17;;;;2826:52;-1:-1:-1;2950:14:34;;;;2726:1;2717:11;2682:296;;;-1:-1:-1;;;3065:12:34;;;;3001:6;-1:-1:-1;;3030:15:34;;;;2040:1;2031:11;1998:1089;;;-1:-1:-1;3104:6:34;;1374:1742;-1:-1:-1;;;;;;;;;;1374:1742:34:o;3337:218::-;3484:2;3473:9;3466:21;3447:4;3504:45;3545:2;3534:9;3530:18;3522:6;3504:45;:::i;:::-;3496:53;3337:218;-1:-1:-1;;;3337:218:34:o;3560:1567::-;3762:4;3791:2;3831;3820:9;3816:18;3861:2;3850:9;3843:21;3884:6;3919;3913:13;3950:6;3942;3935:22;3976:2;3966:12;;4009:2;3998:9;3994:18;3987:25;;4071:2;4061:6;4058:1;4054:14;4043:9;4039:30;4035:39;4109:2;4101:6;4097:15;4130:1;4151;4161:937;4177:6;4172:3;4169:15;4161:937;;;4246:22;;;-1:-1:-1;;4242:36:34;4230:49;;4302:13;;4389:9;;-1:-1:-1;;;;;4385:35:34;4370:51;;4460:11;;4454:18;4492:15;;;4485:27;;;4573:19;;4342:15;;;4605:24;;;4695:21;;;;4740:1;;4663:2;4651:15;;;4754:236;4770:8;4765:3;4762:17;4754:236;;;4851:15;;-1:-1:-1;;;;;;4847:42:34;4833:57;;4959:17;;;;4798:1;4789:11;;;;;4916:14;;;;4754:236;;;-1:-1:-1;5076:12:34;;;;5013:5;-1:-1:-1;;;5041:15:34;;;;4203:1;4194:11;4161:937;;;-1:-1:-1;5115:6:34;;3560:1567;-1:-1:-1;;;;;;;;;3560:1567:34:o;5314:803::-;5476:4;5505:2;5545;5534:9;5530:18;5575:2;5564:9;5557:21;5598:6;5633;5627:13;5664:6;5656;5649:22;5702:2;5691:9;5687:18;5680:25;;5764:2;5754:6;5751:1;5747:14;5736:9;5732:30;5728:39;5714:53;;5802:2;5794:6;5790:15;5823:1;5833:255;5847:6;5844:1;5841:13;5833:255;;;5940:2;5936:7;5924:9;5916:6;5912:22;5908:36;5903:3;5896:49;5968:40;6001:6;5992;5986:13;5968:40;:::i;:::-;5958:50;-1:-1:-1;6066:12:34;;;;6031:15;;;;5869:1;5862:9;5833:255;;;-1:-1:-1;6105:6:34;;5314:803;-1:-1:-1;;;;;;;5314:803:34:o;7838:380::-;7917:1;7913:12;;;;7960;;;7981:61;;8035:4;8027:6;8023:17;8013:27;;7981:61;8088:2;8080:6;8077:14;8057:18;8054:38;8051:161;;8134:10;8129:3;8125:20;8122:1;8115:31;8169:4;8166:1;8159:15;8197:4;8194:1;8187:15;8051:161;;7838:380;;;:::o;8348:1079::-;8432:12;;8397:3;;8487:1;8507:18;;;;8560;;;;8587:61;;8641:4;8633:6;8629:17;8619:27;;8587:61;8667:2;8715;8707:6;8704:14;8684:18;8681:38;8678:161;;8761:10;8756:3;8752:20;8749:1;8742:31;8796:4;8793:1;8786:15;8824:4;8821:1;8814:15;8678:161;112:19;;;164:4;155:14;;8936:18;8963:132;;;;9109:1;9104:317;;;;8929:492;;8963:132;-1:-1:-1;;8998:24:34;;8984:39;;9068:14;;9061:22;9058:1;9054:30;9043:42;;;-1:-1:-1;8963:132:34;;9104:317;8295:1;8288:14;;;8332:4;8319:18;;9197:1;9211:167;9225:6;9222:1;9219:13;9211:167;;;9305:14;;9290:13;;;9283:37;9348:16;;;;9240:10;;9211:167;;;9398:13;;;-1:-1:-1;;8929:492:34;;;;;;;;8348:1079;;;;:::o;9432:1027::-;9885:22;9881:27;9873:6;9869:40;9858:9;9851:59;9946:3;9941:2;9930:9;9926:18;9919:31;9832:4;9973:53;10021:3;10010:9;10006:19;9998:6;9973:53;:::i;:::-;10091:1;10087;10082:3;10078:11;10074:19;10066:6;10062:32;10057:2;10046:9;10042:18;10035:60;10126:9;10118:6;10114:22;10172:2;10167;10156:9;10152:18;10145:30;10199:1;10191:6;10184:17;-1:-1:-1;;;10229:2:34;10221:6;10217:15;10210:32;10287:2;10283;10279:11;10273:3;10262:9;10258:19;10251:40;;10324:1;10319:2;10311:6;10307:15;10300:26;-1:-1:-1;;;10354:2:34;10346:6;10342:15;10335:30;10394:3;10386:6;10382:16;10374:24;;;10447:4;10439:6;10435:17;10429:3;10418:9;10414:19;10407:46;9432:1027;;;;;;;:::o;11434:609::-;-1:-1:-1;;;;;11738:15:34;;;11720:34;;11790:15;;11785:2;11770:18;;11763:43;11837:2;11822:18;;11815:34;;;-1:-1:-1;;11885:40:34;;11880:2;11865:18;;11858:68;11700:3;11957;11942:19;;11935:32;;;11663:4;;11984:53;;12017:19;;12009:6;11984:53;:::i;:::-;11976:61;11434:609;-1:-1:-1;;;;;;;11434:609:34:o;12660:424::-;12876:22;12872:27;12864:6;12860:40;12849:9;12842:59;12937:2;12932;12921:9;12917:18;12910:30;12823:4;12957:52;13005:2;12994:9;12990:18;12982:6;12957:52;:::i;:::-;12949:60;;13074:1;13070;13065:3;13061:11;13057:19;13049:6;13045:32;13040:2;13029:9;13025:18;13018:60;12660:424;;;;;;:::o;13089:184::-;13159:6;13212:2;13200:9;13191:7;13187:23;13183:32;13180:52;;;13228:1;13225;13218:12;13180:52;-1:-1:-1;13251:16:34;;13089:184;-1:-1:-1;13089:184:34:o;13686:671::-;-1:-1:-1;;;;;13965:32:34;;13947:51;;13985:3;14029:2;14014:18;;14007:31;;;-1:-1:-1;;14061:53:34;;14094:19;;14086:6;14061:53;:::i;:::-;14150:6;14145:2;14134:9;14130:18;14123:34;14209:22;14205:27;14197:6;14193:40;14188:2;14177:9;14173:18;14166:68;14283:9;14275:6;14271:22;14265:3;14254:9;14250:19;14243:51;14311:40;14344:6;14336;14311:40;:::i;:::-;14303:48;13686:671;-1:-1:-1;;;;;;;;13686:671:34:o;14721:315::-;-1:-1:-1;;;;;14896:32:34;;14878:51;;14965:2;14960;14945:18;;14938:30;;;-1:-1:-1;;14985:45:34;;15011:18;;15003:6;14985:45;:::i;:::-;14977:53;14721:315;-1:-1:-1;;;;14721:315:34:o;17920:384::-;-1:-1:-1;;;;;;18105:33:34;;18093:46;;18162:13;;18075:3;;18184:74;18162:13;18247:1;18238:11;;18231:4;18219:17;;18184:74;:::i;:::-;18278:16;;;;18296:1;18274:24;;17920:384;-1:-1:-1;;;17920:384:34:o;18309:287::-;18438:3;18476:6;18470:13;18492:66;18551:6;18546:3;18539:4;18531:6;18527:17;18492:66;:::i;:::-;18574:16;;;;;18309:287;-1:-1:-1;;18309:287:34:o;18601:277::-;18668:6;18721:2;18709:9;18700:7;18696:23;18692:32;18689:52;;;18737:1;18734;18727:12;18689:52;18769:9;18763:16;18822:5;18815:13;18808:21;18801:5;18798:32;18788:60;;18844:1;18841;18834:12;19855:395;20058:22;20054:27;20046:6;20042:40;20037:3;20030:53;20012:3;20112:6;20106:13;20128:75;20196:6;20191:2;20186:3;20182:12;20175:4;20167:6;20163:17;20128:75;:::i;:::-;20223:16;;;;20241:2;20219:25;;19855:395;-1:-1:-1;;;19855:395:34:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "content()": "8a4d5a67",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "kernel()": "d4aae0c4",
    "receiver()": "f7260d3e",
    "receiver22()": "392c1722",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_InboxDepositCallsTokenMint()": "d92cb6ed",
    "test_RevertWhen_WithdrawMoreThanTicketBalance()": "195665d6",
    "test_ShouldDecreaseTicketBalanceOfTokenIfWithdrawSucceed()": "995d3727",
    "test_ShouldEmitDepositEventOnDeposit()": "0cb5a9d4",
    "test_ShouldEmitWithdrawEventOnWithdraw()": "3abe0e3c",
    "test_ShouldIncreaseTicketBalanceOfTokenIfDepositSucceed()": "9e871ec0",
    "test_WithdrawCallsTokenBurn()": "2565ec24",
    "ticketHash()": "76822969",
    "ticketer()": "3f70f347",
    "token()": "fc0c546a",
    "wrongContent()": "56342f63",
    "wrongTicketer()": "4f6c39bb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketHash\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ticketOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inboxLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inboxMsgId\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketHash\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ticketOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes22\",\"name\":\"receiver\",\"type\":\"bytes22\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalId\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"content\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract KernelMock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver22\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_InboxDepositCallsTokenMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_RevertWhen_WithdrawMoreThanTicketBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ShouldDecreaseTicketBalanceOfTokenIfWithdrawSucceed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ShouldEmitDepositEventOnDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ShouldEmitWithdrawEventOnWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ShouldIncreaseTicketBalanceOfTokenIfDepositSucceed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_WithdrawCallsTokenBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketer\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20Proxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrongContent\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrongTicketer\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Deposit(uint256,address,address,uint256,uint256,uint256)\":{\"params\":{\"amount\":\"Amount of tokens deposited.\",\"inboxLevel\":\"The level at which the deposit was included in the rollup inbox.\",\"inboxMsgId\":\"Inbox message identifier in the rollup inbox at the given level.\",\"receiver\":\"L2 address receiving the tokens.\",\"ticketHash\":\"Unique identifier for the deposited ticket.\",\"ticketOwner\":\"L2 owner who receiving the ticket.\"}},\"Withdrawal(uint256,address,address,bytes22,uint256,uint256)\":{\"params\":{\"amount\":\"Amount of tokens being withdrawn.\",\"receiver\":\"Encoded L1 address designated to receive the withdrawn amount.\",\"sender\":\"Address that initiated the withdrawal request.\",\"ticketHash\":\"Unique identifier for the withdrawal ticket.\",\"ticketOwner\":\"Owner of the ticket on L2, could be the sender or an L2 proxy contract.\",\"withdrawalId\":\"Unique identifier for the withdrawal message, facilitating tracking.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(uint256,address,address,uint256,uint256,uint256)\":{\"notice\":\"Indicates a deposit from L1 to L2.\"},\"Withdrawal(uint256,address,address,bytes22,uint256,uint256)\":{\"notice\":\"Indicates a withdrawal from L2 to L1.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/KernelMock.t.sol\":\"KernelTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\"lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85\",\"dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9\",\"dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/ERC20Proxy.sol\":{\"keccak256\":\"0x5d050db8f294c9423f0fe6c559de8831d663f15f77410e7f143e201b6cae7a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ac867cb5aff71f60fe40e5551215951338c333ce2390311f677dc291cda2af\",\"dweb:/ipfs/QmQKVAP9XBuvGuwzmxRRWayDj8kX1s5AaCaqxdRPJJTZoZ\"]},\"src/IDepositEvent.sol\":{\"keccak256\":\"0x2ee2f29720073433a67601d155e57ecab4d3805a60a99f7505df55fd06e50b43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93934f97d78286db35c6d103d24a058f8a6d481eee3ec0324cf9d0d8b1e83b5a\",\"dweb:/ipfs/QmYtDQmUte2EqhFZxEHZeBSw7KVTmBFx6HHNv43R6X2BPS\"]},\"src/IWithdrawalEvent.sol\":{\"keccak256\":\"0x4c31c398bde6481ff2d53a59be280fdeffbe5bb6f70b9afbc2197d9dc9ba0ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cf330488f1df81e3ebb40c397c21d8ba50418cba2f4e86dcaecfcb3081c5d85\",\"dweb:/ipfs/QmXKXPiN8DxgEobpsq1m4krKkw7J2ng77zARtMCZgcH9Rh\"]},\"src/KernelMock.sol\":{\"keccak256\":\"0x2b5bbfe00f1191024af2b819b78b69abcc48d890e724d4919b07e44d43ad9934\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://691cf5290bd203356ff25e1c7fd2c301125f09080dd8a2dc28fa6b9c6ebd8371\",\"dweb:/ipfs/QmTYyRiruQoj6xKffsZZJZxSUKm9e32kAR1NaJCGePj8J1\"]},\"test/Base.t.sol\":{\"keccak256\":\"0x691c6c3ddb55cd866c3f60ffc58051bbc183a95a3ff253c1d1e45bb605530313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc48f4f8796dc850b8f8394ddf8717e93e8a526aabeb8663936248edfad45fa\",\"dweb:/ipfs/QmcbU5r1zSFqPktnLLT6dGEp2V4B1pVjwmkCqMuNq9vbUA\"]},\"test/KernelMock.t.sol\":{\"keccak256\":\"0x425908ddd6f5ef402269d80cae1886a7352bb054bf56f672d727b5853def0d07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb54d5abcd97d9099eaa8a1f272026cf958c304acca47c933f54ecb4e5579af\",\"dweb:/ipfs/QmRSkRUx7QtPDXortsA8fEuKqV3zXZeSTWkuMoNM3rLZzX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ticketHash",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "ticketOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "inboxLevel",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "inboxMsgId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ticketHash",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "ticketOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes22",
              "name": "receiver",
              "type": "bytes22",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "withdrawalId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "content",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract KernelMock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiver",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiver22",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_InboxDepositCallsTokenMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_RevertWhen_WithdrawMoreThanTicketBalance"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ShouldDecreaseTicketBalanceOfTokenIfWithdrawSucceed"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ShouldEmitDepositEventOnDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ShouldEmitWithdrawEventOnWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ShouldIncreaseTicketBalanceOfTokenIfDepositSucceed"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_WithdrawCallsTokenBurn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ticketHash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ticketer",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract ERC20Proxy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrongContent",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrongTicketer",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/KernelMock.t.sol": "KernelTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a",
        "urls": [
          "bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85",
          "dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9",
        "urls": [
          "bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9",
          "dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/ERC20Proxy.sol": {
        "keccak256": "0x5d050db8f294c9423f0fe6c559de8831d663f15f77410e7f143e201b6cae7a3f",
        "urls": [
          "bzz-raw://f0ac867cb5aff71f60fe40e5551215951338c333ce2390311f677dc291cda2af",
          "dweb:/ipfs/QmQKVAP9XBuvGuwzmxRRWayDj8kX1s5AaCaqxdRPJJTZoZ"
        ],
        "license": "MIT"
      },
      "src/IDepositEvent.sol": {
        "keccak256": "0x2ee2f29720073433a67601d155e57ecab4d3805a60a99f7505df55fd06e50b43",
        "urls": [
          "bzz-raw://93934f97d78286db35c6d103d24a058f8a6d481eee3ec0324cf9d0d8b1e83b5a",
          "dweb:/ipfs/QmYtDQmUte2EqhFZxEHZeBSw7KVTmBFx6HHNv43R6X2BPS"
        ],
        "license": "MIT"
      },
      "src/IWithdrawalEvent.sol": {
        "keccak256": "0x4c31c398bde6481ff2d53a59be280fdeffbe5bb6f70b9afbc2197d9dc9ba0ca0",
        "urls": [
          "bzz-raw://7cf330488f1df81e3ebb40c397c21d8ba50418cba2f4e86dcaecfcb3081c5d85",
          "dweb:/ipfs/QmXKXPiN8DxgEobpsq1m4krKkw7J2ng77zARtMCZgcH9Rh"
        ],
        "license": "MIT"
      },
      "src/KernelMock.sol": {
        "keccak256": "0x2b5bbfe00f1191024af2b819b78b69abcc48d890e724d4919b07e44d43ad9934",
        "urls": [
          "bzz-raw://691cf5290bd203356ff25e1c7fd2c301125f09080dd8a2dc28fa6b9c6ebd8371",
          "dweb:/ipfs/QmTYyRiruQoj6xKffsZZJZxSUKm9e32kAR1NaJCGePj8J1"
        ],
        "license": "MIT"
      },
      "test/Base.t.sol": {
        "keccak256": "0x691c6c3ddb55cd866c3f60ffc58051bbc183a95a3ff253c1d1e45bb605530313",
        "urls": [
          "bzz-raw://6bc48f4f8796dc850b8f8394ddf8717e93e8a526aabeb8663936248edfad45fa",
          "dweb:/ipfs/QmcbU5r1zSFqPktnLLT6dGEp2V4B1pVjwmkCqMuNq9vbUA"
        ],
        "license": "MIT"
      },
      "test/KernelMock.t.sol": {
        "keccak256": "0x425908ddd6f5ef402269d80cae1886a7352bb054bf56f672d727b5853def0d07",
        "urls": [
          "bzz-raw://bcb54d5abcd97d9099eaa8a1f272026cf958c304acca47c933f54ecb4e5579af",
          "dweb:/ipfs/QmRSkRUx7QtPDXortsA8fEuKqV3zXZeSTWkuMoNM3rLZzX"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/KernelMock.t.sol",
    "id": 46033,
    "exportedSymbols": {
      "BaseTest": [
        44991
      ],
      "IDepositEvent": [
        44400
      ],
      "IWithdrawalEvent": [
        44419
      ],
      "KernelTest": [
        46032
      ],
      "hashTicket": [
        44245
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3294:33",
    "nodes": [
      {
        "id": 45614,
        "nodeType": "PragmaDirective",
        "src": "32:24:33",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 45616,
        "nodeType": "ImportDirective",
        "src": "58:38:33",
        "nodes": [],
        "absolutePath": "test/Base.t.sol",
        "file": "./Base.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46033,
        "sourceUnit": 44992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45615,
              "name": "BaseTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44991,
              "src": "66:8:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45618,
        "nodeType": "ImportDirective",
        "src": "97:49:33",
        "nodes": [],
        "absolutePath": "src/ERC20Proxy.sol",
        "file": "../src/ERC20Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46033,
        "sourceUnit": 44382,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45617,
              "name": "hashTicket",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44245,
              "src": "105:10:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45620,
        "nodeType": "ImportDirective",
        "src": "147:61:33",
        "nodes": [],
        "absolutePath": "src/IWithdrawalEvent.sol",
        "file": "../src/IWithdrawalEvent.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46033,
        "sourceUnit": 44420,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45619,
              "name": "IWithdrawalEvent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44419,
              "src": "155:16:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45622,
        "nodeType": "ImportDirective",
        "src": "209:55:33",
        "nodes": [],
        "absolutePath": "src/IDepositEvent.sol",
        "file": "../src/IDepositEvent.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46033,
        "sourceUnit": 44401,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45621,
              "name": "IDepositEvent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44400,
              "src": "217:13:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46032,
        "nodeType": "ContractDefinition",
        "src": "266:3059:33",
        "nodes": [
          {
            "id": 45668,
            "nodeType": "FunctionDefinition",
            "src": "337:300:33",
            "nodes": [],
            "body": {
              "id": 45667,
              "nodeType": "Block",
              "src": "411:226:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45636,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "449:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "441:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45634,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "441:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "441:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45638,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "457:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "464:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45640,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "469:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45641,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "479:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45631,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "421:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "428:12:33",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "421:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "421:66:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45643,
                  "nodeType": "ExpressionStatement",
                  "src": "421:66:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45647,
                            "name": "ticketer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44912,
                            "src": "524:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            }
                          },
                          {
                            "id": 45648,
                            "name": "content",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44924,
                            "src": "534:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 45651,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44889,
                                "src": "551:5:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              ],
                              "id": 45650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "543:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45649,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "543:7:33",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "543:14:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            },
                            {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45645,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "506:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          },
                          "id": 45646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "513:10:33",
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44561,
                          "src": "506:17:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes22_$_t_bytes_memory_ptr_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (bytes22,bytes memory,address) view external returns (uint256)"
                          }
                        },
                        "id": 45653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "506:52:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "560:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 45644,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "497:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "497:67:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45656,
                  "nodeType": "ExpressionStatement",
                  "src": "497:67:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45660,
                            "name": "ticketer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44912,
                            "src": "601:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            }
                          },
                          {
                            "id": 45661,
                            "name": "content",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44924,
                            "src": "611:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          {
                            "id": 45662,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44898,
                            "src": "620:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            },
                            {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45658,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "583:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          },
                          "id": 45659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "590:10:33",
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44561,
                          "src": "583:17:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes22_$_t_bytes_memory_ptr_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (bytes22,bytes memory,address) view external returns (uint256)"
                          }
                        },
                        "id": 45663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "583:43:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "628:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 45657,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "574:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "574:56:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45666,
                  "nodeType": "ExpressionStatement",
                  "src": "574:56:33"
                }
              ]
            },
            "functionSelector": "9e871ec0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ShouldIncreaseTicketBalanceOfTokenIfDepositSucceed",
            "nameLocation": "346:55:33",
            "parameters": {
              "id": 45629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:2:33"
            },
            "returnParameters": {
              "id": 45630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:0:33"
            },
            "scope": 46032,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45753,
            "nodeType": "FunctionDefinition",
            "src": "643:563:33",
            "nodes": [],
            "body": {
              "id": 45752,
              "nodeType": "Block",
              "src": "730:476:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45674,
                            "name": "ticketer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44912,
                            "src": "767:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            }
                          },
                          {
                            "id": 45675,
                            "name": "content",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44924,
                            "src": "777:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 45678,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44889,
                                "src": "794:5:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              ],
                              "id": 45677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "786:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45676,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "786:7:33",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "786:14:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            },
                            {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45672,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "749:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          },
                          "id": 45673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "756:10:33",
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44561,
                          "src": "749:17:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes22_$_t_bytes_memory_ptr_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (bytes22,bytes memory,address) view external returns (uint256)"
                          }
                        },
                        "id": 45680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "749:52:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "803:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 45671,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "740:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "740:65:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45683,
                  "nodeType": "ExpressionStatement",
                  "src": "740:65:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45689,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "843:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "835:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "835:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "835:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45691,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "851:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "858:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45693,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "863:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45694,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "873:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45684,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "815:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "822:12:33",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "815:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "815:66:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45696,
                  "nodeType": "ExpressionStatement",
                  "src": "815:66:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45700,
                            "name": "ticketer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44912,
                            "src": "918:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            }
                          },
                          {
                            "id": 45701,
                            "name": "content",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44924,
                            "src": "928:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 45704,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44889,
                                "src": "945:5:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              ],
                              "id": 45703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "937:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45702,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "937:7:33",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "937:14:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            },
                            {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45698,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "900:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          },
                          "id": 45699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "907:10:33",
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44561,
                          "src": "900:17:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes22_$_t_bytes_memory_ptr_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (bytes22,bytes memory,address) view external returns (uint256)"
                          }
                        },
                        "id": 45706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "900:52:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "954:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 45697,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "891:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "891:67:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45709,
                  "nodeType": "ExpressionStatement",
                  "src": "891:67:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45713,
                            "name": "ticketer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44912,
                            "src": "995:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            }
                          },
                          {
                            "id": 45714,
                            "name": "content",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44924,
                            "src": "1005:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          {
                            "id": 45715,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44898,
                            "src": "1014:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            },
                            {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45711,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "977:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          },
                          "id": 45712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "984:10:33",
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44561,
                          "src": "977:17:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes22_$_t_bytes_memory_ptr_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (bytes22,bytes memory,address) view external returns (uint256)"
                          }
                        },
                        "id": 45716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "977:43:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1022:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 45710,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "968:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:56:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45719,
                  "nodeType": "ExpressionStatement",
                  "src": "968:56:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45723,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "1043:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45720,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1034:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1037:5:33",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "1034:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:15:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45725,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:15:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45731,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1083:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1075:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45729,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1075:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1075:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45733,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44936,
                        "src": "1091:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "3430",
                        "id": 45734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1101:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        },
                        "value": "40"
                      },
                      {
                        "id": 45735,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "1105:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45736,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "1115:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45726,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "1059:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1066:8:33",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44695,
                      "src": "1059:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:64:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45738,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:64:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45742,
                            "name": "ticketer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44912,
                            "src": "1160:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            }
                          },
                          {
                            "id": 45743,
                            "name": "content",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44924,
                            "src": "1170:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 45746,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44889,
                                "src": "1187:5:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              ],
                              "id": 45745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1179:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45744,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1179:7:33",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1179:14:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            },
                            {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45740,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "1142:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          },
                          "id": 45741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1149:10:33",
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44561,
                          "src": "1142:17:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes22_$_t_bytes_memory_ptr_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (bytes22,bytes memory,address) view external returns (uint256)"
                          }
                        },
                        "id": 45748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1142:52:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3630",
                        "id": 45749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1196:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        }
                      ],
                      "id": 45739,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1133:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1133:66:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45751,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:66:33"
                }
              ]
            },
            "functionSelector": "995d3727",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ShouldDecreaseTicketBalanceOfTokenIfWithdrawSucceed",
            "nameLocation": "652:56:33",
            "parameters": {
              "id": 45669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "708:2:33"
            },
            "returnParameters": {
              "id": 45670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "730:0:33"
            },
            "scope": 46032,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45811,
            "nodeType": "FunctionDefinition",
            "src": "1212:394:33",
            "nodes": [],
            "body": {
              "id": 45810,
              "nodeType": "Block",
              "src": "1276:330:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45761,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1314:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1306:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45759,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1306:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1306:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45763,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44904,
                        "src": "1322:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1327:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 45765,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "1330:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45766,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "1340:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45756,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "1286:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1293:12:33",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "1286:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1286:62:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45768,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:62:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45772,
                            "name": "ticketer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44912,
                            "src": "1385:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            }
                          },
                          {
                            "id": 45773,
                            "name": "content",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44924,
                            "src": "1395:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 45776,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44889,
                                "src": "1412:5:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              ],
                              "id": 45775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1404:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45774,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1404:7:33",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1404:14:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            },
                            {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45770,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "1367:6:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          },
                          "id": 45771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1374:10:33",
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44561,
                          "src": "1367:17:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes22_$_t_bytes_memory_ptr_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (bytes22,bytes memory,address) view external returns (uint256)"
                          }
                        },
                        "id": 45778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1367:52:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1421:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 45769,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1358:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:65:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45781,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:65:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45787,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44898,
                            "src": "1450:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1442:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45785,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1442:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1442:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45782,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1433:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1436:5:33",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "1433:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1433:24:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45790,
                  "nodeType": "ExpressionStatement",
                  "src": "1433:24:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4b65726e656c4d6f636b3a207469636b65742062616c616e6365206973206e6f7420656e6f756768",
                        "id": 45794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1483:42:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e52b298d56fed5d6b5121c4d70fa657d61d7a4290adfd22da47b4d4acfc6355",
                          "typeString": "literal_string \"KernelMock: ticket balance is not enough\""
                        },
                        "value": "KernelMock: ticket balance is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3e52b298d56fed5d6b5121c4d70fa657d61d7a4290adfd22da47b4d4acfc6355",
                          "typeString": "literal_string \"KernelMock: ticket balance is not enough\""
                        }
                      ],
                      "expression": {
                        "id": 45791,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1467:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1470:12:33",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13546,
                      "src": "1467:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:59:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45796,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:59:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45802,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1560:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1552:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45800,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1552:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1552:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45804,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44936,
                        "src": "1568:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 45805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1578:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "id": 45806,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "1581:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45807,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "1591:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45797,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "1536:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1543:8:33",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44695,
                      "src": "1536:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1536:63:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45809,
                  "nodeType": "ExpressionStatement",
                  "src": "1536:63:33"
                }
              ]
            },
            "functionSelector": "195665d6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_RevertWhen_WithdrawMoreThanTicketBalance",
            "nameLocation": "1221:45:33",
            "parameters": {
              "id": 45754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1266:2:33"
            },
            "returnParameters": {
              "id": 45755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1276:0:33"
            },
            "scope": 46032,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45885,
            "nodeType": "FunctionDefinition",
            "src": "1612:479:33",
            "nodes": [],
            "body": {
              "id": 45884,
              "nodeType": "Block",
              "src": "1658:433:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45819,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1696:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1688:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45817,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1688:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1688:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45821,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "1704:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1711:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45823,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "1716:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45824,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "1726:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45814,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "1668:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1675:12:33",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "1668:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1668:66:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45826,
                  "nodeType": "ExpressionStatement",
                  "src": "1668:66:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45830,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44898,
                            "src": "1769:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45828,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1753:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1759:9:33",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43418,
                          "src": "1753:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1753:22:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1777:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 45827,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1744:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1744:37:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45834,
                  "nodeType": "ExpressionStatement",
                  "src": "1744:37:33"
                },
                {
                  "assignments": [
                    45836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45836,
                      "mutability": "mutable",
                      "name": "expectedData",
                      "nameLocation": "1804:12:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 45884,
                      "src": "1791:25:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 45835,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1791:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45846,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45839,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44889,
                          "src": "1846:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                            "typeString": "contract ERC20Proxy"
                          }
                        },
                        "id": 45840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1852:8:33",
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44361,
                        "src": "1846:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256,uint256) external"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 45841,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44898,
                            "src": "1863:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "3530",
                            "id": 45842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1870:2:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          {
                            "id": 45843,
                            "name": "ticketHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44906,
                            "src": "1874:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 45844,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1862:23:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_50_by_1_$_t_uint256_$",
                          "typeString": "tuple(address,int_const 50,uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256,uint256) external"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_50_by_1_$_t_uint256_$",
                          "typeString": "tuple(address,int_const 50,uint256)"
                        }
                      ],
                      "expression": {
                        "id": 45837,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1831:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 45838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1835:10:33",
                      "memberName": "encodeCall",
                      "nodeType": "MemberAccess",
                      "src": "1831:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 45845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1831:55:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1791:95:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45852,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1918:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1910:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45850,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1910:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1910:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45854,
                        "name": "expectedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45836,
                        "src": "1926:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45847,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1896:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1899:10:33",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13636,
                      "src": "1896:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:43:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45856,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:43:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45860,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "1958:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45857,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1949:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1952:5:33",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "1949:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1949:15:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45862,
                  "nodeType": "ExpressionStatement",
                  "src": "1949:15:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45868,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1998:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1990:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45866,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1990:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1990:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45870,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44936,
                        "src": "2006:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 45871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2016:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      },
                      {
                        "id": 45872,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "2020:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45873,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "2030:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45863,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "1974:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1981:8:33",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44695,
                      "src": "1974:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1974:64:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45875,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:64:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45879,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44898,
                            "src": "2073:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45877,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "2057:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2063:9:33",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43418,
                          "src": "2057:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2057:22:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 45881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2081:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "id": 45876,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2048:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:36:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45883,
                  "nodeType": "ExpressionStatement",
                  "src": "2048:36:33"
                }
              ]
            },
            "functionSelector": "2565ec24",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_WithdrawCallsTokenBurn",
            "nameLocation": "1621:27:33",
            "parameters": {
              "id": 45812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1648:2:33"
            },
            "returnParameters": {
              "id": 45813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1658:0:33"
            },
            "scope": 46032,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45924,
            "nodeType": "FunctionDefinition",
            "src": "2097:289:33",
            "nodes": [],
            "body": {
              "id": 45923,
              "nodeType": "Block",
              "src": "2147:239:33",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45889,
                      "mutability": "mutable",
                      "name": "expectedData",
                      "nameLocation": "2170:12:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 45923,
                      "src": "2157:25:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 45888,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2157:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45899,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45892,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44889,
                          "src": "2212:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                            "typeString": "contract ERC20Proxy"
                          }
                        },
                        "id": 45893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2218:7:33",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44340,
                        "src": "2212:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256,uint256) external"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 45894,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44898,
                            "src": "2228:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "3731",
                            "id": 45895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2235:2:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_71_by_1",
                              "typeString": "int_const 71"
                            },
                            "value": "71"
                          },
                          {
                            "id": 45896,
                            "name": "ticketHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44906,
                            "src": "2239:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 45897,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2227:23:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_71_by_1_$_t_uint256_$",
                          "typeString": "tuple(address,int_const 71,uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256,uint256) external"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_71_by_1_$_t_uint256_$",
                          "typeString": "tuple(address,int_const 71,uint256)"
                        }
                      ],
                      "expression": {
                        "id": 45890,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2197:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 45891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2201:10:33",
                      "memberName": "encodeCall",
                      "nodeType": "MemberAccess",
                      "src": "2197:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 45898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2197:54:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2157:94:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45905,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "2283:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2275:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45903,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2275:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2275:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45907,
                        "name": "expectedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45889,
                        "src": "2291:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45900,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "2261:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2264:10:33",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13636,
                      "src": "2261:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2261:43:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45909,
                  "nodeType": "ExpressionStatement",
                  "src": "2261:43:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45915,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "2342:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2334:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45913,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2334:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2334:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45917,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "2350:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3731",
                        "id": 45918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2357:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_71_by_1",
                          "typeString": "int_const 71"
                        },
                        "value": "71"
                      },
                      {
                        "id": 45919,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "2361:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45920,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "2371:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_71_by_1",
                          "typeString": "int_const 71"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45910,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "2314:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2321:12:33",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "2314:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2314:65:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45922,
                  "nodeType": "ExpressionStatement",
                  "src": "2314:65:33"
                }
              ]
            },
            "functionSelector": "d92cb6ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_InboxDepositCallsTokenMint",
            "nameLocation": "2106:31:33",
            "parameters": {
              "id": 45886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2137:2:33"
            },
            "returnParameters": {
              "id": 45887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2147:0:33"
            },
            "scope": 46032,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45970,
            "nodeType": "FunctionDefinition",
            "src": "2392:425:33",
            "nodes": [],
            "body": {
              "id": 45969,
              "nodeType": "Block",
              "src": "2447:370:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 45930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2543:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2549:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2555:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2561:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 45927,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "2529:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2532:10:33",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "2529:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 45934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2529:37:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45935,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:37:33"
                },
                {
                  "assignments": [
                    45937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45937,
                      "mutability": "mutable",
                      "name": "inboxLevel",
                      "nameLocation": "2584:10:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 45969,
                      "src": "2576:18:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45936,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2576:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45939,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 45938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2597:1:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2576:22:33"
                },
                {
                  "assignments": [
                    45941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45941,
                      "mutability": "mutable",
                      "name": "inboxMsgId",
                      "nameLocation": "2616:10:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 45969,
                      "src": "2608:18:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45940,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2608:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45943,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 45942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2629:1:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2608:22:33"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45945,
                        "name": "ticketHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44906,
                        "src": "2666:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45948,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "2686:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2678:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45946,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2678:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2678:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45950,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44904,
                        "src": "2694:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2699:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45952,
                        "name": "inboxLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45937,
                        "src": "2704:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45953,
                        "name": "inboxMsgId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45941,
                        "src": "2716:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45944,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44399,
                      "src": "2645:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 45954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2645:91:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45955,
                  "nodeType": "EmitStatement",
                  "src": "2640:96:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45961,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "2774:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2766:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45959,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2766:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2766:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45963,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44904,
                        "src": "2782:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2787:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45965,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "2792:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45966,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "2802:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45956,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "2746:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2753:12:33",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "2746:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2746:64:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45968,
                  "nodeType": "ExpressionStatement",
                  "src": "2746:64:33"
                }
              ]
            },
            "functionSelector": "0cb5a9d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ShouldEmitDepositEventOnDeposit",
            "nameLocation": "2401:36:33",
            "parameters": {
              "id": 45925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2437:2:33"
            },
            "returnParameters": {
              "id": 45926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2447:0:33"
            },
            "scope": 46032,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46031,
            "nodeType": "FunctionDefinition",
            "src": "2823:500:33",
            "nodes": [],
            "body": {
              "id": 46030,
              "nodeType": "Block",
              "src": "2880:443:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45978,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "2918:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2910:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45976,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2910:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2910:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45980,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44904,
                        "src": "2926:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2931:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45982,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "2936:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45983,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "2946:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45973,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "2890:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2897:12:33",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "2890:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2890:64:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45985,
                  "nodeType": "ExpressionStatement",
                  "src": "2890:64:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45989,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44904,
                        "src": "2973:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45986,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "2964:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2967:5:33",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "2964:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2964:13:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45991,
                  "nodeType": "ExpressionStatement",
                  "src": "2964:13:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 45995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3073:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3079:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3085:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3091:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 45992,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "3059:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3062:10:33",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "3059:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 45999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3059:37:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46000,
                  "nodeType": "ExpressionStatement",
                  "src": "3059:37:33"
                },
                {
                  "assignments": [
                    46002
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46002,
                      "mutability": "mutable",
                      "name": "withdrawalId",
                      "nameLocation": "3114:12:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 46030,
                      "src": "3106:20:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46001,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3106:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46004,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 46003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3129:1:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3106:24:33"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46006,
                        "name": "ticketHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44906,
                        "src": "3169:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46007,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44904,
                        "src": "3181:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46010,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "3194:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 46009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3186:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46008,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3186:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3186:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46012,
                        "name": "receiver22",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44942,
                        "src": "3202:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 46013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3214:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 46014,
                        "name": "withdrawalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46002,
                        "src": "3219:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46005,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44418,
                      "src": "3145:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_bytes22_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,bytes22,uint256,uint256)"
                      }
                    },
                    "id": 46015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3145:96:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46016,
                  "nodeType": "EmitStatement",
                  "src": "3140:101:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46022,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "3275:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 46021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3267:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46020,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3267:7:33",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3267:14:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46024,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44936,
                        "src": "3283:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 46025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3293:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 46026,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "3298:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 46027,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "3308:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 46017,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "3251:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 46019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3258:8:33",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44695,
                      "src": "3251:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 46028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3251:65:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46029,
                  "nodeType": "ExpressionStatement",
                  "src": "3251:65:33"
                }
              ]
            },
            "functionSelector": "3abe0e3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ShouldEmitWithdrawEventOnWithdraw",
            "nameLocation": "2832:38:33",
            "parameters": {
              "id": 45971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2870:2:33"
            },
            "returnParameters": {
              "id": 45972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2880:0:33"
            },
            "scope": 46032,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45623,
              "name": "BaseTest",
              "nameLocations": [
                "289:8:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44991,
              "src": "289:8:33"
            },
            "id": 45624,
            "nodeType": "InheritanceSpecifier",
            "src": "289:8:33"
          },
          {
            "baseName": {
              "id": 45625,
              "name": "IWithdrawalEvent",
              "nameLocations": [
                "299:16:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44419,
              "src": "299:16:33"
            },
            "id": 45626,
            "nodeType": "InheritanceSpecifier",
            "src": "299:16:33"
          },
          {
            "baseName": {
              "id": 45627,
              "name": "IDepositEvent",
              "nameLocations": [
                "317:13:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44400,
              "src": "317:13:33"
            },
            "id": 45628,
            "nodeType": "InheritanceSpecifier",
            "src": "317:13:33"
          }
        ],
        "canonicalName": "KernelTest",
        "contractDependencies": [
          44381,
          44702
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46032,
          44400,
          44419,
          44991,
          12199,
          12148,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "KernelTest",
        "nameLocation": "275:10:33",
        "scope": 46033,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410,
          44399,
          44418
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 33
}