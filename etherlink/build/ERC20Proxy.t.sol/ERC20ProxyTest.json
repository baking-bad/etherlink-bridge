{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "content",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract KernelMock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver22",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BridgeCanBurnToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BridgeCanMintToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_RevertWhen_AliceTriesBurnToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_RevertWhen_AliceTriesMintToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_RevertWhen_ContentIsWrongOnBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_RevertWhen_ContentIsWrongOnMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_RevertWhen_TicketerIsWrongOnBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_RevertWhen_TicketerIsWrongOnMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ShouldCalculateCorrectTicketHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ShouldReturnCorrectDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ShouldReturnCorrectTokenHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticketHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticketer",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20Proxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrongContent",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrongTicketer",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "160:3374:32:-:0;;;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;-1:-1:-1;;;;;;326:12:30;;;;168:25:34;326:7:30;;141:18:34;326:12:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;303:35;;;-1:-1:-1;;;;;;303:35:30;-1:-1:-1;;;;;303:35:30;;;;;;;;;;365:12;;-1:-1:-1;;;;;;365:12:30;;373:3;365:12;;;168:25:34;365:7:30;;;;141:18:34;;365:12:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;344:33;;;-1:-1:-1;;;;;;344:33:30;-1:-1:-1;;;;;344:33:30;;;;;;;;;;414:50;;;-1:-1:-1;;;;;;414:50:30;;;;;;;;470:61;;;;;;;;;;560:34;;-1:-1:-1;;;560:34:30;;;891:29:34;936:12;;560:34:30;;;;;;;;;;;;537:57;;;;;;;:::i;:::-;-1:-1:-1;628:42:30;;3888:24:34;628:42:30;;;3876:37:34;3929:12;;628:42:30;;;;;;;;;;;;600:70;;;;;;;:::i;:::-;-1:-1:-1;700:35:30;;;;;;;;;;;;;;;;;676:59;;;;;;:::i;:::-;-1:-1:-1;741:61:30;;;-1:-1:-1;;;;;;741:61:30;;;;;160:3374:32;;;;;;;;;;;;204:290:34;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;369:16;;-1:-1:-1;;;;;414:31:34;;404:42;;394:70;;460:1;457;450:12;394:70;483:5;204:290;-1:-1:-1;;;204:290:34:o;959:127::-;1020:10;1015:3;1011:20;1008:1;1001:31;1051:4;1048:1;1041:15;1075:4;1072:1;1065:15;1091:380;1170:1;1166:12;;;;1213;;;1234:61;;1288:4;1280:6;1276:17;1266:27;;1234:61;1341:2;1333:6;1330:14;1310:18;1307:38;1304:161;;1387:10;1382:3;1378:20;1375:1;1368:31;1422:4;1419:1;1412:15;1450:4;1447:1;1440:15;1304:161;;1091:380;;;:::o;1601:544::-;1702:2;1697:3;1694:11;1691:448;;;1738:1;1763:5;1759:2;1752:17;1808:4;1804:2;1794:19;1878:2;1866:10;1862:19;1859:1;1855:27;1849:4;1845:38;1914:4;1902:10;1899:20;1896:47;;;-1:-1:-1;1937:4:34;1896:47;1992:2;1987:3;1983:12;1980:1;1976:20;1970:4;1966:31;1956:41;;2047:82;2065:2;2058:5;2055:13;2047:82;;;2110:17;;;2091:1;2080:13;2047:82;;;2051:3;;;1691:448;1601:544;;;:::o;2321:1348::-;2439:10;;-1:-1:-1;;;;;2461:30:34;;2458:56;;;2494:18;;:::i;:::-;2523:96;2612:6;2572:38;2604:4;2598:11;2572:38;:::i;:::-;2566:4;2523:96;:::i;:::-;2674:4;;2738:2;2727:14;;2755:1;2750:662;;;;3456:1;3473:6;3470:89;;;-1:-1:-1;3525:19:34;;;3519:26;3470:89;-1:-1:-1;;2278:1:34;2274:11;;;2270:24;2266:29;2256:40;2302:1;2298:11;;;2253:57;3572:81;;2720:943;;2750:662;1548:1;1541:14;;;1585:4;1572:18;;-1:-1:-1;;2786:20:34;;;2903:236;2917:7;2914:1;2911:14;2903:236;;;3006:19;;;3000:26;2985:42;;3098:27;;;;3066:1;3054:14;;;;2933:19;;2903:236;;;2907:3;3167:6;3158:7;3155:19;3152:201;;;3228:19;;;3222:26;-1:-1:-1;;3311:1:34;3307:14;;;3323:3;3303:24;3299:37;3295:42;3280:58;3265:74;;3152:201;-1:-1:-1;;;;;3399:1:34;3383:14;;;3379:22;3366:36;;-1:-1:-1;2321:1348:34:o;3674:273::-;160:3374:32;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "160:3374:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:352:30;;;:::i;:::-;;2452:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;719:346:32:-;;;:::i;741:61:30:-;;;;;;;;;;;;-1:-1:-1;;3285:40:34;;;3267:59;;3255:2;3240:18;741:61:30;3121:211:34;202:261:32;;;:::i;2090:276::-;;;:::i;3221:133:6:-;;;:::i;414:50:30:-;;;;;;;;;2922:141:6;;;:::i;1394:202:32:-;;;:::i;469:244::-;;;:::i;470:61:30:-;;;;;;;;;600:70;;;:::i;:::-;;;;;;;:::i;2738:178:6:-;;;:::i;:::-;;;;;;;:::i;383:25:30:-;;;;;;;;;5278::34;;;5266:2;5251:18;383:25:30;5132:177:34;2592:140:6;;;:::i;:::-;;;;;;;:::i;537:57:30:-;;;:::i;3069:146:6:-;;;:::i;2157:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;6287:14:34;;6280:22;6262:41;;6250:2;6235:18;1819:584:0;6122:187:34;2718:440:32;;;:::i;344:33:30:-;;;;;-1:-1:-1;;;;;344:33:30;;;;;;-1:-1:-1;;;;;6478:32:34;;;6460:51;;6448:2;6433:18;344:33:30;6314:203:34;1809:275:32;;;:::i;273:24:30:-;;;;;-1:-1:-1;;;;;273:24:30;;;3164:368:32;;;:::i;1071:317::-;;;:::i;2304:142:6:-;;;:::i;2372:340:32:-;;;:::i;676:59:30:-;;;:::i;1572:26:0:-;;;;;;;;;303:35:30;;;;;-1:-1:-1;;;;;303:35:30;;;244:23;;;;;-1:-1:-1;;;;;244:23:30;;;1602:201:32;;;:::i;809:352:30:-;852:5;;843:24;;;-1:-1:-1;;;843:24:30;;-1:-1:-1;;;;;852:5:30;;;843:24;;;7190:51:34;7257:18;;;7250:30;7316:1;7296:18;;;7289:29;-1:-1:-1;;;7334:18:34;;;7327:35;-1:-1:-1;;;;;;;;;;;843:8:30;;;7379:19:34;;843:24:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;886:3:30;;877:20;;;-1:-1:-1;;;877:20:30;;-1:-1:-1;;;;;886:3:30;;;877:20;;;7621:51:34;7688:18;;;7681:30;7747:1;7727:18;;;7720:29;-1:-1:-1;;;7765:18:34;;;7758:33;-1:-1:-1;;;;;;;;;;;877:8:30;-1:-1:-1;877:8:30;;-1:-1:-1;7808:19:34;;877:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;916:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;907:6:30;:25;;-1:-1:-1;;;;;;907:25:30;-1:-1:-1;;;;;907:25:30;;;;;;;;;978:8;;950:152;;978:8;;;;;;1000:7;;1090:2;;950:152;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;942:5:30;:160;;-1:-1:-1;;;;;;942:160:30;-1:-1:-1;;;;;942:160:30;;;;;;;;;;1136:8;;1146:7;1125:29;;;;1136:8;;;1146:7;1125:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;:29::i;:::-;1112:10;:42;809:352::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;719:346:32:-;771:6;;799:5;;807:3;;815:8;;771:62;;-1:-1:-1;;;771:62:32;;-1:-1:-1;;;;;771:6:32;;;;:19;;:62;;799:5;;;;807:3;;;771:6;;815:8;;;825:7;;771:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;843:32;852:5;;;;;;;;;-1:-1:-1;;;;;852:5:32;-1:-1:-1;;;;;852:17:32;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;873:1;843:8;:32::i;:::-;894:3;;885:13;;-1:-1:-1;;;885:13:32;;-1:-1:-1;;;;;894:3:32;;;885:13;;;6460:51:34;-1:-1:-1;;;;;;;;;;;885:8:32;;;6433:18:34;;885:13:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;908:6:32;;932:5;;953:8;;908:63;;-1:-1:-1;;;908:63:32;;-1:-1:-1;;;;;908:6:32;;;;-1:-1:-1;908:15:32;;-1:-1:-1;908:63:32;;932:5;;;;940:8;;908:6;;953:8;;;;;;963:7;;908:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;990:5:32;;1006;;990:22;;-1:-1:-1;;;990:22:32;;-1:-1:-1;;;;;1006:5:32;;;990:22;;;6460:51:34;981:35:32;;-1:-1:-1;990:5:32;;;-1:-1:-1;990:15:32;;6433:18:34;;990:22:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1014:1;981:8;:35::i;:::-;1035:5;;:19;;;-1:-1:-1;;;1035:19:32;;;;1026:32;;-1:-1:-1;;;;;1035:5:32;;:17;;:19;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;;;1026:32;719:346::o;202:261::-;263:5;;279;;263:22;;-1:-1:-1;;;263:22:32;;-1:-1:-1;;;;;279:5:32;;;263:22;;;6460:51:34;254:35:32;;263:5;;;;;:15;;6433:18:34;;263:22:32;6314:203:34;254:35:32;299:6;;327:5;;335;;347:8;;299:66;;-1:-1:-1;;;299:66:32;;-1:-1:-1;;;;;299:6:32;;;;:19;;:66;;327:5;;;;335;;;342:3;;347:8;;;357:7;;299:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;384:5:32;;400;;384:22;;-1:-1:-1;;;384:22:32;;-1:-1:-1;;;;;400:5:32;;;384:22;;;6460:51:34;375:37:32;;-1:-1:-1;384:5:32;;;-1:-1:-1;384:15:32;;6433:18:34;;384:22:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;408:3;375:8;:37::i;:::-;431:5;;:19;;;-1:-1:-1;;;431:19:32;;;;422:34;;-1:-1:-1;;;;;431:5:32;;:17;;:19;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;;;2090:276;2155:48;;-1:-1:-1;;;2155:48:32;;-1:-1:-1;;;;;;;;;;;2155:15:32;;;:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2230:6:32;;2213:25;;-1:-1:-1;;;2213:25:32;;-1:-1:-1;;;;;2230:6:32;;;2213:25;;;6460:51:34;-1:-1:-1;;;;;;;;;;;2213:8:32;-1:-1:-1;2213:8:32;;-1:-1:-1;6433:18:34;;2213:25:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2284:8:32;;2294:12;2273:34;;2248:22;;-1:-1:-1;2273:34:32;;-1:-1:-1;2284:8:32;;;;;;2273:34;;;:::i;:::-;2317:5;;2332;;2317:42;;-1:-1:-1;;;2317:42:32;;2248:59;;-1:-1:-1;;;;;;2317:5:32;;;;:14;;:42;;2332:5;;2339:3;;2248:59;;2317:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2145:221;2090:276::o;3221:133:6:-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;1394:202:32:-;1460:48;;-1:-1:-1;;;1460:48:32;;-1:-1:-1;;;;;;;;;;;1460:15:32;;;:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1518:6:32;;1546:5;;1554;;1566:13;;1518:71;;-1:-1:-1;;;1518:71:32;;-1:-1:-1;;;;;1518:6:32;;;;-1:-1:-1;1518:19:32;;-1:-1:-1;1518:71:32;;1546:5;;;;1554;;;;1561:3;;1566:13;;;1581:7;;1518:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1394:202::o;469:244::-;542:5;;533:15;;-1:-1:-1;;;533:15:32;;-1:-1:-1;;;;;542:5:32;;;533:15;;;6460:51:34;-1:-1:-1;;;;;;;;;;;533:8:32;;;6433:18:34;;533:15:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;558:101:32;;-1:-1:-1;;;558:101:32;;-1:-1:-1;;;;;;;;;;;558:15:32;-1:-1:-1;558:15:32;;-1:-1:-1;558:101:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;669:5:32;;683;;695:10;;669:37;;-1:-1:-1;;;669:37:32;;-1:-1:-1;;;;;669:5:32;;;;-1:-1:-1;669:13:32;;-1:-1:-1;669:37:32;;683:5;;;;690:3;;695:10;669:37;;;:::i;600:70:30:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2738:178:6:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;537:57:30;;;;;;;:::i;3069:146:6:-;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:0;3066:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:0;;;13874:51:34;;;-1:-1:-1;;;13941:18:34;;;13934:34;2196:43:0;;;;;;;;;13847:18:34;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2718:440:32:-;2789:5;;:21;;;-1:-1:-1;;;2789:21:32;;;;2780:43;;-1:-1:-1;;;;;2789:5:32;;:19;;:21;;;;;;;;;;;;;;:5;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2812:10;;2780:8;:43::i;:::-;2887:8;;2938:6;;2859:160;;2833:23;;2887:8;;;2909:7;;-1:-1:-1;;;;;2938:6:32;;;;3008:1;;2859:160;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3067:8:32;;3077:7;3056:29;;2833:186;;-1:-1:-1;3029:24:32;;3056:29;;3067:8;;;3077:7;3056:29;;;:::i;:::-;3029:56;;3095;3104:12;-1:-1:-1;;;;;3104:26:32;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3134:16;3095:8;:56::i;:::-;2770:388;;2718:440::o;1809:275::-;1875:48;;-1:-1:-1;;;1875:48:32;;-1:-1:-1;;;;;;;;;;;1875:15:32;;;:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1950:6:32;;1933:25;;-1:-1:-1;;;1933:25:32;;-1:-1:-1;;;;;1950:6:32;;;1933:25;;;6460:51:34;-1:-1:-1;;;;;;;;;;;1933:8:32;-1:-1:-1;1933:8:32;;-1:-1:-1;6433:18:34;;1933:25:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2004:13:32;;2019:7;1993:34;;1968:22;;-1:-1:-1;1993:34:32;;-1:-1:-1;2004:13:32;;;;;;1993:34;;;:::i;:::-;2037:5;;2052;;2037:40;;-1:-1:-1;;;2037:40:32;;1968:59;;-1:-1:-1;;;;;;2037:5:32;;;;:14;;:40;;2052:5;;2037;;1968:59;;2037:40;;;:::i;3164:368::-;3306:34;;;-1:-1:-1;;;3306:34:32;;;16543:29:34;3306:34:32;;;;;;;;;16588:12:34;;;;3306:34:32;;;-1:-1:-1;;;3249:24:32;3385:77;3472:53;3481:29;3249:24;3306:34;3481:10;:29::i;3472:53::-;3220:312;;;3164:368::o;1071:317::-;1135:6;;1163:5;;1171;;1181:8;;1135:64;;-1:-1:-1;;;1135:64:32;;-1:-1:-1;;;;;1135:6:32;;;;:19;;:64;;1163:5;;;;1171;;;1135:6;;1181:8;;;1191:7;;1135:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1218:5:32;;1209:15;;-1:-1:-1;;;1209:15:32;;-1:-1:-1;;;;;1218:5:32;;;1209:15;;;6460:51:34;-1:-1:-1;;;;;;;;;;;1209:8:32;-1:-1:-1;1209:8:32;;-1:-1:-1;6433:18:34;;1209:15:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1234:101:32;;-1:-1:-1;;;1234:101:32;;-1:-1:-1;;;;;;;;;;;1234:15:32;-1:-1:-1;1234:15:32;;-1:-1:-1;1234:101:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1345:5:32;;1360;;1370:10;;1345:36;;-1:-1:-1;;;1345:36:32;;-1:-1:-1;;;;;1345:5:32;;;;-1:-1:-1;1345:14:32;;-1:-1:-1;1345:36:32;;1360:5;;;;1345;;1370:10;1345:36;;;:::i;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;2372:340:32:-;2442:5;;:16;;;-1:-1:-1;;;2442:16:32;;;;2433:30;;-1:-1:-1;;;;;2442:5:32;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2433:30;;2460:2;2433:8;:30::i;:::-;2527:8;;2578:6;;2499:160;;2473:23;;2527:8;;;2549:7;;-1:-1:-1;;;;;2578:6:32;;;;2648:1;;2499:160;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2473:186;;2669:36;2678:12;-1:-1:-1;;;;;2678:21:32;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2669:36;;2703:1;2669:8;:36::i;:::-;2423:289;2372:340::o;676:59:30:-;;;;;;;:::i;1602:201:32:-;1667:48;;-1:-1:-1;;;1667:48:32;;-1:-1:-1;;;;;;;;;;;1667:15:32;;;:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1725:6:32;;1753:5;;1761;;1773:8;;1725:71;;-1:-1:-1;;;1725:71:32;;-1:-1:-1;;;;;1725:6:32;;;;-1:-1:-1;1725:19:32;;-1:-1:-1;1725:71:32;;1753:5;;;;1761;;;;1768:3;;1773:8;;;1783:12;;1725:71;;;:::i;391:179:25:-;473:18;547:8;557:7;530:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;530:35:25;;;;;;;;;520:46;;530:35;520:46;;;;;391:179;-1:-1:-1;;;391:179:25:o;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;17491:2:34;17473:21;;;17530:2;17510:18;;;17503:30;17569:34;17564:2;17549:18;;17542:62;-1:-1:-1;;;17635:2:34;17620:18;;17613:32;17677:3;17662:19;;17289:398;5293:41:0;;;;;;;;5353:31;;;17904:21:34;;;17961:2;17941:18;;;17934:30;-1:-1:-1;;;17995:2:34;17980:18;;17973:40;18080:4;18065:20;;18058:36;;;5353:31:0;;;;;;;18045:3:34;5353:31:0;;;5403;;;18317:21:34;;;18374:2;18354:18;;;18347:30;-1:-1:-1;;;18408:2:34;18393:18;;18386:40;18493:4;18478:20;;18471:36;;;5403:31:0;;;;;;;18458:3:34;5403:31:0;;;5448:6;-1:-1:-1;;;;;;;;;;;2985:55:0;3066:16;2452:359;;2652:67;;2489:11;;-1:-1:-1;;;;;;;;;;;1671:64:0;2586:43;;2652:67;;1671:64;;-1:-1:-1;;;2677:17:0;2712:4;;2652:67;;;:::i;:::-;;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;180:658:34:-;351:2;403:21;;;473:13;;376:18;;;495:22;;;322:4;;351:2;574:15;;;;548:2;533:18;;;322:4;617:195;631:6;628:1;625:13;617:195;;;696:13;;-1:-1:-1;;;;;692:39:34;680:52;;787:15;;;;752:12;;;;728:1;646:9;617:195;;;-1:-1:-1;829:3:34;;180:658;-1:-1:-1;;;;;;180:658:34:o;843:250::-;928:1;938:113;952:6;949:1;946:13;938:113;;;1028:11;;;1022:18;1009:11;;;1002:39;974:2;967:10;938:113;;;-1:-1:-1;;1085:1:34;1067:16;;1060:27;843:250::o;1098:271::-;1140:3;1178:5;1172:12;1205:6;1200:3;1193:19;1221:76;1290:6;1283:4;1278:3;1274:14;1267:4;1260:5;1256:16;1221:76;:::i;:::-;1351:2;1330:15;-1:-1:-1;;1326:29:34;1317:39;;;;1358:4;1313:50;;1098:271;-1:-1:-1;;1098:271:34:o;1374:1742::-;1607:2;1659:21;;;1729:13;;1632:18;;;1751:22;;;1578:4;;1607:2;1792;;1810:18;;;;1847:1;1890:15;;;1875:31;;1871:40;;1934:15;;;1578:4;;1998:1089;2014:6;2009:3;2006:15;1998:1089;;;-1:-1:-1;;2083:22:34;;;2079:36;2067:49;;2139:13;;2226:9;;-1:-1:-1;;;;;2222:35:34;2207:51;;2297:11;;2291:18;2329:15;;;2322:27;;;2410:19;;2179:15;;;2442:24;;;2623:21;;;;2489:2;2571:17;;;2559:30;;2555:39;;;2513:15;;;;2668:1;2682:296;2698:8;2693:3;2690:17;2682:296;;;2804:2;2800:7;2791:6;2783;2779:19;2775:33;2768:5;2761:48;2836:42;2871:6;2860:8;2854:15;2836:42;:::i;:::-;2907:17;;;;2826:52;-1:-1:-1;2950:14:34;;;;2726:1;2717:11;2682:296;;;-1:-1:-1;;;3065:12:34;;;;3001:6;-1:-1:-1;;3030:15:34;;;;2040:1;2031:11;1998:1089;;;-1:-1:-1;3104:6:34;;1374:1742;-1:-1:-1;;;;;;;;;;1374:1742:34:o;3337:218::-;3484:2;3473:9;3466:21;3447:4;3504:45;3545:2;3534:9;3530:18;3522:6;3504:45;:::i;:::-;3496:53;3337:218;-1:-1:-1;;;3337:218:34:o;3560:1567::-;3762:4;3791:2;3831;3820:9;3816:18;3861:2;3850:9;3843:21;3884:6;3919;3913:13;3950:6;3942;3935:22;3976:2;3966:12;;4009:2;3998:9;3994:18;3987:25;;4071:2;4061:6;4058:1;4054:14;4043:9;4039:30;4035:39;4109:2;4101:6;4097:15;4130:1;4151;4161:937;4177:6;4172:3;4169:15;4161:937;;;4246:22;;;-1:-1:-1;;4242:36:34;4230:49;;4302:13;;4389:9;;-1:-1:-1;;;;;4385:35:34;4370:51;;4460:11;;4454:18;4492:15;;;4485:27;;;4573:19;;4342:15;;;4605:24;;;4695:21;;;;4740:1;;4663:2;4651:15;;;4754:236;4770:8;4765:3;4762:17;4754:236;;;4851:15;;-1:-1:-1;;;;;;4847:42:34;4833:57;;4959:17;;;;4798:1;4789:11;;;;;4916:14;;;;4754:236;;;-1:-1:-1;5076:12:34;;;;5013:5;-1:-1:-1;;;5041:15:34;;;;4203:1;4194:11;4161:937;;;-1:-1:-1;5115:6:34;;3560:1567;-1:-1:-1;;;;;;;;;3560:1567:34:o;5314:803::-;5476:4;5505:2;5545;5534:9;5530:18;5575:2;5564:9;5557:21;5598:6;5633;5627:13;5664:6;5656;5649:22;5702:2;5691:9;5687:18;5680:25;;5764:2;5754:6;5751:1;5747:14;5736:9;5732:30;5728:39;5714:53;;5802:2;5794:6;5790:15;5823:1;5833:255;5847:6;5844:1;5841:13;5833:255;;;5940:2;5936:7;5924:9;5916:6;5912:22;5908:36;5903:3;5896:49;5968:40;6001:6;5992;5986:13;5968:40;:::i;:::-;5958:50;-1:-1:-1;6066:12:34;;;;6031:15;;;;5869:1;5862:9;5833:255;;;-1:-1:-1;6105:6:34;;5314:803;-1:-1:-1;;;;;;;5314:803:34:o;7838:380::-;7917:1;7913:12;;;;7960;;;7981:61;;8035:4;8027:6;8023:17;8013:27;;7981:61;8088:2;8080:6;8077:14;8057:18;8054:38;8051:161;;8134:10;8129:3;8125:20;8122:1;8115:31;8169:4;8166:1;8159:15;8197:4;8194:1;8187:15;8051:161;;7838:380;;;:::o;8348:1079::-;8432:12;;8397:3;;8487:1;8507:18;;;;8560;;;;8587:61;;8641:4;8633:6;8629:17;8619:27;;8587:61;8667:2;8715;8707:6;8704:14;8684:18;8681:38;8678:161;;8761:10;8756:3;8752:20;8749:1;8742:31;8796:4;8793:1;8786:15;8824:4;8821:1;8814:15;8678:161;112:19;;;164:4;155:14;;8936:18;8963:132;;;;9109:1;9104:317;;;;8929:492;;8963:132;-1:-1:-1;;8998:24:34;;8984:39;;9068:14;;9061:22;9058:1;9054:30;9043:42;;;-1:-1:-1;8963:132:34;;9104:317;8295:1;8288:14;;;8332:4;8319:18;;9197:1;9211:167;9225:6;9222:1;9219:13;9211:167;;;9305:14;;9290:13;;;9283:37;9348:16;;;;9240:10;;9211:167;;;9398:13;;;-1:-1:-1;;8929:492:34;;;;;;;;8348:1079;;;;:::o;9432:1027::-;9885:22;9881:27;9873:6;9869:40;9858:9;9851:59;9946:3;9941:2;9930:9;9926:18;9919:31;9832:4;9973:53;10021:3;10010:9;10006:19;9998:6;9973:53;:::i;:::-;10091:1;10087;10082:3;10078:11;10074:19;10066:6;10062:32;10057:2;10046:9;10042:18;10035:60;10126:9;10118:6;10114:22;10172:2;10167;10156:9;10152:18;10145:30;10199:1;10191:6;10184:17;-1:-1:-1;;;10229:2:34;10221:6;10217:15;10210:32;10287:2;10283;10279:11;10273:3;10262:9;10258:19;10251:40;;10324:1;10319:2;10311:6;10307:15;10300:26;-1:-1:-1;;;10354:2:34;10346:6;10342:15;10335:30;10394:3;10386:6;10382:16;10374:24;;;10447:4;10439:6;10435:17;10429:3;10418:9;10414:19;10407:46;9432:1027;;;;;;;:::o;10464:607::-;-1:-1:-1;;;;;10766:15:34;;;10748:34;;10818:15;;10813:2;10798:18;;10791:43;10865:2;10850:18;;10843:34;;;-1:-1:-1;;10913:40:34;;10908:2;10893:18;;10886:68;10728:3;10985;10970:19;;10963:32;;;10691:4;;11012:53;;11045:19;;11037:6;11012:53;:::i;:::-;11004:61;10464:607;-1:-1:-1;;;;;;;10464:607:34:o;11076:184::-;11146:6;11199:2;11187:9;11178:7;11174:23;11170:32;11167:52;;;11215:1;11212;11205:12;11167:52;-1:-1:-1;11238:16:34;;11076:184;-1:-1:-1;11076:184:34:o;11265:671::-;-1:-1:-1;;;;;11544:32:34;;11526:51;;11564:3;11608:2;11593:18;;11586:31;;;-1:-1:-1;;11640:53:34;;11673:19;;11665:6;11640:53;:::i;:::-;11729:6;11724:2;11713:9;11709:18;11702:34;11788:22;11784:27;11776:6;11772:40;11767:2;11756:9;11752:18;11745:68;11862:9;11854:6;11850:22;11844:3;11833:9;11829:19;11822:51;11890:40;11923:6;11915;11890:40;:::i;:::-;11882:48;11265:671;-1:-1:-1;;;;;;;;11265:671:34:o;12555:352::-;12756:2;12738:21;;;12795:2;12775:18;;;12768:30;12834:31;12829:2;12814:18;;12807:59;12898:2;12883:18;;12555:352::o;12912:355::-;-1:-1:-1;;;;;13142:32:34;;;;13124:51;;13206:2;13191:18;;13184:34;;;;13249:2;13234:18;;13227:34;13112:2;13097:18;;12912:355::o;13272:423::-;13473:2;13455:21;;;13512:2;13492:18;;;13485:30;13551:34;13546:2;13531:18;;13524:62;13622:30;13617:2;13602:18;;13595:58;13685:3;13670:19;;13272:423::o;13979:384::-;-1:-1:-1;;;;;;14164:33:34;;14152:46;;14221:13;;14134:3;;14243:74;14221:13;14306:1;14297:11;;14290:4;14278:17;;14243:74;:::i;:::-;14337:16;;;;14355:1;14333:24;;13979:384;-1:-1:-1;;;13979:384:34:o;14368:287::-;14497:3;14535:6;14529:13;14551:66;14610:6;14605:3;14598:4;14590:6;14586:17;14551:66;:::i;:::-;14633:16;;;;;14368:287;-1:-1:-1;;14368:287:34:o;14660:277::-;14727:6;14780:2;14768:9;14759:7;14755:23;14751:32;14748:52;;;14796:1;14793;14786:12;14748:52;14828:9;14822:16;14881:5;14874:13;14867:21;14860:5;14857:32;14847:60;;14903:1;14900;14893:12;14942:1036;15394:22;15390:27;15382:6;15378:40;15367:9;15360:59;15455:3;15450:2;15439:9;15435:18;15428:31;15341:4;15482:53;15530:3;15519:9;15515:19;15507:6;15482:53;:::i;:::-;15600:1;15596;15591:3;15587:11;15583:19;15575:6;15571:32;15566:2;15555:9;15551:18;15544:60;15635:9;15627:6;15623:22;15681:2;15676;15665:9;15661:18;15654:30;15708:2;15700:6;15693:18;-1:-1:-1;;;15739:2:34;15731:6;15727:15;15720:40;15805:2;15801;15797:11;15791:3;15780:9;15776:19;15769:40;;15842:1;15837:2;15829:6;15825:15;15818:26;-1:-1:-1;;;15872:2:34;15864:6;15860:15;15853:31;15913:3;15905:6;15901:16;15893:24;;;15966:4;15958:6;15954:17;15948:3;15937:9;15933:19;15926:46;14942:1036;;;;;;;:::o;16611:273::-;16679:6;16732:2;16720:9;16711:7;16707:23;16703:32;16700:52;;;16748:1;16745;16738:12;16700:52;16780:9;16774:16;16830:4;16823:5;16819:16;16812:5;16809:27;16799:55;;16850:1;16847;16840:12;16889:395;17092:22;17088:27;17080:6;17076:40;17071:3;17064:53;17046:3;17146:6;17140:13;17162:75;17230:6;17225:2;17220:3;17216:12;17209:4;17201:6;17197:17;17162:75;:::i;:::-;17257:16;;;;17275:2;17253:25;;16889:395;-1:-1:-1;;;16889:395:34:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "content()": "8a4d5a67",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "kernel()": "d4aae0c4",
    "receiver()": "f7260d3e",
    "receiver22()": "392c1722",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_BridgeCanBurnToken()": "35630bf6",
    "test_BridgeCanMintToken()": "3b587f8e",
    "test_RevertWhen_AliceTriesBurnToken()": "dcce5fb0",
    "test_RevertWhen_AliceTriesMintToken()": "4d3b65f8",
    "test_RevertWhen_ContentIsWrongOnBurn()": "3d834071",
    "test_RevertWhen_ContentIsWrongOnMint()": "fdc3adab",
    "test_RevertWhen_TicketerIsWrongOnBurn()": "d29234dd",
    "test_RevertWhen_TicketerIsWrongOnMint()": "48beb4f8",
    "test_ShouldCalculateCorrectTicketHash()": "d87cb3da",
    "test_ShouldReturnCorrectDecimals()": "f2b25f90",
    "test_ShouldReturnCorrectTokenHash()": "bdcb71a8",
    "ticketHash()": "76822969",
    "ticketer()": "3f70f347",
    "token()": "fc0c546a",
    "wrongContent()": "56342f63",
    "wrongTicketer()": "4f6c39bb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"content\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract KernelMock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver22\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BridgeCanBurnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BridgeCanMintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_RevertWhen_AliceTriesBurnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_RevertWhen_AliceTriesMintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_RevertWhen_ContentIsWrongOnBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_RevertWhen_ContentIsWrongOnMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_RevertWhen_TicketerIsWrongOnBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_RevertWhen_TicketerIsWrongOnMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ShouldCalculateCorrectTicketHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ShouldReturnCorrectDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_ShouldReturnCorrectTokenHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketer\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20Proxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrongContent\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrongTicketer\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ERC20Proxy.t.sol\":\"ERC20ProxyTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\"lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85\",\"dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9\",\"dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/ERC20Proxy.sol\":{\"keccak256\":\"0x5d050db8f294c9423f0fe6c559de8831d663f15f77410e7f143e201b6cae7a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ac867cb5aff71f60fe40e5551215951338c333ce2390311f677dc291cda2af\",\"dweb:/ipfs/QmQKVAP9XBuvGuwzmxRRWayDj8kX1s5AaCaqxdRPJJTZoZ\"]},\"src/IDepositEvent.sol\":{\"keccak256\":\"0x2ee2f29720073433a67601d155e57ecab4d3805a60a99f7505df55fd06e50b43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93934f97d78286db35c6d103d24a058f8a6d481eee3ec0324cf9d0d8b1e83b5a\",\"dweb:/ipfs/QmYtDQmUte2EqhFZxEHZeBSw7KVTmBFx6HHNv43R6X2BPS\"]},\"src/IWithdrawalEvent.sol\":{\"keccak256\":\"0x4c31c398bde6481ff2d53a59be280fdeffbe5bb6f70b9afbc2197d9dc9ba0ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cf330488f1df81e3ebb40c397c21d8ba50418cba2f4e86dcaecfcb3081c5d85\",\"dweb:/ipfs/QmXKXPiN8DxgEobpsq1m4krKkw7J2ng77zARtMCZgcH9Rh\"]},\"src/KernelMock.sol\":{\"keccak256\":\"0x2b5bbfe00f1191024af2b819b78b69abcc48d890e724d4919b07e44d43ad9934\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://691cf5290bd203356ff25e1c7fd2c301125f09080dd8a2dc28fa6b9c6ebd8371\",\"dweb:/ipfs/QmTYyRiruQoj6xKffsZZJZxSUKm9e32kAR1NaJCGePj8J1\"]},\"test/Base.t.sol\":{\"keccak256\":\"0x691c6c3ddb55cd866c3f60ffc58051bbc183a95a3ff253c1d1e45bb605530313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc48f4f8796dc850b8f8394ddf8717e93e8a526aabeb8663936248edfad45fa\",\"dweb:/ipfs/QmcbU5r1zSFqPktnLLT6dGEp2V4B1pVjwmkCqMuNq9vbUA\"]},\"test/ERC20Proxy.t.sol\":{\"keccak256\":\"0xeeb77be8efec34c8b552dd60cda267d44a65b31390ba1f407bce3cd7a0d97efa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8d090718807e0603015f58d36913302c8900732c9b243a8579a320db6f147c1\",\"dweb:/ipfs/QmdA5nR2sbAivxTEiiSNYhP9Zk8e6e6uFKBcMprVC4s3uZ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "content",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract KernelMock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiver",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiver22",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BridgeCanBurnToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BridgeCanMintToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_RevertWhen_AliceTriesBurnToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_RevertWhen_AliceTriesMintToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_RevertWhen_ContentIsWrongOnBurn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_RevertWhen_ContentIsWrongOnMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_RevertWhen_TicketerIsWrongOnBurn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_RevertWhen_TicketerIsWrongOnMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ShouldCalculateCorrectTicketHash"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ShouldReturnCorrectDecimals"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_ShouldReturnCorrectTokenHash"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ticketHash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ticketer",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract ERC20Proxy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrongContent",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrongTicketer",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ERC20Proxy.t.sol": "ERC20ProxyTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a",
        "urls": [
          "bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85",
          "dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9",
        "urls": [
          "bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9",
          "dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/ERC20Proxy.sol": {
        "keccak256": "0x5d050db8f294c9423f0fe6c559de8831d663f15f77410e7f143e201b6cae7a3f",
        "urls": [
          "bzz-raw://f0ac867cb5aff71f60fe40e5551215951338c333ce2390311f677dc291cda2af",
          "dweb:/ipfs/QmQKVAP9XBuvGuwzmxRRWayDj8kX1s5AaCaqxdRPJJTZoZ"
        ],
        "license": "MIT"
      },
      "src/IDepositEvent.sol": {
        "keccak256": "0x2ee2f29720073433a67601d155e57ecab4d3805a60a99f7505df55fd06e50b43",
        "urls": [
          "bzz-raw://93934f97d78286db35c6d103d24a058f8a6d481eee3ec0324cf9d0d8b1e83b5a",
          "dweb:/ipfs/QmYtDQmUte2EqhFZxEHZeBSw7KVTmBFx6HHNv43R6X2BPS"
        ],
        "license": "MIT"
      },
      "src/IWithdrawalEvent.sol": {
        "keccak256": "0x4c31c398bde6481ff2d53a59be280fdeffbe5bb6f70b9afbc2197d9dc9ba0ca0",
        "urls": [
          "bzz-raw://7cf330488f1df81e3ebb40c397c21d8ba50418cba2f4e86dcaecfcb3081c5d85",
          "dweb:/ipfs/QmXKXPiN8DxgEobpsq1m4krKkw7J2ng77zARtMCZgcH9Rh"
        ],
        "license": "MIT"
      },
      "src/KernelMock.sol": {
        "keccak256": "0x2b5bbfe00f1191024af2b819b78b69abcc48d890e724d4919b07e44d43ad9934",
        "urls": [
          "bzz-raw://691cf5290bd203356ff25e1c7fd2c301125f09080dd8a2dc28fa6b9c6ebd8371",
          "dweb:/ipfs/QmTYyRiruQoj6xKffsZZJZxSUKm9e32kAR1NaJCGePj8J1"
        ],
        "license": "MIT"
      },
      "test/Base.t.sol": {
        "keccak256": "0x691c6c3ddb55cd866c3f60ffc58051bbc183a95a3ff253c1d1e45bb605530313",
        "urls": [
          "bzz-raw://6bc48f4f8796dc850b8f8394ddf8717e93e8a526aabeb8663936248edfad45fa",
          "dweb:/ipfs/QmcbU5r1zSFqPktnLLT6dGEp2V4B1pVjwmkCqMuNq9vbUA"
        ],
        "license": "MIT"
      },
      "test/ERC20Proxy.t.sol": {
        "keccak256": "0xeeb77be8efec34c8b552dd60cda267d44a65b31390ba1f407bce3cd7a0d97efa",
        "urls": [
          "bzz-raw://d8d090718807e0603015f58d36913302c8900732c9b243a8579a320db6f147c1",
          "dweb:/ipfs/QmdA5nR2sbAivxTEiiSNYhP9Zk8e6e6uFKBcMprVC4s3uZ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ERC20Proxy.t.sol",
    "id": 45613,
    "exportedSymbols": {
      "BaseTest": [
        44991
      ],
      "ERC20Proxy": [
        44381
      ],
      "ERC20ProxyTest": [
        45612
      ],
      "hashTicket": [
        44245
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3503:32",
    "nodes": [
      {
        "id": 45224,
        "nodeType": "PragmaDirective",
        "src": "32:24:32",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 45226,
        "nodeType": "ImportDirective",
        "src": "58:38:32",
        "nodes": [],
        "absolutePath": "test/Base.t.sol",
        "file": "./Base.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45613,
        "sourceUnit": 44992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45225,
              "name": "BaseTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44991,
              "src": "66:8:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45229,
        "nodeType": "ImportDirective",
        "src": "97:61:32",
        "nodes": [],
        "absolutePath": "src/ERC20Proxy.sol",
        "file": "../src/ERC20Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45613,
        "sourceUnit": 44382,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45227,
              "name": "ERC20Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44381,
              "src": "105:10:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45228,
              "name": "hashTicket",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44245,
              "src": "117:10:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45612,
        "nodeType": "ContractDefinition",
        "src": "160:3374:32",
        "nodes": [
          {
            "id": 45271,
            "nodeType": "FunctionDefinition",
            "src": "202:261:32",
            "nodes": [],
            "body": {
              "id": 45270,
              "nodeType": "Block",
              "src": "244:219:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45237,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44898,
                            "src": "279:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45235,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "263:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "269:9:32",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43418,
                          "src": "263:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "263:22:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "287:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 45234,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "254:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "254:35:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45241,
                  "nodeType": "ExpressionStatement",
                  "src": "254:35:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45247,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "327:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "319:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45245,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "319:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "319:14:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45249,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "335:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "342:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45251,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "347:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45252,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "357:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45242,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "299:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "306:12:32",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "299:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "299:66:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45254,
                  "nodeType": "ExpressionStatement",
                  "src": "299:66:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45258,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44898,
                            "src": "400:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45256,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "384:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "390:9:32",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43418,
                          "src": "384:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "384:22:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "408:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 45255,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "375:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:37:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45262,
                  "nodeType": "ExpressionStatement",
                  "src": "375:37:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45264,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "431:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "437:11:32",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43404,
                          "src": "431:17:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 45266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "431:19:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "452:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 45263,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "422:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "422:34:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45269,
                  "nodeType": "ExpressionStatement",
                  "src": "422:34:32"
                }
              ]
            },
            "functionSelector": "3b587f8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BridgeCanMintToken",
            "nameLocation": "211:23:32",
            "parameters": {
              "id": 45232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "234:2:32"
            },
            "returnParameters": {
              "id": 45233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "244:0:32"
            },
            "scope": 45612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45295,
            "nodeType": "FunctionDefinition",
            "src": "469:244:32",
            "nodes": [],
            "body": {
              "id": 45294,
              "nodeType": "Block",
              "src": "523:190:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45277,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "542:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45274,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "533:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "536:5:32",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "533:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "533:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45279,
                  "nodeType": "ExpressionStatement",
                  "src": "533:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243323050726f78793a206f6e6c79206b65726e656c20616c6c6f77656420746f206465706f736974202f20776974686472617720746f6b656e73",
                        "id": 45283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "587:62:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c68349c1947acf54d484f1ef80e3c632d4a8ac12c053bb8160436ea744b15e17",
                          "typeString": "literal_string \"ERC20Proxy: only kernel allowed to deposit / withdraw tokens\""
                        },
                        "value": "ERC20Proxy: only kernel allowed to deposit / withdraw tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c68349c1947acf54d484f1ef80e3c632d4a8ac12c053bb8160436ea744b15e17",
                          "typeString": "literal_string \"ERC20Proxy: only kernel allowed to deposit / withdraw tokens\""
                        }
                      ],
                      "expression": {
                        "id": 45280,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "558:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "561:12:32",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13546,
                      "src": "558:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "558:101:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45285,
                  "nodeType": "ExpressionStatement",
                  "src": "558:101:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45289,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "683:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "690:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45291,
                        "name": "ticketHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44906,
                        "src": "695:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45286,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44889,
                        "src": "669:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                          "typeString": "contract ERC20Proxy"
                        }
                      },
                      "id": 45288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "675:7:32",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44340,
                      "src": "669:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 45292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "669:37:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45293,
                  "nodeType": "ExpressionStatement",
                  "src": "669:37:32"
                }
              ]
            },
            "functionSelector": "4d3b65f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_RevertWhen_AliceTriesMintToken",
            "nameLocation": "478:35:32",
            "parameters": {
              "id": 45272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:2:32"
            },
            "returnParameters": {
              "id": 45273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:32"
            },
            "scope": 45612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45353,
            "nodeType": "FunctionDefinition",
            "src": "719:346:32",
            "nodes": [],
            "body": {
              "id": 45352,
              "nodeType": "Block",
              "src": "761:304:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45303,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "799:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "791:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45301,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "791:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "791:14:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45305,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44904,
                        "src": "807:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "812:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 45307,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "815:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45308,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "825:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45298,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "771:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "778:12:32",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "771:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "771:62:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45310,
                  "nodeType": "ExpressionStatement",
                  "src": "771:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45312,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "852:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "858:11:32",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43404,
                          "src": "852:17:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 45314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "852:19:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "873:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 45311,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "843:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "843:32:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45317,
                  "nodeType": "ExpressionStatement",
                  "src": "843:32:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45321,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44904,
                        "src": "894:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45318,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "885:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "888:5:32",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "885:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "885:13:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45323,
                  "nodeType": "ExpressionStatement",
                  "src": "885:13:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45329,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "932:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "924:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45327,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "924:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "924:14:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45331,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44936,
                        "src": "940:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "950:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 45333,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "953:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45334,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "963:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45324,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "908:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "915:8:32",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44695,
                      "src": "908:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "908:63:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45336,
                  "nodeType": "ExpressionStatement",
                  "src": "908:63:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45340,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44898,
                            "src": "1006:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45338,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "990:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "996:9:32",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43418,
                          "src": "990:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "990:22:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1014:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 45337,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "981:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "981:35:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45344,
                  "nodeType": "ExpressionStatement",
                  "src": "981:35:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45346,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1035:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1041:11:32",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43404,
                          "src": "1035:17:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 45348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1035:19:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1056:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 45345,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1026:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:32:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45351,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:32:32"
                }
              ]
            },
            "functionSelector": "35630bf6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BridgeCanBurnToken",
            "nameLocation": "728:23:32",
            "parameters": {
              "id": 45296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "751:2:32"
            },
            "returnParameters": {
              "id": 45297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:32"
            },
            "scope": 45612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45390,
            "nodeType": "FunctionDefinition",
            "src": "1071:317:32",
            "nodes": [],
            "body": {
              "id": 45389,
              "nodeType": "Block",
              "src": "1125:263:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45361,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1163:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1155:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45359,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1155:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1155:14:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45363,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "1171:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1178:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 45365,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "1181:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45366,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "1191:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45356,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "1135:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1142:12:32",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "1135:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1135:64:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45368,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:64:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45372,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "1218:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45369,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1209:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1212:5:32",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "1209:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45374,
                  "nodeType": "ExpressionStatement",
                  "src": "1209:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243323050726f78793a206f6e6c79206b65726e656c20616c6c6f77656420746f206465706f736974202f20776974686472617720746f6b656e73",
                        "id": 45378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1263:62:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c68349c1947acf54d484f1ef80e3c632d4a8ac12c053bb8160436ea744b15e17",
                          "typeString": "literal_string \"ERC20Proxy: only kernel allowed to deposit / withdraw tokens\""
                        },
                        "value": "ERC20Proxy: only kernel allowed to deposit / withdraw tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c68349c1947acf54d484f1ef80e3c632d4a8ac12c053bb8160436ea744b15e17",
                          "typeString": "literal_string \"ERC20Proxy: only kernel allowed to deposit / withdraw tokens\""
                        }
                      ],
                      "expression": {
                        "id": 45375,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1234:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1237:12:32",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13546,
                      "src": "1234:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1234:101:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45380,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:101:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45384,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "1360:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1367:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 45386,
                        "name": "ticketHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44906,
                        "src": "1370:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45381,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44889,
                        "src": "1345:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                          "typeString": "contract ERC20Proxy"
                        }
                      },
                      "id": 45383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1351:8:32",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44361,
                      "src": "1345:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 45387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1345:36:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45388,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:36:32"
                }
              ]
            },
            "functionSelector": "dcce5fb0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_RevertWhen_AliceTriesBurnToken",
            "nameLocation": "1080:35:32",
            "parameters": {
              "id": 45354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1115:2:32"
            },
            "returnParameters": {
              "id": 45355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1125:0:32"
            },
            "scope": 45612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45413,
            "nodeType": "FunctionDefinition",
            "src": "1394:202:32",
            "nodes": [],
            "body": {
              "id": 45412,
              "nodeType": "Block",
              "src": "1450:146:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243323050726f78793a2077726f6e67207469636b65742068617368",
                        "id": 45396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1476:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e6b6aeef59a394c3c80618ecbc5748f3b57de38a6335561f36beeded9148e32",
                          "typeString": "literal_string \"ERC20Proxy: wrong ticket hash\""
                        },
                        "value": "ERC20Proxy: wrong ticket hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4e6b6aeef59a394c3c80618ecbc5748f3b57de38a6335561f36beeded9148e32",
                          "typeString": "literal_string \"ERC20Proxy: wrong ticket hash\""
                        }
                      ],
                      "expression": {
                        "id": 45393,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1460:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1463:12:32",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13546,
                      "src": "1460:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:48:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45398,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:48:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45404,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1546:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1538:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45402,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1538:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1538:14:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45406,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "1554:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1561:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45408,
                        "name": "wrongTicketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44918,
                        "src": "1566:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45409,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "1581:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45399,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "1518:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1525:12:32",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "1518:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1518:71:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45411,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:71:32"
                }
              ]
            },
            "functionSelector": "48beb4f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_RevertWhen_TicketerIsWrongOnMint",
            "nameLocation": "1403:37:32",
            "parameters": {
              "id": 45391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1440:2:32"
            },
            "returnParameters": {
              "id": 45392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1450:0:32"
            },
            "scope": 45612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45436,
            "nodeType": "FunctionDefinition",
            "src": "1602:201:32",
            "nodes": [],
            "body": {
              "id": 45435,
              "nodeType": "Block",
              "src": "1657:146:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243323050726f78793a2077726f6e67207469636b65742068617368",
                        "id": 45419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1683:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e6b6aeef59a394c3c80618ecbc5748f3b57de38a6335561f36beeded9148e32",
                          "typeString": "literal_string \"ERC20Proxy: wrong ticket hash\""
                        },
                        "value": "ERC20Proxy: wrong ticket hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4e6b6aeef59a394c3c80618ecbc5748f3b57de38a6335561f36beeded9148e32",
                          "typeString": "literal_string \"ERC20Proxy: wrong ticket hash\""
                        }
                      ],
                      "expression": {
                        "id": 45416,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1667:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1670:12:32",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13546,
                      "src": "1667:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1667:48:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45421,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:48:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45427,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1753:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1745:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45425,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1745:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1745:14:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45429,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "1761:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1768:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45431,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "1773:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45432,
                        "name": "wrongContent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44930,
                        "src": "1783:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45422,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "1725:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1732:12:32",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "1725:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:71:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45434,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:71:32"
                }
              ]
            },
            "functionSelector": "fdc3adab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_RevertWhen_ContentIsWrongOnMint",
            "nameLocation": "1611:36:32",
            "parameters": {
              "id": 45414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:2:32"
            },
            "returnParameters": {
              "id": 45415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1657:0:32"
            },
            "scope": 45612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45470,
            "nodeType": "FunctionDefinition",
            "src": "1809:275:32",
            "nodes": [],
            "body": {
              "id": 45469,
              "nodeType": "Block",
              "src": "1865:219:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243323050726f78793a2077726f6e67207469636b65742068617368",
                        "id": 45442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1891:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e6b6aeef59a394c3c80618ecbc5748f3b57de38a6335561f36beeded9148e32",
                          "typeString": "literal_string \"ERC20Proxy: wrong ticket hash\""
                        },
                        "value": "ERC20Proxy: wrong ticket hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4e6b6aeef59a394c3c80618ecbc5748f3b57de38a6335561f36beeded9148e32",
                          "typeString": "literal_string \"ERC20Proxy: wrong ticket hash\""
                        }
                      ],
                      "expression": {
                        "id": 45439,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1875:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1878:12:32",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13546,
                      "src": "1875:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1875:48:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45444,
                  "nodeType": "ExpressionStatement",
                  "src": "1875:48:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45450,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "1950:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          ],
                          "id": 45449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1942:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45448,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1942:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1942:15:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45445,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1933:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1936:5:32",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "1933:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1933:25:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45453,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:25:32"
                },
                {
                  "assignments": [
                    45455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45455,
                      "mutability": "mutable",
                      "name": "wrongTokenHash",
                      "nameLocation": "1976:14:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45469,
                      "src": "1968:22:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45454,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1968:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45460,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45457,
                        "name": "wrongTicketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44918,
                        "src": "2004:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45458,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "2019:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "id": 45456,
                      "name": "hashTicket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44245,
                      "src": "1993:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes22_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes22,bytes memory) pure returns (uint256)"
                      }
                    },
                    "id": 45459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1993:34:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1968:59:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45464,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "2052:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2059:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 45466,
                        "name": "wrongTokenHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45455,
                        "src": "2062:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45461,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44889,
                        "src": "2037:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                          "typeString": "contract ERC20Proxy"
                        }
                      },
                      "id": 45463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2043:8:32",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44361,
                      "src": "2037:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 45467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2037:40:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45468,
                  "nodeType": "ExpressionStatement",
                  "src": "2037:40:32"
                }
              ]
            },
            "functionSelector": "d29234dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_RevertWhen_TicketerIsWrongOnBurn",
            "nameLocation": "1818:37:32",
            "parameters": {
              "id": 45437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1855:2:32"
            },
            "returnParameters": {
              "id": 45438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1865:0:32"
            },
            "scope": 45612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45504,
            "nodeType": "FunctionDefinition",
            "src": "2090:276:32",
            "nodes": [],
            "body": {
              "id": 45503,
              "nodeType": "Block",
              "src": "2145:221:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243323050726f78793a2077726f6e67207469636b65742068617368",
                        "id": 45476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2171:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e6b6aeef59a394c3c80618ecbc5748f3b57de38a6335561f36beeded9148e32",
                          "typeString": "literal_string \"ERC20Proxy: wrong ticket hash\""
                        },
                        "value": "ERC20Proxy: wrong ticket hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4e6b6aeef59a394c3c80618ecbc5748f3b57de38a6335561f36beeded9148e32",
                          "typeString": "literal_string \"ERC20Proxy: wrong ticket hash\""
                        }
                      ],
                      "expression": {
                        "id": 45473,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "2155:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2158:12:32",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13546,
                      "src": "2155:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:48:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45478,
                  "nodeType": "ExpressionStatement",
                  "src": "2155:48:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45484,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "2230:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          ],
                          "id": 45483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2222:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45482,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2222:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2222:15:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45479,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "2213:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2216:5:32",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "2213:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2213:25:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45487,
                  "nodeType": "ExpressionStatement",
                  "src": "2213:25:32"
                },
                {
                  "assignments": [
                    45489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45489,
                      "mutability": "mutable",
                      "name": "wrongTokenHash",
                      "nameLocation": "2256:14:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45503,
                      "src": "2248:22:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45488,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2248:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45494,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45491,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "2284:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45492,
                        "name": "wrongContent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44930,
                        "src": "2294:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "id": 45490,
                      "name": "hashTicket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44245,
                      "src": "2273:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes22_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes22,bytes memory) pure returns (uint256)"
                      }
                    },
                    "id": 45493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:34:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2248:59:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45498,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "2332:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2339:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45500,
                        "name": "wrongTokenHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45489,
                        "src": "2344:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45495,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44889,
                        "src": "2317:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                          "typeString": "contract ERC20Proxy"
                        }
                      },
                      "id": 45497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2323:8:32",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44361,
                      "src": "2317:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 45501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:42:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45502,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:42:32"
                }
              ]
            },
            "functionSelector": "3d834071",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_RevertWhen_ContentIsWrongOnBurn",
            "nameLocation": "2099:36:32",
            "parameters": {
              "id": 45471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2135:2:32"
            },
            "returnParameters": {
              "id": 45472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2145:0:32"
            },
            "scope": 45612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45539,
            "nodeType": "FunctionDefinition",
            "src": "2372:340:32",
            "nodes": [],
            "body": {
              "id": 45538,
              "nodeType": "Block",
              "src": "2423:289:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45508,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "2442:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2448:8:32",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44371,
                          "src": "2442:14:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 45510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2442:16:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 45511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2460:2:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 45507,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2433:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2433:30:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45513,
                  "nodeType": "ExpressionStatement",
                  "src": "2433:30:32"
                },
                {
                  "assignments": [
                    45516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45516,
                      "mutability": "mutable",
                      "name": "anotherToken",
                      "nameLocation": "2484:12:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45538,
                      "src": "2473:23:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                        "typeString": "contract ERC20Proxy"
                      },
                      "typeName": {
                        "id": 45515,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45514,
                          "name": "ERC20Proxy",
                          "nameLocations": [
                            "2473:10:32"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44381,
                          "src": "2473:10:32"
                        },
                        "referencedDeclaration": 44381,
                        "src": "2473:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                          "typeString": "contract ERC20Proxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45530,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45520,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "2527:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45521,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "2549:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45524,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "2578:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          ],
                          "id": 45523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2570:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45522,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2570:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2570:15:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "416e6f7468657220746f6b656e",
                        "id": 45526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2599:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_586e852f6c5f1e59e8cb968f8a0b9e7d82f89e89bfaf70f75f23889e42f2f5b9",
                          "typeString": "literal_string \"Another token\""
                        },
                        "value": "Another token"
                      },
                      {
                        "hexValue": "41544b4e",
                        "id": 45527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2628:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_376cdb3a0f356d3804fb3e85083838c11699169dc716b49471d525d4aed6fc35",
                          "typeString": "literal_string \"ATKN\""
                        },
                        "value": "ATKN"
                      },
                      {
                        "hexValue": "36",
                        "id": 45528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2648:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_586e852f6c5f1e59e8cb968f8a0b9e7d82f89e89bfaf70f75f23889e42f2f5b9",
                          "typeString": "literal_string \"Another token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_376cdb3a0f356d3804fb3e85083838c11699169dc716b49471d525d4aed6fc35",
                          "typeString": "literal_string \"ATKN\""
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 45519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2499:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_bytes22_$_t_bytes_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20Proxy_$44381_$",
                        "typeString": "function (bytes22,bytes memory,address,string memory,string memory,uint8) returns (contract ERC20Proxy)"
                      },
                      "typeName": {
                        "id": 45518,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45517,
                          "name": "ERC20Proxy",
                          "nameLocations": [
                            "2503:10:32"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44381,
                          "src": "2503:10:32"
                        },
                        "referencedDeclaration": 44381,
                        "src": "2503:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                          "typeString": "contract ERC20Proxy"
                        }
                      }
                    },
                    "id": 45529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2499:160:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                      "typeString": "contract ERC20Proxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2473:186:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45532,
                            "name": "anotherToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45516,
                            "src": "2678:12:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2691:8:32",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44371,
                          "src": "2678:21:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 45534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2678:23:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 45535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2703:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 45531,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2669:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:36:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45537,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:36:32"
                }
              ]
            },
            "functionSelector": "f2b25f90",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ShouldReturnCorrectDecimals",
            "nameLocation": "2381:32:32",
            "parameters": {
              "id": 45505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2413:2:32"
            },
            "returnParameters": {
              "id": 45506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2423:0:32"
            },
            "scope": 45612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45581,
            "nodeType": "FunctionDefinition",
            "src": "2718:440:32",
            "nodes": [],
            "body": {
              "id": 45580,
              "nodeType": "Block",
              "src": "2770:388:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45543,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "2789:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2795:13:32",
                          "memberName": "getTicketHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44380,
                          "src": "2789:19:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 45545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2789:21:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45546,
                        "name": "ticketHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44906,
                        "src": "2812:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45542,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "2780:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2780:43:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45548,
                  "nodeType": "ExpressionStatement",
                  "src": "2780:43:32"
                },
                {
                  "assignments": [
                    45551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45551,
                      "mutability": "mutable",
                      "name": "anotherToken",
                      "nameLocation": "2844:12:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45580,
                      "src": "2833:23:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                        "typeString": "contract ERC20Proxy"
                      },
                      "typeName": {
                        "id": 45550,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45549,
                          "name": "ERC20Proxy",
                          "nameLocations": [
                            "2833:10:32"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44381,
                          "src": "2833:10:32"
                        },
                        "referencedDeclaration": 44381,
                        "src": "2833:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                          "typeString": "contract ERC20Proxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45565,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45555,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "2887:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45556,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "2909:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45559,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "2938:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          ],
                          "id": 45558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2930:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45557,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2930:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2930:15:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "416e6f7468657220746f6b656e",
                        "id": 45561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2959:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_586e852f6c5f1e59e8cb968f8a0b9e7d82f89e89bfaf70f75f23889e42f2f5b9",
                          "typeString": "literal_string \"Another token\""
                        },
                        "value": "Another token"
                      },
                      {
                        "hexValue": "41544b4e",
                        "id": 45562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2988:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_376cdb3a0f356d3804fb3e85083838c11699169dc716b49471d525d4aed6fc35",
                          "typeString": "literal_string \"ATKN\""
                        },
                        "value": "ATKN"
                      },
                      {
                        "hexValue": "36",
                        "id": 45563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3008:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_586e852f6c5f1e59e8cb968f8a0b9e7d82f89e89bfaf70f75f23889e42f2f5b9",
                          "typeString": "literal_string \"Another token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_376cdb3a0f356d3804fb3e85083838c11699169dc716b49471d525d4aed6fc35",
                          "typeString": "literal_string \"ATKN\""
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 45554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2859:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_bytes22_$_t_bytes_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20Proxy_$44381_$",
                        "typeString": "function (bytes22,bytes memory,address,string memory,string memory,uint8) returns (contract ERC20Proxy)"
                      },
                      "typeName": {
                        "id": 45553,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45552,
                          "name": "ERC20Proxy",
                          "nameLocations": [
                            "2863:10:32"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44381,
                          "src": "2863:10:32"
                        },
                        "referencedDeclaration": 44381,
                        "src": "2863:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                          "typeString": "contract ERC20Proxy"
                        }
                      }
                    },
                    "id": 45564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2859:160:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                      "typeString": "contract ERC20Proxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2833:186:32"
                },
                {
                  "assignments": [
                    45567
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45567,
                      "mutability": "mutable",
                      "name": "anotherTokenHash",
                      "nameLocation": "3037:16:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45580,
                      "src": "3029:24:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45566,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3029:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45572,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45569,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "3067:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45570,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "3077:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "id": 45568,
                      "name": "hashTicket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44245,
                      "src": "3056:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes22_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes22,bytes memory) pure returns (uint256)"
                      }
                    },
                    "id": 45571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3056:29:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3029:56:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45574,
                            "name": "anotherToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45551,
                            "src": "3104:12:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3117:13:32",
                          "memberName": "getTicketHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44380,
                          "src": "3104:26:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 45576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3104:28:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45577,
                        "name": "anotherTokenHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45567,
                        "src": "3134:16:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45573,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "3095:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3095:56:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45579,
                  "nodeType": "ExpressionStatement",
                  "src": "3095:56:32"
                }
              ]
            },
            "functionSelector": "bdcb71a8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ShouldReturnCorrectTokenHash",
            "nameLocation": "2727:33:32",
            "parameters": {
              "id": 45540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2760:2:32"
            },
            "returnParameters": {
              "id": 45541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2770:0:32"
            },
            "scope": 45612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45611,
            "nodeType": "FunctionDefinition",
            "src": "3164:368:32",
            "nodes": [],
            "body": {
              "id": 45610,
              "nodeType": "Block",
              "src": "3220:312:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45585,
                      "mutability": "mutable",
                      "name": "ticketer",
                      "nameLocation": "3238:8:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45610,
                      "src": "3230:16:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes22",
                        "typeString": "bytes22"
                      },
                      "typeName": {
                        "id": 45584,
                        "name": "bytes22",
                        "nodeType": "ElementaryTypeName",
                        "src": "3230:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45590,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "736f6d65207469636b65746572",
                        "id": 45588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3257:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef32dedb78939384cb1b632ca87a0c664e2d668314868f65fd95e31cc9e08b32",
                          "typeString": "literal_string \"some ticketer\""
                        },
                        "value": "some ticketer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ef32dedb78939384cb1b632ca87a0c664e2d668314868f65fd95e31cc9e08b32",
                          "typeString": "literal_string \"some ticketer\""
                        }
                      ],
                      "id": 45587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3249:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes22_$",
                        "typeString": "type(bytes22)"
                      },
                      "typeName": {
                        "id": 45586,
                        "name": "bytes22",
                        "nodeType": "ElementaryTypeName",
                        "src": "3249:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 45589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3249:24:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes22",
                      "typeString": "bytes22"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3230:43:32"
                },
                {
                  "assignments": [
                    45592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45592,
                      "mutability": "mutable",
                      "name": "content",
                      "nameLocation": "3296:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45610,
                      "src": "3283:20:32",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 45591,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3283:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45597,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "666f7267656420636f6e74656e74",
                        "id": 45595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3323:16:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_879f14800772fb5e4ed6870949b23f314ed96bb432e6f23d2581b636bb991685",
                          "typeString": "literal_string \"forged content\""
                        },
                        "value": "forged content"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_879f14800772fb5e4ed6870949b23f314ed96bb432e6f23d2581b636bb991685",
                          "typeString": "literal_string \"forged content\""
                        }
                      ],
                      "expression": {
                        "id": 45593,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3306:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 45594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3310:12:32",
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "3306:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 45596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3306:34:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3283:57:32"
                },
                {
                  "assignments": [
                    45599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45599,
                      "mutability": "mutable",
                      "name": "expectedHash",
                      "nameLocation": "3358:12:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45610,
                      "src": "3350:20:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45598,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3350:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45601,
                  "initialValue": {
                    "hexValue": "3733323632343232383531323338363237353031313239393635373931323230373031393838353737373439303737323636393138393830313131313037393135313939353132303833303738",
                    "id": 45600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3385:77:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_73262422851238627501129965791220701988577749077266918980111107915199512083078_by_1",
                      "typeString": "int_const 7326...(69 digits omitted)...3078"
                    },
                    "value": "73262422851238627501129965791220701988577749077266918980111107915199512083078"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3350:112:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45604,
                            "name": "ticketer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45585,
                            "src": "3492:8:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            }
                          },
                          {
                            "id": 45605,
                            "name": "content",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45592,
                            "src": "3502:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 45603,
                          "name": "hashTicket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44245,
                          "src": "3481:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes22_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes22,bytes memory) pure returns (uint256)"
                          }
                        },
                        "id": 45606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3481:29:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45607,
                        "name": "expectedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45599,
                        "src": "3512:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45602,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "3472:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3472:53:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45609,
                  "nodeType": "ExpressionStatement",
                  "src": "3472:53:32"
                }
              ]
            },
            "functionSelector": "d87cb3da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ShouldCalculateCorrectTicketHash",
            "nameLocation": "3173:37:32",
            "parameters": {
              "id": 45582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3210:2:32"
            },
            "returnParameters": {
              "id": 45583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3220:0:32"
            },
            "scope": 45612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45230,
              "name": "BaseTest",
              "nameLocations": [
                "187:8:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44991,
              "src": "187:8:32"
            },
            "id": 45231,
            "nodeType": "InheritanceSpecifier",
            "src": "187:8:32"
          }
        ],
        "canonicalName": "ERC20ProxyTest",
        "contractDependencies": [
          44381,
          44702
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45612,
          44991,
          12199,
          12148,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "ERC20ProxyTest",
        "nameLocation": "169:14:32",
        "scope": 45613,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 32
}