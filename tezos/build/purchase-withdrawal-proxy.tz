{ parameter
    (or (ticket %relay_ticket (pair nat (option bytes)))
        (pair %purchase_withdrawal_proxy
           (pair %withdrawal
              (nat %withdrawal_id)
              (nat %full_amount)
              (address %ticketer)
              (pair %content nat (option bytes))
              (timestamp %timestamp)
              (address %base_withdrawer)
              (bytes %payload)
              (bytes %l2_caller))
           (address %service_provider)
           (address %fast_withdrawal_contract)
           (address %exchanger))) ;
  storage
    (pair (pair %withdrawal
             (nat %withdrawal_id)
             (nat %full_amount)
             (address %ticketer)
             (pair %content nat (option bytes))
             (timestamp %timestamp)
             (address %base_withdrawer)
             (bytes %payload)
             (bytes %l2_caller))
          (address %service_provider)
          (address %fast_withdrawal_contract)
          (address %exchanger)) ;
  code { UNPAIR ;
         IF_LEFT
           { DUP 2 ;
             GET 5 ;
             CONTRACT %purchase_withdrawal
               (pair (pair %withdrawal
                        (nat %withdrawal_id)
                        (nat %full_amount)
                        (address %ticketer)
                        (pair %content nat (option bytes))
                        (timestamp %timestamp)
                        (address %base_withdrawer)
                        (bytes %payload)
                        (bytes %l2_caller))
                     (address %service_provider)
                     (ticket %ticket (pair nat (option bytes)))) ;
             IF_NONE { PUSH string "PURCHASE_WITHDRAWAL_NOT_FOUND" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DUP 4 ;
             UNPAIR 4 ;
             DIG 2 ;
             DIG 3 ;
             DROP 2 ;
             DIG 4 ;
             DUG 2 ;
             PAIR 3 ;
             TRANSFER_TOKENS }
           { SWAP ;
             DROP ;
             PUSH nat 20 ;
             DUP 2 ;
             CAR ;
             GET 14 ;
             SIZE ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "L2 caller's address size should be 20 bytes long" ; FAILWITH }
                {} ;
             AMOUNT ;
             SELF %relay_ticket ;
             ADDRESS ;
             DUP 3 ;
             GET 6 ;
             CONTRACT %mint address ;
             IF_NONE { PUSH string "Invalid tez ticket contract" ; FAILWITH } {} ;
             DUG 2 ;
             TRANSFER_TOKENS } ;
         SWAP ;
         NIL operation ;
         DIG 2 ;
         CONS ;
         PAIR } }

