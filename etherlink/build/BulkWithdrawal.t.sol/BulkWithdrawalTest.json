{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bulkWithdrawal",
      "outputs": [
        {
          "internalType": "contract BulkWithdrawal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "content",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract KernelMock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver22",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_WithdrawalFromSmartContractSucceed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_WithdrawalNativeSucceed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticketHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticketer",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20Proxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrongContent",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrongTicketer",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "250:1413:30:-:0;;;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;-1:-1:-1;;;;;;326:12:29;;;;168:25:34;326:7:29;;141:18:34;326:12:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;303:35;;;-1:-1:-1;;;;;;303:35:29;-1:-1:-1;;;;;303:35:29;;;;;;;;;;365:12;;-1:-1:-1;;;;;;365:12:29;;373:3;365:12;;;168:25:34;365:7:29;;;;141:18:34;;365:12:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;344:33;;;-1:-1:-1;;;;;;344:33:29;-1:-1:-1;;;;;344:33:29;;;;;;;;;;414:50;;;-1:-1:-1;;;;;;414:50:29;;;;;;;;470:61;;;;;;;;;;560:34;;-1:-1:-1;;;560:34:29;;;891:29:34;936:12;;560:34:29;;;;;;;;;;;;537:57;;;;;;;:::i;:::-;-1:-1:-1;628:42:29;;3888:24:34;628:42:29;;;3876:37:34;3929:12;;628:42:29;;;;;;;;;;;;600:70;;;;;;;:::i;:::-;-1:-1:-1;700:35:29;;;;;;;;;;;;;;;;;676:59;;;;;;:::i;:::-;-1:-1:-1;741:61:29;;;-1:-1:-1;;;;;;741:61:29;;;;;250:1413:30;;;;;;;;;;;;204:290:34;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;369:16;;-1:-1:-1;;;;;414:31:34;;404:42;;394:70;;460:1;457;450:12;394:70;483:5;204:290;-1:-1:-1;;;204:290:34:o;959:127::-;1020:10;1015:3;1011:20;1008:1;1001:31;1051:4;1048:1;1041:15;1075:4;1072:1;1065:15;1091:380;1170:1;1166:12;;;;1213;;;1234:61;;1288:4;1280:6;1276:17;1266:27;;1234:61;1341:2;1333:6;1330:14;1310:18;1307:38;1304:161;;1387:10;1382:3;1378:20;1375:1;1368:31;1422:4;1419:1;1412:15;1450:4;1447:1;1440:15;1304:161;;1091:380;;;:::o;1601:544::-;1702:2;1697:3;1694:11;1691:448;;;1738:1;1763:5;1759:2;1752:17;1808:4;1804:2;1794:19;1878:2;1866:10;1862:19;1859:1;1855:27;1849:4;1845:38;1914:4;1902:10;1899:20;1896:47;;;-1:-1:-1;1937:4:34;1896:47;1992:2;1987:3;1983:12;1980:1;1976:20;1970:4;1966:31;1956:41;;2047:82;2065:2;2058:5;2055:13;2047:82;;;2110:17;;;2091:1;2080:13;2047:82;;;2051:3;;;1691:448;1601:544;;;:::o;2321:1348::-;2439:10;;-1:-1:-1;;;;;2461:30:34;;2458:56;;;2494:18;;:::i;:::-;2523:96;2612:6;2572:38;2604:4;2598:11;2572:38;:::i;:::-;2566:4;2523:96;:::i;:::-;2674:4;;2738:2;2727:14;;2755:1;2750:662;;;;3456:1;3473:6;3470:89;;;-1:-1:-1;3525:19:34;;;3519:26;3470:89;-1:-1:-1;;2278:1:34;2274:11;;;2270:24;2266:29;2256:40;2302:1;2298:11;;;2253:57;3572:81;;2720:943;;2750:662;1548:1;1541:14;;;1585:4;1572:18;;-1:-1:-1;;2786:20:34;;;2903:236;2917:7;2914:1;2911:14;2903:236;;;3006:19;;;3000:26;2985:42;;3098:27;;;;3066:1;3054:14;;;;2933:19;;2903:236;;;2907:3;3167:6;3158:7;3155:19;3152:201;;;3228:19;;;3222:26;-1:-1:-1;;3311:1:34;3307:14;;;3323:3;3303:24;3299:37;3295:42;3280:58;3265:74;;3152:201;-1:-1:-1;;;;;3399:1:34;3383:14;;;3379:22;3366:36;;-1:-1:-1;2321:1348:34:o;3674:273::-;250:1413:30;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "250:1413:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:800;;;:::i;:::-;;809:352:29;;;:::i;2452:134:6:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;741:61:29:-;;;;;;;;;;;;-1:-1:-1;;3285:40:34;;;3267:59;;3255:2;3240:18;741:61:29;3121:211:34;3221:133:6;;;:::i;414:50:29:-;;;;;;;;;2922:141:6;;;:::i;470:61:29:-;;;;;;;;;600:70;;;:::i;:::-;;;;;;;:::i;2738:178:6:-;;;:::i;:::-;;;;;;;:::i;383:25:29:-;;;;;;;;;5278::34;;;5266:2;5251:18;383:25:29;5132:177:34;2592:140:6;;;:::i;:::-;;;;;;;:::i;537:57:29:-;;;:::i;3069:146:6:-;;;:::i;1145:516:30:-;;;:::i;296:36::-;;;;;-1:-1:-1;;;;;296:36:30;;;;;;-1:-1:-1;;;;;6310:32:34;;;6292:51;;6280:2;6265:18;296:36:30;6122:227:34;2157:141:6;;;:::i;1819:584:0:-;;;:::i;:::-;;;6519:14:34;;6512:22;6494:41;;6482:2;6467:18;1819:584:0;6354:187:34;344:33:29;;;;;-1:-1:-1;;;;;344:33:29;;;273:24;;;;;-1:-1:-1;;;;;273:24:29;;;2304:142:6;;;:::i;676:59:29:-;;;:::i;1572:26:0:-;;;;;;;;;303:35:29;;;;;-1:-1:-1;;;;;303:35:29;;;244:23;;;;;-1:-1:-1;;;;;244:23:29;;;339:800:30;451:6;;424:52;;-1:-1:-1;;;;;451:6:30;;;;;;424:52;;;:::i;:::-;-1:-1:-1;;;;;7440:15:34;;;7422:34;;7492:15;;7487:2;7472:18;;7465:43;7372:2;7357:18;424:52:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;407:14:30;:69;;-1:-1:-1;;;;;;407:69:30;-1:-1:-1;;;;;407:69:30;;;;;;;;;486:6;;527:5;;565:8;;486:106;;-1:-1:-1;;;486:106:30;;:6;;;;:19;;:106;;527:5;;;;;407:69;;560:3;;565:8;;;;;;575:7;;486:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:34;611:5;;;;;;;;;-1:-1:-1;;;;;611:5:30;-1:-1:-1;;;;;611:17:30;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;632:3;602:8;:34::i;:::-;703:6;;729:5;;751:8;;675:104;;647:25;;-1:-1:-1;;;;;703:6:30;;;;:15;;675:104;;729:5;;;;;737:8;;747:2;;751:8;;;761:7;;675:104;;;:::i;:::-;;;;-1:-1:-1;;675:104:30;;;;;;;;;;;;;;-1:-1:-1;;;;;675:104:30;;;;;;;;;;;;;811:6;;789:44;;-1:-1:-1;;;789:44:30;;675:104;;-1:-1:-1;789:13:30;;-1:-1:-1;789:13:30;;:44;;-1:-1:-1;;;;;811:6:30;;;;;675:104;;789:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;852:3:30;;843:13;;-1:-1:-1;;;843:13:30;;-1:-1:-1;;;;;852:3:30;;;843:13;;;6292:51:34;843:8:30;;-1:-1:-1;843:8:30;;-1:-1:-1;6265:18:34;;843:13:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;933:14:30;;965:5;;987:8;;933:72;;-1:-1:-1;;;933:72:30;;-1:-1:-1;;;;;933:14:30;;;;-1:-1:-1;933:23:30;;-1:-1:-1;933:72:30;;965:5;;;;973:8;;983:2;;987:8;;;;;;997:7;;933:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1024:5:30;;1048:14;;1024:40;;-1:-1:-1;;;1024:40:30;;-1:-1:-1;;;;;1048:14:30;;;1024:40;;;6292:51:34;1015:64:30;;-1:-1:-1;1024:5:30;;;-1:-1:-1;1024:15:30;;6265:18:34;;1024:40:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1066:12;1015:8;:64::i;:::-;1098:5;;:19;;;-1:-1:-1;;;1098:19:30;;;;1089:43;;-1:-1:-1;;;;;1098:5:30;;:17;;:19;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;;;1089:43;397:742;339:800::o;809:352:29:-;852:5;;843:24;;;-1:-1:-1;;;843:24:29;;-1:-1:-1;;;;;852:5:29;;;843:24;;;11125:51:34;11192:18;;;11185:30;11251:1;11231:18;;;11224:29;-1:-1:-1;;;11269:18:34;;;11262:35;843:8:29;;;;11314:19:34;;843:24:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;886:3:29;;877:20;;;-1:-1:-1;;;877:20:29;;-1:-1:-1;;;;;886:3:29;;;877:20;;;11556:51:34;11623:18;;;11616:30;11682:1;11662:18;;;11655:29;-1:-1:-1;;;11700:18:34;;;11693:33;877:8:29;;-1:-1:-1;877:8:29;;-1:-1:-1;11743:19:34;;877:20:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;916:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;907:6:29;:25;;-1:-1:-1;;;;;;907:25:29;-1:-1:-1;;;;;907:25:29;;;;;;;;;978:8;;950:152;;978:8;;;;;;1000:7;;1090:2;;950:152;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;942:5:29;:160;;-1:-1:-1;;;;;;942:160:29;-1:-1:-1;;;;;942:160:29;;;;;;;;;;1136:8;;1146:7;1125:29;;;;1136:8;;;1146:7;1125:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;:29::i;:::-;1112:10;:42;809:352::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;600:70:29:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2738:178:6:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;537:57:29;;;;;;;:::i;3069:146:6:-;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1145:516:30;1246:6;;1219:52;;-1:-1:-1;;;;;1246:6:30;;;;;;1219:52;;;:::i;:::-;-1:-1:-1;;;;;7440:15:34;;;7422:34;;7492:15;;7487:2;7472:18;;7465:43;7372:2;7357:18;1219:52:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1202:14:30;:69;;-1:-1:-1;;;;;;1202:69:30;-1:-1:-1;;;;;1202:69:30;;;;;;1281:35;;;;;;;;;;;;-1:-1:-1;;;1281:35:30;;;;1336:3;;1281:35;;1326:23;;1336:3;1341:7;1326:9;:23::i;:::-;1414:6;;1399:46;;1359:25;;-1:-1:-1;;;;;1414:6:30;;:22;;1399:46;;1438:6;;1399:46;;;:::i;:::-;;;;-1:-1:-1;;1399:46:30;;;;;;;;;;;;;;-1:-1:-1;;;;;1399:46:30;;;;;;;;;;;;;1477:6;;1455:44;;-1:-1:-1;;;1455:44:30;;1399:46;;-1:-1:-1;1455:13:30;;-1:-1:-1;1455:13:30;;:44;;-1:-1:-1;;;;;1477:6:30;;;;;1399:46;;1455:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1509:14:30;;:50;;-1:-1:-1;;;1509:50:30;;-1:-1:-1;;;;;1509:14:30;;;;-1:-1:-1;1509:30:30;;-1:-1:-1;1547:3:30;;1509:50;;1552:6;;1509:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1586:6:30;;1569:38;;-1:-1:-1;;;;;;1586:6:30;1578:23;;-1:-1:-1;1603:3:30;;-1:-1:-1;1569:8:30;:38::i;:::-;1641:3;;1617:37;;-1:-1:-1;;;;;1641:3:30;1633:20;1617:15;:37::i;:::-;1192:469;;1145:516::o;2157:141:6:-;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;13204:51:34;;;-1:-1:-1;;;13271:18:34;;;13264:34;2196:43:0;;;;;;;;;13177:18:34;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;676:59:29:-;;;;;;;:::i;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;14474:2:34;14456:21;;;14513:2;14493:18;;;14486:30;14552:34;14547:2;14532:18;;14525:62;-1:-1:-1;;;14618:2:34;14603:18;;14596:32;14660:3;14645:19;;14272:398;5293:41:0;;;;;;;;5353:31;;;14887:21:34;;;14944:2;14924:18;;;14917:30;-1:-1:-1;;;14978:2:34;14963:18;;14956:40;15063:4;15048:20;;15041:36;;;5353:31:0;;;;;;;15028:3:34;5353:31:0;;;5403;;;15300:21:34;;;15357:2;15337:18;;;15330:30;-1:-1:-1;;;15391:2:34;15376:18;;15369:40;15476:4;15461:20;;15454:36;;;5403:31:0;;;;;;;15441:3:34;5403:31:0;;;5448:6;:4;:6::i;128:162:23:-;210:7;267:8;277:7;250:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;250:35:23;;;;;;;;;240:46;;250:35;240:46;;;;;128:162;-1:-1:-1;;;128:162:23:o;25654:144:4:-;25733:24;;-1:-1:-1;;;25733:24:4;;-1:-1:-1;;;;;13222:32:34;;25733:24:4;;;13204:51:34;13271:18;;;13264:34;;;25733:7:4;;;;13177:18:34;;25733:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25767:24:4;;-1:-1:-1;;;25767:24:4;;-1:-1:-1;;;;;6310:32:34;;25767:24:4;;;6292:51:34;25767:13:4;;-1:-1:-1;25767:13:4;;-1:-1:-1;6265:18:34;;25767:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25654:144;;:::o;781:114:14:-;831:57;884:2;847:40;;;;;;5278:25:34;;5266:2;5251:18;;5132:177;847:40:14;;;;-1:-1:-1;;847:40:14;;;;;;;;;;;;;;-1:-1:-1;;;;;847:40:14;-1:-1:-1;;;847:40:14;;;831:15;:57::i;2409:432:0:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;16382:51:34;;;-1:-1:-1;;;16449:18:34;;;16442:34;;;;2712:4:0;16492:18:34;;;16485:34;2489:11:0;;1671:64;2586:43;;16355:18:34;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;181:376:14:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;180:658:34:-;351:2;403:21;;;473:13;;376:18;;;495:22;;;322:4;;351:2;574:15;;;;548:2;533:18;;;322:4;617:195;631:6;628:1;625:13;617:195;;;696:13;;-1:-1:-1;;;;;692:39:34;680:52;;787:15;;;;752:12;;;;728:1;646:9;617:195;;;-1:-1:-1;829:3:34;;180:658;-1:-1:-1;;;;;;180:658:34:o;843:250::-;928:1;938:113;952:6;949:1;946:13;938:113;;;1028:11;;;1022:18;1009:11;;;1002:39;974:2;967:10;938:113;;;-1:-1:-1;;1085:1:34;1067:16;;1060:27;843:250::o;1098:271::-;1140:3;1178:5;1172:12;1205:6;1200:3;1193:19;1221:76;1290:6;1283:4;1278:3;1274:14;1267:4;1260:5;1256:16;1221:76;:::i;:::-;1351:2;1330:15;-1:-1:-1;;1326:29:34;1317:39;;;;1358:4;1313:50;;1098:271;-1:-1:-1;;1098:271:34:o;1374:1742::-;1607:2;1659:21;;;1729:13;;1632:18;;;1751:22;;;1578:4;;1607:2;1792;;1810:18;;;;1847:1;1890:15;;;1875:31;;1871:40;;1934:15;;;1578:4;;1998:1089;2014:6;2009:3;2006:15;1998:1089;;;-1:-1:-1;;2083:22:34;;;2079:36;2067:49;;2139:13;;2226:9;;-1:-1:-1;;;;;2222:35:34;2207:51;;2297:11;;2291:18;2329:15;;;2322:27;;;2410:19;;2179:15;;;2442:24;;;2623:21;;;;2489:2;2571:17;;;2559:30;;2555:39;;;2513:15;;;;2668:1;2682:296;2698:8;2693:3;2690:17;2682:296;;;2804:2;2800:7;2791:6;2783;2779:19;2775:33;2768:5;2761:48;2836:42;2871:6;2860:8;2854:15;2836:42;:::i;:::-;2907:17;;;;2826:52;-1:-1:-1;2950:14:34;;;;2726:1;2717:11;2682:296;;;-1:-1:-1;;;3065:12:34;;;;3001:6;-1:-1:-1;;3030:15:34;;;;2040:1;2031:11;1998:1089;;;-1:-1:-1;3104:6:34;;1374:1742;-1:-1:-1;;;;;;;;;;1374:1742:34:o;3337:218::-;3484:2;3473:9;3466:21;3447:4;3504:45;3545:2;3534:9;3530:18;3522:6;3504:45;:::i;:::-;3496:53;3337:218;-1:-1:-1;;;3337:218:34:o;3560:1567::-;3762:4;3791:2;3831;3820:9;3816:18;3861:2;3850:9;3843:21;3884:6;3919;3913:13;3950:6;3942;3935:22;3976:2;3966:12;;4009:2;3998:9;3994:18;3987:25;;4071:2;4061:6;4058:1;4054:14;4043:9;4039:30;4035:39;4109:2;4101:6;4097:15;4130:1;4151;4161:937;4177:6;4172:3;4169:15;4161:937;;;4246:22;;;-1:-1:-1;;4242:36:34;4230:49;;4302:13;;4389:9;;-1:-1:-1;;;;;4385:35:34;4370:51;;4460:11;;4454:18;4492:15;;;4485:27;;;4573:19;;4342:15;;;4605:24;;;4695:21;;;;4740:1;;4663:2;4651:15;;;4754:236;4770:8;4765:3;4762:17;4754:236;;;4851:15;;-1:-1:-1;;;;;;4847:42:34;4833:57;;4959:17;;;;4798:1;4789:11;;;;;4916:14;;;;4754:236;;;-1:-1:-1;5076:12:34;;;;5013:5;-1:-1:-1;;;5041:15:34;;;;4203:1;4194:11;4161:937;;;-1:-1:-1;5115:6:34;;3560:1567;-1:-1:-1;;;;;;;;;3560:1567:34:o;5314:803::-;5476:4;5505:2;5545;5534:9;5530:18;5575:2;5564:9;5557:21;5598:6;5633;5627:13;5664:6;5656;5649:22;5702:2;5691:9;5687:18;5680:25;;5764:2;5754:6;5751:1;5747:14;5736:9;5732:30;5728:39;5714:53;;5802:2;5794:6;5790:15;5823:1;5833:255;5847:6;5844:1;5841:13;5833:255;;;5940:2;5936:7;5924:9;5916:6;5912:22;5908:36;5903:3;5896:49;5968:40;6001:6;5992;5986:13;5968:40;:::i;:::-;5958:50;-1:-1:-1;6066:12:34;;;;6031:15;;;;5869:1;5862:9;5833:255;;;-1:-1:-1;6105:6:34;;5314:803;-1:-1:-1;;;;;;;5314:803:34:o;7519:380::-;7598:1;7594:12;;;;7641;;;7662:61;;7716:4;7708:6;7704:17;7694:27;;7662:61;7769:2;7761:6;7758:14;7738:18;7735:38;7732:161;;7815:10;7810:3;7806:20;7803:1;7796:31;7850:4;7847:1;7840:15;7878:4;7875:1;7868:15;7732:161;;7519:380;;;:::o;8029:1079::-;8113:12;;8078:3;;8168:1;8188:18;;;;8241;;;;8268:61;;8322:4;8314:6;8310:17;8300:27;;8268:61;8348:2;8396;8388:6;8385:14;8365:18;8362:38;8359:161;;8442:10;8437:3;8433:20;8430:1;8423:31;8477:4;8474:1;8467:15;8505:4;8502:1;8495:15;8359:161;112:19;;;164:4;155:14;;8617:18;8644:132;;;;8790:1;8785:317;;;;8610:492;;8644:132;-1:-1:-1;;8679:24:34;;8665:39;;8749:14;;8742:22;8739:1;8735:30;8724:42;;;-1:-1:-1;8644:132:34;;8785:317;7976:1;7969:14;;;8013:4;8000:18;;8878:1;8892:167;8906:6;8903:1;8900:13;8892:167;;;8986:14;;8971:13;;;8964:37;9029:16;;;;8921:10;;8892:167;;;9079:13;;;-1:-1:-1;;8610:492:34;;;;;;;;8029:1079;;;;:::o;9113:609::-;-1:-1:-1;;;;;9417:15:34;;;9399:34;;9469:15;;9464:2;9449:18;;9442:43;9516:2;9501:18;;9494:34;;;-1:-1:-1;;9564:40:34;;9559:2;9544:18;;9537:68;9379:3;9636;9621:19;;9614:32;;;9342:4;;9663:53;;9696:19;;9688:6;9663:53;:::i;:::-;9655:61;9113:609;-1:-1:-1;;;;;;;9113:609:34:o;9727:184::-;9797:6;9850:2;9838:9;9829:7;9825:23;9821:32;9818:52;;;9866:1;9863;9856:12;9818:52;-1:-1:-1;9889:16:34;;9727:184;-1:-1:-1;9727:184:34:o;9916:672::-;-1:-1:-1;;;;;10196:32:34;;10178:51;;10216:3;10260:2;10245:18;;10238:31;;;-1:-1:-1;;10292:53:34;;10325:19;;10317:6;10292:53;:::i;:::-;10381:6;10376:2;10365:9;10361:18;10354:34;10440:22;10436:27;10428:6;10424:40;10419:2;10408:9;10404:18;10397:68;10514:9;10506:6;10502:22;10496:3;10485:9;10481:19;10474:51;10542:40;10575:6;10567;10542:40;:::i;:::-;10534:48;9916:672;-1:-1:-1;;;;;;;;9916:672:34:o;10593:315::-;-1:-1:-1;;;;;10768:32:34;;10750:51;;10837:2;10832;10817:18;;10810:30;;;-1:-1:-1;;10857:45:34;;10883:18;;10875:6;10857:45;:::i;:::-;10849:53;10593:315;-1:-1:-1;;;;10593:315:34:o;11773:1027::-;12226:22;12222:27;12214:6;12210:40;12199:9;12192:59;12287:3;12282:2;12271:9;12267:18;12260:31;12173:4;12314:53;12362:3;12351:9;12347:19;12339:6;12314:53;:::i;:::-;12432:1;12428;12423:3;12419:11;12415:19;12407:6;12403:32;12398:2;12387:9;12383:18;12376:60;12467:9;12459:6;12455:22;12513:2;12508;12497:9;12493:18;12486:30;12540:1;12532:6;12525:17;-1:-1:-1;;;12570:2:34;12562:6;12558:15;12551:32;12628:2;12624;12620:11;12614:3;12603:9;12599:19;12592:40;;12665:1;12660:2;12652:6;12648:15;12641:26;-1:-1:-1;;;12695:2:34;12687:6;12683:15;12676:30;12735:3;12727:6;12723:16;12715:24;;;12788:4;12780:6;12776:17;12770:3;12759:9;12755:19;12748:46;11773:1027;;;;;;;:::o;13309:384::-;-1:-1:-1;;;;;;13494:33:34;;13482:46;;13551:13;;13464:3;;13573:74;13551:13;13636:1;13627:11;;13620:4;13608:17;;13573:74;:::i;:::-;13667:16;;;;13685:1;13663:24;;13309:384;-1:-1:-1;;;13309:384:34:o;13698:287::-;13827:3;13865:6;13859:13;13881:66;13940:6;13935:3;13928:4;13920:6;13916:17;13881:66;:::i;:::-;13963:16;;;;;13698:287;-1:-1:-1;;13698:287:34:o;13990:277::-;14057:6;14110:2;14098:9;14089:7;14085:23;14081:32;14078:52;;;14126:1;14123;14116:12;14078:52;14158:9;14152:16;14211:5;14204:13;14197:21;14190:5;14187:32;14177:60;;14233:1;14230;14223:12;15501:395;15704:22;15700:27;15692:6;15688:40;15683:3;15676:53;15658:3;15758:6;15752:13;15774:75;15842:6;15837:2;15832:3;15828:12;15821:4;15813:6;15809:17;15774:75;:::i;:::-;15869:16;;;;15887:2;15865:25;;15501:395;-1:-1:-1;;;15501:395:34:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "bulkWithdrawal()": "a84922a4",
    "content()": "8a4d5a67",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "kernel()": "d4aae0c4",
    "receiver()": "f7260d3e",
    "receiver22()": "392c1722",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_WithdrawalFromSmartContractSucceed()": "094ae1fc",
    "test_WithdrawalNativeSucceed()": "97361594",
    "ticketHash()": "76822969",
    "ticketer()": "3f70f347",
    "token()": "fc0c546a",
    "wrongContent()": "56342f63",
    "wrongTicketer()": "4f6c39bb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bulkWithdrawal\",\"outputs\":[{\"internalType\":\"contract BulkWithdrawal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"content\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract KernelMock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver22\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_WithdrawalFromSmartContractSucceed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_WithdrawalNativeSucceed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketer\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20Proxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrongContent\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrongTicketer\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BulkWithdrawal.t.sol\":\"BulkWithdrawalTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85\",\"dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9\",\"dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/BulkWithdrawal.sol\":{\"keccak256\":\"0x5c68ef2591ba7318b01860ae0859eb0193b130a18771710711379377c0af2a20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://456b42c9d7e9951236befc04c3d7018277e12f3231d7e3df4f44a9b148f53307\",\"dweb:/ipfs/QmXtEvTbVfA6Y8NwVFewqJfjcHNbT8bcco1bDaAZdRY7bs\"]},\"src/ERC20Proxy.sol\":{\"keccak256\":\"0xafd6c57af4ab61b1a85518cccae90ca59c0b48a294118f88057c348b6c940771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61172b41292899bae136c38b4ccf6827dc633b897f0311870cf54a110aedd451\",\"dweb:/ipfs/Qmd3u269joQEJwp9xgeEEUYoa9sNdHr8kUsGbkVSj5T8PQ\"]},\"src/IDepositEvent.sol\":{\"keccak256\":\"0x9bf8fecd020b2319b285d87d8c56977809e6e40738fd7e4c955e8651f298f507\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://624f70f6e456b3c846089af4d8c9e342dec7888dae25df481c2191a70bffbb1e\",\"dweb:/ipfs/QmPiAr9m7Ehb3Ru1RHaVmQUdMezD4B88kNRBvvLc24jCoS\"]},\"src/IWithdrawalEvent.sol\":{\"keccak256\":\"0x64f849e75fc2fa0b8a2503d700e0099a869231d36073111eef5edf1bb7a923da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cd4ce5e24eda5568e9016f4a5efac14ce901ae6c94a569e33bfb9f7ed61cb55\",\"dweb:/ipfs/QmSBFeeQvAKfZLW7VCfYgiN8ieuFYX3fEhPuu2mjmTZD5k\"]},\"src/KernelMock.sol\":{\"keccak256\":\"0xe64d5f9b6ca11a4b554af70a5ed47331eeef080ee07775acef030f200e53ee95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5e592849fca49601322ae8fa9b0cab2c2975c605c98960cfc795a4fb7d5b06b\",\"dweb:/ipfs/QmSa9hw6L8ZNJpXRHJRunDchyc4wmKHJReCo4e93ovSQ8a\"]},\"test/Base.t.sol\":{\"keccak256\":\"0x691c6c3ddb55cd866c3f60ffc58051bbc183a95a3ff253c1d1e45bb605530313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc48f4f8796dc850b8f8394ddf8717e93e8a526aabeb8663936248edfad45fa\",\"dweb:/ipfs/QmcbU5r1zSFqPktnLLT6dGEp2V4B1pVjwmkCqMuNq9vbUA\"]},\"test/BulkWithdrawal.t.sol\":{\"keccak256\":\"0x484527b00e26aff66774cca0c33868b0feafc2876e463789eadff42d5283b4ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a99f447cef5119a0f0d41f34be67fd155df6f010f2d66457dab4fe86493c3bc\",\"dweb:/ipfs/QmQqEToHmuTvVsuWQe9MYQDiUGcj2JNNpCaBSN8NDXYjA4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bulkWithdrawal",
          "outputs": [
            {
              "internalType": "contract BulkWithdrawal",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "content",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract KernelMock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiver",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiver22",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_WithdrawalFromSmartContractSucceed"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_WithdrawalNativeSucceed"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ticketHash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ticketer",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract ERC20Proxy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrongContent",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrongTicketer",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/BulkWithdrawal.t.sol": "BulkWithdrawalTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a",
        "urls": [
          "bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85",
          "dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9",
        "urls": [
          "bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9",
          "dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/BulkWithdrawal.sol": {
        "keccak256": "0x5c68ef2591ba7318b01860ae0859eb0193b130a18771710711379377c0af2a20",
        "urls": [
          "bzz-raw://456b42c9d7e9951236befc04c3d7018277e12f3231d7e3df4f44a9b148f53307",
          "dweb:/ipfs/QmXtEvTbVfA6Y8NwVFewqJfjcHNbT8bcco1bDaAZdRY7bs"
        ],
        "license": "MIT"
      },
      "src/ERC20Proxy.sol": {
        "keccak256": "0xafd6c57af4ab61b1a85518cccae90ca59c0b48a294118f88057c348b6c940771",
        "urls": [
          "bzz-raw://61172b41292899bae136c38b4ccf6827dc633b897f0311870cf54a110aedd451",
          "dweb:/ipfs/Qmd3u269joQEJwp9xgeEEUYoa9sNdHr8kUsGbkVSj5T8PQ"
        ],
        "license": "MIT"
      },
      "src/IDepositEvent.sol": {
        "keccak256": "0x9bf8fecd020b2319b285d87d8c56977809e6e40738fd7e4c955e8651f298f507",
        "urls": [
          "bzz-raw://624f70f6e456b3c846089af4d8c9e342dec7888dae25df481c2191a70bffbb1e",
          "dweb:/ipfs/QmPiAr9m7Ehb3Ru1RHaVmQUdMezD4B88kNRBvvLc24jCoS"
        ],
        "license": "MIT"
      },
      "src/IWithdrawalEvent.sol": {
        "keccak256": "0x64f849e75fc2fa0b8a2503d700e0099a869231d36073111eef5edf1bb7a923da",
        "urls": [
          "bzz-raw://1cd4ce5e24eda5568e9016f4a5efac14ce901ae6c94a569e33bfb9f7ed61cb55",
          "dweb:/ipfs/QmSBFeeQvAKfZLW7VCfYgiN8ieuFYX3fEhPuu2mjmTZD5k"
        ],
        "license": "MIT"
      },
      "src/KernelMock.sol": {
        "keccak256": "0xe64d5f9b6ca11a4b554af70a5ed47331eeef080ee07775acef030f200e53ee95",
        "urls": [
          "bzz-raw://d5e592849fca49601322ae8fa9b0cab2c2975c605c98960cfc795a4fb7d5b06b",
          "dweb:/ipfs/QmSa9hw6L8ZNJpXRHJRunDchyc4wmKHJReCo4e93ovSQ8a"
        ],
        "license": "MIT"
      },
      "test/Base.t.sol": {
        "keccak256": "0x691c6c3ddb55cd866c3f60ffc58051bbc183a95a3ff253c1d1e45bb605530313",
        "urls": [
          "bzz-raw://6bc48f4f8796dc850b8f8394ddf8717e93e8a526aabeb8663936248edfad45fa",
          "dweb:/ipfs/QmcbU5r1zSFqPktnLLT6dGEp2V4B1pVjwmkCqMuNq9vbUA"
        ],
        "license": "MIT"
      },
      "test/BulkWithdrawal.t.sol": {
        "keccak256": "0x484527b00e26aff66774cca0c33868b0feafc2876e463789eadff42d5283b4ba",
        "urls": [
          "bzz-raw://2a99f447cef5119a0f0d41f34be67fd155df6f010f2d66457dab4fe86493c3bc",
          "dweb:/ipfs/QmQqEToHmuTvVsuWQe9MYQDiUGcj2JNNpCaBSN8NDXYjA4"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/BulkWithdrawal.t.sol",
    "id": 45136,
    "exportedSymbols": {
      "BaseTest": [
        44931
      ],
      "BulkWithdrawal": [
        44149
      ],
      "BulkWithdrawalTest": [
        45135
      ],
      "ERC20Proxy": [
        44312
      ],
      "console": [
        21956
      ],
      "hashTicket": [
        44174
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1632:30",
    "nodes": [
      {
        "id": 44933,
        "nodeType": "PragmaDirective",
        "src": "32:24:30",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 44935,
        "nodeType": "ImportDirective",
        "src": "58:38:30",
        "nodes": [],
        "absolutePath": "test/Base.t.sol",
        "file": "./Base.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45136,
        "sourceUnit": 44932,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44934,
              "name": "BaseTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44931,
              "src": "66:8:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44937,
        "nodeType": "ImportDirective",
        "src": "97:57:30",
        "nodes": [],
        "absolutePath": "src/BulkWithdrawal.sol",
        "file": "../src/BulkWithdrawal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45136,
        "sourceUnit": 44150,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44936,
              "name": "BulkWithdrawal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44149,
              "src": "105:14:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44940,
        "nodeType": "ImportDirective",
        "src": "155:61:30",
        "nodes": [],
        "absolutePath": "src/ERC20Proxy.sol",
        "file": "../src/ERC20Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45136,
        "sourceUnit": 44313,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44938,
              "name": "ERC20Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44312,
              "src": "163:10:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44939,
              "name": "hashTicket",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44174,
              "src": "175:10:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44941,
        "nodeType": "ImportDirective",
        "src": "217:31:30",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45136,
        "sourceUnit": 21957,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45135,
        "nodeType": "ContractDefinition",
        "src": "250:1413:30",
        "nodes": [
          {
            "id": 44946,
            "nodeType": "VariableDeclaration",
            "src": "296:36:30",
            "nodes": [],
            "constant": false,
            "functionSelector": "a84922a4",
            "mutability": "mutable",
            "name": "bulkWithdrawal",
            "nameLocation": "318:14:30",
            "scope": 45135,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
              "typeString": "contract BulkWithdrawal"
            },
            "typeName": {
              "id": 44945,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44944,
                "name": "BulkWithdrawal",
                "nameLocations": [
                  "296:14:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44149,
                "src": "296:14:30"
              },
              "referencedDeclaration": 44149,
              "src": "296:14:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                "typeString": "contract BulkWithdrawal"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45060,
            "nodeType": "FunctionDefinition",
            "src": "339:800:30",
            "nodes": [],
            "body": {
              "id": 45059,
              "nodeType": "Block",
              "src": "397:742:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44949,
                      "name": "bulkWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44946,
                      "src": "407:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                        "typeString": "contract BulkWithdrawal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 44955,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44832,
                              "src": "451:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KernelMock_$44767",
                                "typeString": "contract KernelMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_KernelMock_$44767",
                                "typeString": "contract KernelMock"
                              }
                            ],
                            "id": 44954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "443:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44953,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "443:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "443:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 44959,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44832,
                              "src": "468:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KernelMock_$44767",
                                "typeString": "contract KernelMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_KernelMock_$44767",
                                "typeString": "contract KernelMock"
                              }
                            ],
                            "id": 44958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "460:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44957,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "460:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "460:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "424:18:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_BulkWithdrawal_$44149_$",
                          "typeString": "function (address,address) returns (contract BulkWithdrawal)"
                        },
                        "typeName": {
                          "id": 44951,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44950,
                            "name": "BulkWithdrawal",
                            "nameLocations": [
                              "428:14:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44149,
                            "src": "428:14:30"
                          },
                          "referencedDeclaration": 44149,
                          "src": "428:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                            "typeString": "contract BulkWithdrawal"
                          }
                        }
                      },
                      "id": 44961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "424:52:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                        "typeString": "contract BulkWithdrawal"
                      }
                    },
                    "src": "407:69:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                      "typeString": "contract BulkWithdrawal"
                    }
                  },
                  "id": 44963,
                  "nodeType": "ExpressionStatement",
                  "src": "407:69:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44969,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44829,
                            "src": "527:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44312",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44312",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 44968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "519:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44967,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "519:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "519:14:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44973,
                            "name": "bulkWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44946,
                            "src": "543:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                              "typeString": "contract BulkWithdrawal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                              "typeString": "contract BulkWithdrawal"
                            }
                          ],
                          "id": 44972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "535:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44971,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "535:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "535:23:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 44975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "560:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 44976,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44852,
                        "src": "565:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 44977,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44864,
                        "src": "575:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 44964,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44832,
                        "src": "486:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44767",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 44966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "493:12:30",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44683,
                      "src": "486:19:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 44978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "486:106:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44979,
                  "nodeType": "ExpressionStatement",
                  "src": "486:106:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44981,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44829,
                            "src": "611:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44312",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 44982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "617:11:30",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43404,
                          "src": "611:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "611:19:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 44984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "632:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 44980,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "602:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:34:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44986,
                  "nodeType": "ExpressionStatement",
                  "src": "602:34:30"
                },
                {
                  "assignments": [
                    44988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44988,
                      "mutability": "mutable",
                      "name": "expectedData",
                      "nameLocation": "660:12:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 45059,
                      "src": "647:25:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 44987,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "647:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45003,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44991,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44832,
                          "src": "703:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KernelMock_$44767",
                            "typeString": "contract KernelMock"
                          }
                        },
                        "id": 44992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "710:8:30",
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44760,
                        "src": "703:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (address,bytes memory,uint256,bytes22,bytes memory) external"
                        }
                      },
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "id": 44995,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44829,
                                "src": "729:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44312",
                                  "typeString": "contract ERC20Proxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44312",
                                  "typeString": "contract ERC20Proxy"
                                }
                              ],
                              "id": 44994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "721:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44993,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "721:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "721:14:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 44997,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44876,
                            "src": "737:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          {
                            "hexValue": "3132",
                            "id": 44998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "747:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_12_by_1",
                              "typeString": "int_const 12"
                            },
                            "value": "12"
                          },
                          {
                            "id": 44999,
                            "name": "ticketer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44852,
                            "src": "751:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            }
                          },
                          {
                            "id": 45000,
                            "name": "content",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44864,
                            "src": "761:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          }
                        ],
                        "id": 45001,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "720:49:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_bytes_storage_$_t_rational_12_by_1_$_t_bytes22_$_t_bytes_storage_$",
                          "typeString": "tuple(address,bytes storage ref,int_const 12,bytes22,bytes storage ref)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (address,bytes memory,uint256,bytes22,bytes memory) external"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_address_$_t_bytes_storage_$_t_rational_12_by_1_$_t_bytes22_$_t_bytes_storage_$",
                          "typeString": "tuple(address,bytes storage ref,int_const 12,bytes22,bytes storage ref)"
                        }
                      ],
                      "expression": {
                        "id": 44989,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "675:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 44990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "679:10:30",
                      "memberName": "encodeCall",
                      "nodeType": "MemberAccess",
                      "src": "675:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 45002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "675:104:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "647:132:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45009,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44832,
                            "src": "811:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44767",
                              "typeString": "contract KernelMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KernelMock_$44767",
                              "typeString": "contract KernelMock"
                            }
                          ],
                          "id": 45008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "803:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45007,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "803:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "803:15:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45011,
                        "name": "expectedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44988,
                        "src": "820:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45004,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "789:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "792:10:30",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13636,
                      "src": "789:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:44:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45013,
                  "nodeType": "ExpressionStatement",
                  "src": "789:44:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45017,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44844,
                        "src": "852:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45014,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "843:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "846:5:30",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "843:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "843:13:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45019,
                  "nodeType": "ExpressionStatement",
                  "src": "843:13:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45025,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44829,
                            "src": "965:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44312",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44312",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "957:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45023,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "957:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "957:14:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45027,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44876,
                        "src": "973:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "3132",
                        "id": 45028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "983:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12_by_1",
                          "typeString": "int_const 12"
                        },
                        "value": "12"
                      },
                      {
                        "id": 45029,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44852,
                        "src": "987:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45030,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44864,
                        "src": "997:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_12_by_1",
                          "typeString": "int_const 12"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45020,
                        "name": "bulkWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44946,
                        "src": "933:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                          "typeString": "contract BulkWithdrawal"
                        }
                      },
                      "id": 45022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "948:8:30",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44118,
                      "src": "933:23:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:72:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45032,
                  "nodeType": "ExpressionStatement",
                  "src": "933:72:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45038,
                                "name": "bulkWithdrawal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44946,
                                "src": "1048:14:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                                  "typeString": "contract BulkWithdrawal"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                                  "typeString": "contract BulkWithdrawal"
                                }
                              ],
                              "id": 45037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1040:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45036,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1040:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1040:23:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45034,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44829,
                            "src": "1024:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44312",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1030:9:30",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43418,
                          "src": "1024:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1024:40:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_88_by_1",
                          "typeString": "int_const 88"
                        },
                        "id": 45045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 45041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1066:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          },
                          "id": 45044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3132",
                            "id": 45042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1072:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_12_by_1",
                              "typeString": "int_const 12"
                            },
                            "value": "12"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 45043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1077:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1072:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          }
                        },
                        "src": "1066:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_88_by_1",
                          "typeString": "int_const 88"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_88_by_1",
                          "typeString": "int_const 88"
                        }
                      ],
                      "id": 45033,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1015:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1015:64:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45047,
                  "nodeType": "ExpressionStatement",
                  "src": "1015:64:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45049,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44829,
                            "src": "1098:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44312",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1104:11:30",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43404,
                          "src": "1098:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 45051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1098:19:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_88_by_1",
                          "typeString": "int_const 88"
                        },
                        "id": 45056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 45052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1119:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          },
                          "id": 45055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3132",
                            "id": 45053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1125:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_12_by_1",
                              "typeString": "int_const 12"
                            },
                            "value": "12"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 45054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1130:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1125:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_12_by_1",
                            "typeString": "int_const 12"
                          }
                        },
                        "src": "1119:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_88_by_1",
                          "typeString": "int_const 88"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_88_by_1",
                          "typeString": "int_const 88"
                        }
                      ],
                      "id": 45048,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1089:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1089:43:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45058,
                  "nodeType": "ExpressionStatement",
                  "src": "1089:43:30"
                }
              ]
            },
            "functionSelector": "094ae1fc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_WithdrawalFromSmartContractSucceed",
            "nameLocation": "348:39:30",
            "parameters": {
              "id": 44947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:2:30"
            },
            "returnParameters": {
              "id": 44948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:0:30"
            },
            "scope": 45135,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45134,
            "nodeType": "FunctionDefinition",
            "src": "1145:516:30",
            "nodes": [],
            "body": {
              "id": 45133,
              "nodeType": "Block",
              "src": "1192:469:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45063,
                      "name": "bulkWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44946,
                      "src": "1202:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                        "typeString": "contract BulkWithdrawal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45069,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44832,
                              "src": "1246:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KernelMock_$44767",
                                "typeString": "contract KernelMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_KernelMock_$44767",
                                "typeString": "contract KernelMock"
                              }
                            ],
                            "id": 45068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1238:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45067,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1238:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1238:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 45073,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44832,
                              "src": "1263:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KernelMock_$44767",
                                "typeString": "contract KernelMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_KernelMock_$44767",
                                "typeString": "contract KernelMock"
                              }
                            ],
                            "id": 45072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1255:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45071,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1255:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1255:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1219:18:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_BulkWithdrawal_$44149_$",
                          "typeString": "function (address,address) returns (contract BulkWithdrawal)"
                        },
                        "typeName": {
                          "id": 45065,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45064,
                            "name": "BulkWithdrawal",
                            "nameLocations": [
                              "1223:14:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44149,
                            "src": "1223:14:30"
                          },
                          "referencedDeclaration": 44149,
                          "src": "1223:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                            "typeString": "contract BulkWithdrawal"
                          }
                        }
                      },
                      "id": 45075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1219:52:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                        "typeString": "contract BulkWithdrawal"
                      }
                    },
                    "src": "1202:69:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                      "typeString": "contract BulkWithdrawal"
                    }
                  },
                  "id": 45077,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:69:30"
                },
                {
                  "assignments": [
                    45079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45079,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "1295:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 45133,
                      "src": "1281:20:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 45078,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1281:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45081,
                  "initialValue": {
                    "hexValue": "736f6d65546172676574",
                    "id": 45080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1304:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4826796f5a1f0edf1ad09d445097e1ac0245525120a378bd3c5652d455d093d2",
                      "typeString": "literal_string \"someTarget\""
                    },
                    "value": "someTarget"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1281:35:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45083,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44844,
                        "src": "1336:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 45084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1341:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "id": 45082,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6752,
                        6773,
                        6797,
                        6821
                      ],
                      "referencedDeclaration": 6773,
                      "src": "1326:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1326:23:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45086,
                  "nodeType": "ExpressionStatement",
                  "src": "1326:23:30"
                },
                {
                  "assignments": [
                    45088
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45088,
                      "mutability": "mutable",
                      "name": "expectedData",
                      "nameLocation": "1372:12:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 45133,
                      "src": "1359:25:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 45087,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1359:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45095,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45091,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44832,
                          "src": "1414:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KernelMock_$44767",
                            "typeString": "contract KernelMock"
                          }
                        },
                        "id": 45092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1421:15:30",
                        "memberName": "withdraw_base58",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44766,
                        "src": "1414:22:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) payable external"
                        }
                      },
                      {
                        "id": 45093,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45079,
                        "src": "1438:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) payable external"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 45089,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1399:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 45090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1403:10:30",
                      "memberName": "encodeCall",
                      "nodeType": "MemberAccess",
                      "src": "1399:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 45094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1399:46:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1359:86:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45101,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44832,
                            "src": "1477:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44767",
                              "typeString": "contract KernelMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KernelMock_$44767",
                              "typeString": "contract KernelMock"
                            }
                          ],
                          "id": 45100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1469:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45099,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1469:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1469:15:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45103,
                        "name": "expectedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45088,
                        "src": "1486:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45096,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1455:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1458:10:30",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13636,
                      "src": "1455:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1455:44:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45105,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:44:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45111,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45079,
                        "src": "1552:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 45106,
                          "name": "bulkWithdrawal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44946,
                          "src": "1509:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BulkWithdrawal_$44149",
                            "typeString": "contract BulkWithdrawal"
                          }
                        },
                        "id": 45108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1524:15:30",
                        "memberName": "withdraw_base58",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44148,
                        "src": "1509:30:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) payable external"
                        }
                      },
                      "id": 45110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "313030",
                          "id": 45109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1547:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "src": "1509:42:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$returns$__$value",
                        "typeString": "function (string memory) payable external"
                      }
                    },
                    "id": 45112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1509:50:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45113,
                  "nodeType": "ExpressionStatement",
                  "src": "1509:50:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45117,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44832,
                              "src": "1586:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KernelMock_$44767",
                                "typeString": "contract KernelMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_KernelMock_$44767",
                                "typeString": "contract KernelMock"
                              }
                            ],
                            "id": 45116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1578:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45115,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1578:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1578:15:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1594:7:30",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1578:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1603:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 45114,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1569:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1569:38:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45122,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:38:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45128,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44844,
                              "src": "1641:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1633:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45126,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1633:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:12:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1646:7:30",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1633:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45123,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21956,
                        "src": "1617:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21956_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 45125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1625:7:30",
                      "memberName": "logUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13955,
                      "src": "1617:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 45131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:37:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45132,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:37:30"
                }
              ]
            },
            "functionSelector": "97361594",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_WithdrawalNativeSucceed",
            "nameLocation": "1154:28:30",
            "parameters": {
              "id": 45061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1182:2:30"
            },
            "returnParameters": {
              "id": 45062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:0:30"
            },
            "scope": 45135,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44942,
              "name": "BaseTest",
              "nameLocations": [
                "281:8:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44931,
              "src": "281:8:30"
            },
            "id": 44943,
            "nodeType": "InheritanceSpecifier",
            "src": "281:8:30"
          }
        ],
        "canonicalName": "BulkWithdrawalTest",
        "contractDependencies": [
          44149,
          44312,
          44767
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45135,
          44931,
          12199,
          12148,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "BulkWithdrawalTest",
        "nameLocation": "259:18:30",
        "scope": 45136,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 30
}