{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes22",
          "name": "ticketer_",
          "type": "bytes22"
        },
        {
          "internalType": "bytes",
          "name": "content_",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "kernel_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ticketHash",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTicketHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ticketHash",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b506040516200116b3803806200116b8339810160408190526200003491620001bc565b8282600362000044838262000322565b50600462000053828262000322565b5050506200006886866200008a60201b60201c565b6080526001600160a01b0390931660a052505060ff1660c05250620004219050565b60008282604051602001620000a1929190620003ee565b60408051601f1981840301815291905280516020909101209392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620000f3578181015183820152602001620000d9565b50506000910152565b600082601f8301126200010e57600080fd5b81516001600160401b03808211156200012b576200012b620000c0565b604051601f8301601f19908116603f01168101908282118183101715620001565762000156620000c0565b816040528381528660208588010111156200017057600080fd5b62000183846020830160208901620000d6565b9695505050505050565b80516001600160a01b0381168114620001a557600080fd5b919050565b805160ff81168114620001a557600080fd5b60008060008060008060c08789031215620001d657600080fd5b86516001600160501b031981168114620001ef57600080fd5b60208801519096506001600160401b03808211156200020d57600080fd5b6200021b8a838b01620000fc565b96506200022b60408a016200018d565b955060608901519150808211156200024257600080fd5b620002508a838b01620000fc565b945060808901519150808211156200026757600080fd5b506200027689828a01620000fc565b9250506200028760a08801620001aa565b90509295509295509295565b600181811c90821680620002a857607f821691505b602082108103620002c957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031d57600081815260208120601f850160051c81016020861015620002f85750805b601f850160051c820191505b81811015620003195782815560010162000304565b5050505b505050565b81516001600160401b038111156200033e576200033e620000c0565b62000356816200034f845462000293565b84620002cf565b602080601f8311600181146200038e5760008415620003755750858301515b600019600386901b1c1916600185901b17855562000319565b600085815260208120601f198616915b82811015620003bf578886015182559484019460019091019084016200039e565b5085821015620003de5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160501b031983168152815160009062000413816016850160208701620000d6565b919091016016019392505050565b60805160a05160c051610d056200046660003960006101710152600081816102ff01526104ae0152600081816101b00152818161035201526104f80152610d056000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806339bb44791161008c578063a457c2d711610066578063a457c2d714610205578063a9059cbb14610218578063b5c5f6721461022b578063dd62ed3e1461023e57600080fd5b806339bb4479146101ae57806370a08231146101d457806395d89b41146101fd57600080fd5b806318160ddd116100c857806318160ddd1461014557806323b872dd14610157578063313ce5671461016a578063395093511461019b57600080fd5b806306fdde03146100ef578063095ea7b31461010d5780630efe6a8b14610130575b600080fd5b6100f7610251565b6040516101049190610abf565b60405180910390f35b61012061011b366004610b29565b6102e3565b6040519015158152602001610104565b61014361013e366004610b53565b6102fd565b005b6002545b604051908152602001610104565b610120610165366004610b86565b6103ce565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610104565b6101206101a9366004610b29565b6103f2565b7f0000000000000000000000000000000000000000000000000000000000000000610149565b6101496101e2366004610bc2565b6001600160a01b031660009081526020819052604090205490565b6100f7610414565b610120610213366004610b29565b610423565b610120610226366004610b29565b61049e565b610143610239366004610b53565b6104ac565b61014961024c366004610be4565b61056e565b60606003805461026090610c17565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610c17565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b6000336102f1818585610599565b60019150505b92915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461034e5760405162461bcd60e51b815260040161034590610c51565b60405180910390fd5b80807f0000000000000000000000000000000000000000000000000000000000000000146103be5760405162461bcd60e51b815260206004820152601d60248201527f455243323050726f78793a2077726f6e67207469636b657420686173680000006044820152606401610345565b6103c884846106be565b50505050565b6000336103dc85828561077d565b6103e78585856107f1565b506001949350505050565b6000336102f1818585610405838361056e565b61040f9190610cae565b610599565b60606004805461026090610c17565b60003381610431828661056e565b9050838110156104915760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610345565b6103e78286868403610599565b6000336102f18185856107f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146104f45760405162461bcd60e51b815260040161034590610c51565b80807f0000000000000000000000000000000000000000000000000000000000000000146105645760405162461bcd60e51b815260206004820152601d60248201527f455243323050726f78793a2077726f6e67207469636b657420686173680000006044820152606401610345565b6103c88484610995565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610345565b6001600160a01b03821661065c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610345565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0382166107145760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610345565b80600260008282546107269190610cae565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610789848461056e565b905060001981146103c857818110156107e45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610345565b6103c88484848403610599565b6001600160a01b0383166108555760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610345565b6001600160a01b0382166108b75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610345565b6001600160a01b0383166000908152602081905260409020548181101561092f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610345565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36103c8565b6001600160a01b0382166109f55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610345565b6001600160a01b03821660009081526020819052604090205481811015610a695760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610345565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016106b1565b600060208083528351808285015260005b81811015610aec57858101830151858201604001528201610ad0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b2457600080fd5b919050565b60008060408385031215610b3c57600080fd5b610b4583610b0d565b946020939093013593505050565b600080600060608486031215610b6857600080fd5b610b7184610b0d565b95602085013595506040909401359392505050565b600080600060608486031215610b9b57600080fd5b610ba484610b0d565b9250610bb260208501610b0d565b9150604084013590509250925092565b600060208284031215610bd457600080fd5b610bdd82610b0d565b9392505050565b60008060408385031215610bf757600080fd5b610c0083610b0d565b9150610c0e60208401610b0d565b90509250929050565b600181811c90821680610c2b57607f821691505b602082108103610c4b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252603c908201527f455243323050726f78793a206f6e6c79206b65726e656c20616c6c6f7765642060408201527f746f206465706f736974202f20776974686472617720746f6b656e7300000000606082015260800190565b808201808211156102f757634e487b7160e01b600052601160045260246000fdfea264697066735822122075e50d5cdeca30bb4cf6bc4d0a68edce836d0b4473846157405f96092bd6af7164736f6c63430008150033",
    "sourceMap": "390:2856:22:-:0;;;1050:342;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1242:5;1249:7;2046:5:18;:13;1242:5:22;2046::18;:13;:::i;:::-;-1:-1:-1;2069:7:18;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1282:31:22::1;1293:9;1304:8;1282:10;;;:31;;:::i;:::-;1268:45;::::0;-1:-1:-1;;;;;1323:17:22;;::::1;;::::0;-1:-1:-1;;1350:21:22::1;;;::::0;-1:-1:-1;390:2856:22;;-1:-1:-1;390:2856:22;128:173;210:18;278:8;288:7;261:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;261:35:22;;;;;;;;;251:46;;261:35;251:46;;;;;128:173;-1:-1:-1;;;128:173:22:o;14:127:29:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:29;370:16;;363:27;146:250::o;401:698::-;454:5;507:3;500:4;492:6;488:17;484:27;474:55;;525:1;522;515:12;474:55;548:13;;-1:-1:-1;;;;;610:10:29;;;607:36;;;623:18;;:::i;:::-;698:2;692:9;666:2;752:13;;-1:-1:-1;;748:22:29;;;772:2;744:31;740:40;728:53;;;796:18;;;816:22;;;793:46;790:72;;;842:18;;:::i;:::-;882:10;878:2;871:22;917:2;909:6;902:18;963:3;956:4;951:2;943:6;939:15;935:26;932:35;929:55;;;980:1;977;970:12;929:55;993:76;1066:2;1059:4;1051:6;1047:17;1040:4;1032:6;1028:17;993:76;:::i;:::-;1087:6;401:698;-1:-1:-1;;;;;;401:698:29:o;1104:177::-;1183:13;;-1:-1:-1;;;;;1225:31:29;;1215:42;;1205:70;;1271:1;1268;1261:12;1205:70;1104:177;;;:::o;1286:160::-;1363:13;;1416:4;1405:16;;1395:27;;1385:55;;1436:1;1433;1426:12;1451:1102;1593:6;1601;1609;1617;1625;1633;1686:3;1674:9;1665:7;1661:23;1657:33;1654:53;;;1703:1;1700;1693:12;1654:53;1729:16;;-1:-1:-1;;;;;;1774:35:29;;1764:46;;1754:74;;1824:1;1821;1814:12;1754:74;1896:2;1881:18;;1875:25;1847:5;;-1:-1:-1;;;;;;1949:14:29;;;1946:34;;;1976:1;1973;1966:12;1946:34;1999:60;2051:7;2042:6;2031:9;2027:22;1999:60;:::i;:::-;1989:70;;2078:49;2123:2;2112:9;2108:18;2078:49;:::i;:::-;2068:59;;2173:2;2162:9;2158:18;2152:25;2136:41;;2202:2;2192:8;2189:16;2186:36;;;2218:1;2215;2208:12;2186:36;2241:62;2295:7;2284:8;2273:9;2269:24;2241:62;:::i;:::-;2231:72;;2349:3;2338:9;2334:19;2328:26;2312:42;;2379:2;2369:8;2366:16;2363:36;;;2395:1;2392;2385:12;2363:36;;2418:62;2472:7;2461:8;2450:9;2446:24;2418:62;:::i;:::-;2408:72;;;2499:48;2542:3;2531:9;2527:19;2499:48;:::i;:::-;2489:58;;1451:1102;;;;;;;;:::o;2558:380::-;2637:1;2633:12;;;;2680;;;2701:61;;2755:4;2747:6;2743:17;2733:27;;2701:61;2808:2;2800:6;2797:14;2777:18;2774:38;2771:161;;2854:10;2849:3;2845:20;2842:1;2835:31;2889:4;2886:1;2879:15;2917:4;2914:1;2907:15;2771:161;;2558:380;;;:::o;3069:545::-;3171:2;3166:3;3163:11;3160:448;;;3207:1;3232:5;3228:2;3221:17;3277:4;3273:2;3263:19;3347:2;3335:10;3331:19;3328:1;3324:27;3318:4;3314:38;3383:4;3371:10;3368:20;3365:47;;;-1:-1:-1;3406:4:29;3365:47;3461:2;3456:3;3452:12;3449:1;3445:20;3439:4;3435:31;3425:41;;3516:82;3534:2;3527:5;3524:13;3516:82;;;3579:17;;;3560:1;3549:13;3516:82;;;3520:3;;;3160:448;3069:545;;;:::o;3790:1352::-;3910:10;;-1:-1:-1;;;;;3932:30:29;;3929:56;;;3965:18;;:::i;:::-;3994:97;4084:6;4044:38;4076:4;4070:11;4044:38;:::i;:::-;4038:4;3994:97;:::i;:::-;4146:4;;4210:2;4199:14;;4227:1;4222:663;;;;4929:1;4946:6;4943:89;;;-1:-1:-1;4998:19:29;;;4992:26;4943:89;-1:-1:-1;;3747:1:29;3743:11;;;3739:24;3735:29;3725:40;3771:1;3767:11;;;3722:57;5045:81;;4192:944;;4222:663;3016:1;3009:14;;;3053:4;3040:18;;-1:-1:-1;;4258:20:29;;;4376:236;4390:7;4387:1;4384:14;4376:236;;;4479:19;;;4473:26;4458:42;;4571:27;;;;4539:1;4527:14;;;;4406:19;;4376:236;;;4380:3;4640:6;4631:7;4628:19;4625:201;;;4701:19;;;4695:26;-1:-1:-1;;4784:1:29;4780:14;;;4796:3;4776:24;4772:37;4768:42;4753:58;4738:74;;4625:201;-1:-1:-1;;;;;4872:1:29;4856:14;;;4852:22;4839:36;;-1:-1:-1;3790:1352:29:o;5147:391::-;-1:-1:-1;;;;;;5334:36:29;;5322:49;;5394:13;;5304:3;;5416:75;5394:13;5479:2;5470:12;;5463:4;5451:17;;5416:75;:::i;:::-;5511:16;;;;5529:2;5507:25;;5147:391;-1:-1:-1;;;5147:391:29:o;:::-;390:2856:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806339bb44791161008c578063a457c2d711610066578063a457c2d714610205578063a9059cbb14610218578063b5c5f6721461022b578063dd62ed3e1461023e57600080fd5b806339bb4479146101ae57806370a08231146101d457806395d89b41146101fd57600080fd5b806318160ddd116100c857806318160ddd1461014557806323b872dd14610157578063313ce5671461016a578063395093511461019b57600080fd5b806306fdde03146100ef578063095ea7b31461010d5780630efe6a8b14610130575b600080fd5b6100f7610251565b6040516101049190610abf565b60405180910390f35b61012061011b366004610b29565b6102e3565b6040519015158152602001610104565b61014361013e366004610b53565b6102fd565b005b6002545b604051908152602001610104565b610120610165366004610b86565b6103ce565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610104565b6101206101a9366004610b29565b6103f2565b7f0000000000000000000000000000000000000000000000000000000000000000610149565b6101496101e2366004610bc2565b6001600160a01b031660009081526020819052604090205490565b6100f7610414565b610120610213366004610b29565b610423565b610120610226366004610b29565b61049e565b610143610239366004610b53565b6104ac565b61014961024c366004610be4565b61056e565b60606003805461026090610c17565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610c17565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b6000336102f1818585610599565b60019150505b92915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461034e5760405162461bcd60e51b815260040161034590610c51565b60405180910390fd5b80807f0000000000000000000000000000000000000000000000000000000000000000146103be5760405162461bcd60e51b815260206004820152601d60248201527f455243323050726f78793a2077726f6e67207469636b657420686173680000006044820152606401610345565b6103c884846106be565b50505050565b6000336103dc85828561077d565b6103e78585856107f1565b506001949350505050565b6000336102f1818585610405838361056e565b61040f9190610cae565b610599565b60606004805461026090610c17565b60003381610431828661056e565b9050838110156104915760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610345565b6103e78286868403610599565b6000336102f18185856107f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146104f45760405162461bcd60e51b815260040161034590610c51565b80807f0000000000000000000000000000000000000000000000000000000000000000146105645760405162461bcd60e51b815260206004820152601d60248201527f455243323050726f78793a2077726f6e67207469636b657420686173680000006044820152606401610345565b6103c88484610995565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610345565b6001600160a01b03821661065c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610345565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0382166107145760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610345565b80600260008282546107269190610cae565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610789848461056e565b905060001981146103c857818110156107e45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610345565b6103c88484848403610599565b6001600160a01b0383166108555760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610345565b6001600160a01b0382166108b75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610345565b6001600160a01b0383166000908152602081905260409020548181101561092f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610345565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36103c8565b6001600160a01b0382166109f55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610345565b6001600160a01b03821660009081526020819052604090205481811015610a695760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610345565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016106b1565b600060208083528351808285015260005b81811015610aec57858101830151858201604001528201610ad0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b2457600080fd5b919050565b60008060408385031215610b3c57600080fd5b610b4583610b0d565b946020939093013593505050565b600080600060608486031215610b6857600080fd5b610b7184610b0d565b95602085013595506040909401359392505050565b600080600060608486031215610b9b57600080fd5b610ba484610b0d565b9250610bb260208501610b0d565b9150604084013590509250925092565b600060208284031215610bd457600080fd5b610bdd82610b0d565b9392505050565b60008060408385031215610bf757600080fd5b610c0083610b0d565b9150610c0e60208401610b0d565b90509250929050565b600181811c90821680610c2b57607f821691505b602082108103610c4b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252603c908201527f455243323050726f78793a206f6e6c79206b65726e656c20616c6c6f7765642060408201527f746f206465706f736974202f20776974686472617720746f6b656e7300000000606082015260800190565b808201808211156102f757634e487b7160e01b600052601160045260246000fdfea264697066735822122075e50d5cdeca30bb4cf6bc4d0a68edce836d0b4473846157405f96092bd6af7164736f6c63430008150033",
    "sourceMap": "390:2856:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:29;;1162:22;1144:41;;1132:2;1117:18;4444:197:18;1004:187:29;2276::22;;;;;;:::i;:::-;;:::i;:::-;;3255:106:18;3342:12;;3255:106;;;1669:25:29;;;1657:2;1642:18;3255:106:18;1523:177:29;5203:256:18;;;;;;:::i;:::-;;:::i;3058:90:22:-;;;2210:4:29;3132:9:22;2198:17:29;2180:36;;2168:2;2153:18;3058:90:22;2038:184:29;5854:234:18;;;;;;:::i;:::-;;:::i;3154:90:22:-;3226:11;3154:90;;3419:125:18;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:18;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;2864:188:22:-;;;;;;:::i;:::-;;:::i;3987:149:18:-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:21;4581:32:18;719:10:21;4597:7:18;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;2276:187:22:-;1518:7;-1:-1:-1;;;;;1518:23:22;719:10:21;1518:23:22;1497:130;;;;-1:-1:-1;;;1497:130:22;;;;;;;:::i;:::-;;;;;;;;;2409:10:::1;1886;1871:11;:25;1863:67;;;::::0;-1:-1:-1;;;1863:67:22;;3699:2:29;1863:67:22::1;::::0;::::1;3681:21:29::0;3738:2;3718:18;;;3711:30;3777:31;3757:18;;;3750:59;3826:18;;1863:67:22::1;3497:353:29::0;1863:67:22::1;2435:21:::2;2441:7;2450:5;2435;:21::i;:::-;1637:1:::1;2276:187:::0;;;:::o;5203:256:18:-;5300:4;719:10:21;5356:38:18;5372:4;719:10:21;5387:6:18;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:18;;5203:256;-1:-1:-1;;;;5203:256:18:o;5854:234::-;5942:4;719:10:21;5996:64:18;719:10:21;6012:7:18;6049:10;6021:25;719:10:21;6012:7:18;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:21;6668:4:18;6749:25;719:10:21;6766:7:18;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:18;;4284:2:29;6784:85:18;;;4266:21:29;4323:2;4303:18;;;4296:30;4362:34;4342:18;;;4335:62;-1:-1:-1;;;4413:18:29;;;4406:35;4458:19;;6784:85:18;4082:401:29;6784:85:18;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:21;3873:28:18;719:10:21;3890:2:18;3894:6;3873:9;:28::i;2864:188:22:-;1518:7;-1:-1:-1;;;;;1518:23:22;719:10:21;1518:23:22;1497:130;;;;-1:-1:-1;;;1497:130:22;;;;;;;:::i;:::-;2998:10:::1;1886;1871:11;:25;1863:67;;;::::0;-1:-1:-1;;;1863:67:22;;3699:2:29;1863:67:22::1;::::0;::::1;3681:21:29::0;3738:2;3718:18;;;3711:30;3777:31;3757:18;;;3750:59;3826:18;;1863:67:22::1;3497:353:29::0;1863:67:22::1;3024:21:::2;3030:7;3039:5;3024;:21::i;3987:149:18:-:0;-1:-1:-1;;;;;4102:18:18;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:18;;10550:68;;;;-1:-1:-1;;;10550:68:18;;4690:2:29;10550:68:18;;;4672:21:29;4729:2;4709:18;;;4702:30;4768:34;4748:18;;;4741:62;-1:-1:-1;;;4819:18:29;;;4812:34;4863:19;;10550:68:18;4488:400:29;10550:68:18;-1:-1:-1;;;;;10636:21:18;;10628:68;;;;-1:-1:-1;;;10628:68:18;;5095:2:29;10628:68:18;;;5077:21:29;5134:2;5114:18;;;5107:30;5173:34;5153:18;;;5146:62;-1:-1:-1;;;5224:18:29;;;5217:32;5266:19;;10628:68:18;4893:398:29;10628:68:18;-1:-1:-1;;;;;10707:18:18;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1669:25:29;;;10758:32:18;;1642:18:29;10758:32:18;;;;;;;;10457:340;;;:::o;8520:535::-;-1:-1:-1;;;;;8603:21:18;;8595:65;;;;-1:-1:-1;;;8595:65:18;;5498:2:29;8595:65:18;;;5480:21:29;5537:2;5517:18;;;5510:30;5576:33;5556:18;;;5549:61;5627:18;;8595:65:18;5296:355:29;8595:65:18;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:18;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1669:25:29;;;8952:37:18;;1642:18:29;8952:37:18;;;;;;;8520:535;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:18;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:18;;5858:2:29;11297:68:18;;;5840:21:29;5897:2;5877:18;;;5870:30;5936:31;5916:18;;;5909:59;5985:18;;11297:68:18;5656:353:29;11297:68:18;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;7456:788::-;-1:-1:-1;;;;;7552:18:18;;7544:68;;;;-1:-1:-1;;;7544:68:18;;6216:2:29;7544:68:18;;;6198:21:29;6255:2;6235:18;;;6228:30;6294:34;6274:18;;;6267:62;-1:-1:-1;;;6345:18:29;;;6338:35;6390:19;;7544:68:18;6014:401:29;7544:68:18;-1:-1:-1;;;;;7630:16:18;;7622:64;;;;-1:-1:-1;;;7622:64:18;;6622:2:29;7622:64:18;;;6604:21:29;6661:2;6641:18;;;6634:30;6700:34;6680:18;;;6673:62;-1:-1:-1;;;6751:18:29;;;6744:33;6794:19;;7622:64:18;6420:399:29;7622:64:18;-1:-1:-1;;;;;7768:15:18;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:18;;7026:2:29;7793:72:18;;;7008:21:29;7065:2;7045:18;;;7038:30;7104:34;7084:18;;;7077:62;-1:-1:-1;;;7155:18:29;;;7148:36;7201:19;;7793:72:18;6824:402:29;7793:72:18;-1:-1:-1;;;;;7899:15:18;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1669:25:29;;;8114:13:18;;8163:26;;1642:18:29;8163:26:18;;;;;;;8200:37;9375:659;;-1:-1:-1;;;;;9458:21:18;;9450:67;;;;-1:-1:-1;;;9450:67:18;;7433:2:29;9450:67:18;;;7415:21:29;7472:2;7452:18;;;7445:30;7511:34;7491:18;;;7484:62;-1:-1:-1;;;7562:18:29;;;7555:31;7603:19;;9450:67:18;7231:397:29;9450:67:18;-1:-1:-1;;;;;9613:18:18;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:18;;7835:2:29;9641:71:18;;;7817:21:29;7874:2;7854:18;;;7847:30;7913:34;7893:18;;;7886:62;-1:-1:-1;;;7964:18:29;;;7957:32;8006:19;;9641:71:18;7633:398:29;9641:71:18;-1:-1:-1;;;;;9746:18:18;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1669:25:29;;;9746:9:18;;:18;9931:37;;1642:18:29;9931:37:18;1523:177:29;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:29;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:29:o;1196:322::-;1273:6;1281;1289;1342:2;1330:9;1321:7;1317:23;1313:32;1310:52;;;1358:1;1355;1348:12;1310:52;1381:29;1400:9;1381:29;:::i;:::-;1371:39;1457:2;1442:18;;1429:32;;-1:-1:-1;1508:2:29;1493:18;;;1480:32;;1196:322;-1:-1:-1;;;1196:322:29:o;1705:328::-;1782:6;1790;1798;1851:2;1839:9;1830:7;1826:23;1822:32;1819:52;;;1867:1;1864;1857:12;1819:52;1890:29;1909:9;1890:29;:::i;:::-;1880:39;;1938:38;1972:2;1961:9;1957:18;1938:38;:::i;:::-;1928:48;;2023:2;2012:9;2008:18;1995:32;1985:42;;1705:328;;;;;:::o;2227:186::-;2286:6;2339:2;2327:9;2318:7;2314:23;2310:32;2307:52;;;2355:1;2352;2345:12;2307:52;2378:29;2397:9;2378:29;:::i;:::-;2368:39;2227:186;-1:-1:-1;;;2227:186:29:o;2418:260::-;2486:6;2494;2547:2;2535:9;2526:7;2522:23;2518:32;2515:52;;;2563:1;2560;2553:12;2515:52;2586:29;2605:9;2586:29;:::i;:::-;2576:39;;2634:38;2668:2;2657:9;2653:18;2634:38;:::i;:::-;2624:48;;2418:260;;;;;:::o;2683:380::-;2762:1;2758:12;;;;2805;;;2826:61;;2880:4;2872:6;2868:17;2858:27;;2826:61;2933:2;2925:6;2922:14;2902:18;2899:38;2896:161;;2979:10;2974:3;2970:20;2967:1;2960:31;3014:4;3011:1;3004:15;3042:4;3039:1;3032:15;2896:161;;2683:380;;;:::o;3068:424::-;3270:2;3252:21;;;3309:2;3289:18;;;3282:30;3348:34;3343:2;3328:18;;3321:62;3419:30;3414:2;3399:18;;3392:58;3482:3;3467:19;;3068:424::o;3855:222::-;3920:9;;;3941:10;;;3938:133;;;3993:10;3988:3;3984:20;3981:1;3974:31;4028:4;4025:1;4018:15;4056:4;4053:1;4046:15",
    "linkReferences": {},
    "immutableReferences": {
      "44061": [
        {
          "start": 432,
          "length": 32
        },
        {
          "start": 850,
          "length": 32
        },
        {
          "start": 1272,
          "length": 32
        }
      ],
      "44063": [
        {
          "start": 767,
          "length": 32
        },
        {
          "start": 1198,
          "length": 32
        }
      ],
      "44065": [
        {
          "start": 369,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(address,uint256,uint256)": "0efe6a8b",
    "getTicketHash()": "39bb4479",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "withdraw(address,uint256,uint256)": "b5c5f672"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes22\",\"name\":\"ticketer_\",\"type\":\"bytes22\"},{\"internalType\":\"bytes\",\"name\":\"content_\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"kernel_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketHash\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTicketHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketHash\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"content_\":\"content of the L1 ticket allowed to be minted by        this ERC20Proxy\",\"decimals_\":\"number of decimals of the token\",\"kernel_\":\"address of the rollup kernel which has rights for        the minting and burning tokens\",\"name_\":\"name of the token\",\"symbol_\":\"symbol of the token\",\"ticketer_\":\"address of the L1 ticketer contract which tickets are        allowed to be minted by this ERC20Proxy\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(address,uint256,uint256)\":{\"notice\":\"Mints `value` tokens amount for `account` address if provided `ticketHash` is correct. Requirements: - only kernel address allowed to mint tokens. - `ticketHash` must be equal to the ticket hash of the ticketer and identifier used during deployment.\"},\"withdraw(address,uint256,uint256)\":{\"notice\":\"Burns `value` tokens amount from the `account` address if provided `ticketHash` is correct. Requirements: - only kernel address allowed to burn tokens. - `ticketHash` must be equal to the token hash of the ticketer    and content set during deployment. - `amount` must be less or equal to the balance of the caller.\"}},\"notice\":\"ERC20 Proxy is a ERC20 token contract which represents a L1 token on L2.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC20Proxy.sol\":\"ERC20Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/ERC20Proxy.sol\":{\"keccak256\":\"0x20e34cc2b271914221105d28a7e7adef8c885d5b73a27dd252afc3c9a94e2aec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2f4bb3ec012e4a480f60e5aa5b57f431c4a7561ae1ea943c67091711a3243bf\",\"dweb:/ipfs/QmPP5ZUawzEEddqiMXsGxSk39QW5ncuHDQvzhcsbQ5afGc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes22",
              "name": "ticketer_",
              "type": "bytes22"
            },
            {
              "internalType": "bytes",
              "name": "content_",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "kernel_",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals_",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketHash",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTicketHash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ticketHash",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "constructor": {
            "params": {
              "content_": "content of the L1 ticket allowed to be minted by        this ERC20Proxy",
              "decimals_": "number of decimals of the token",
              "kernel_": "address of the rollup kernel which has rights for        the minting and burning tokens",
              "name_": "name of the token",
              "symbol_": "symbol of the token",
              "ticketer_": "address of the L1 ticketer contract which tickets are        allowed to be minted by this ERC20Proxy"
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deposit(address,uint256,uint256)": {
            "notice": "Mints `value` tokens amount for `account` address if provided `ticketHash` is correct. Requirements: - only kernel address allowed to mint tokens. - `ticketHash` must be equal to the ticket hash of the ticketer and identifier used during deployment."
          },
          "withdraw(address,uint256,uint256)": {
            "notice": "Burns `value` tokens amount from the `account` address if provided `ticketHash` is correct. Requirements: - only kernel address allowed to burn tokens. - `ticketHash` must be equal to the token hash of the ticketer    and content set during deployment. - `amount` must be less or equal to the balance of the caller."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ERC20Proxy.sol": "ERC20Proxy"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/ERC20Proxy.sol": {
        "keccak256": "0x20e34cc2b271914221105d28a7e7adef8c885d5b73a27dd252afc3c9a94e2aec",
        "urls": [
          "bzz-raw://e2f4bb3ec012e4a480f60e5aa5b57f431c4a7561ae1ea943c67091711a3243bf",
          "dweb:/ipfs/QmPP5ZUawzEEddqiMXsGxSk39QW5ncuHDQvzhcsbQ5afGc"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ERC20Proxy.sol",
    "id": 44191,
    "exportedSymbols": {
      "ERC20": [
        43906
      ],
      "ERC20Proxy": [
        44190
      ],
      "hashTicket": [
        44056
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3215:22",
    "nodes": [
      {
        "id": 44033,
        "nodeType": "PragmaDirective",
        "src": "32:25:22",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 44035,
        "nodeType": "ImportDirective",
        "src": "59:67:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44191,
        "sourceUnit": 43907,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44034,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43906,
              "src": "67:5:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44056,
        "nodeType": "FunctionDefinition",
        "src": "128:173:22",
        "nodes": [],
        "body": {
          "id": 44055,
          "nodeType": "Block",
          "src": "230:71:22",
          "nodes": [],
          "statements": [
            {
              "expression": {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44049,
                            "name": "ticketer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44037,
                            "src": "278:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            }
                          },
                          {
                            "id": 44050,
                            "name": "content",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44039,
                            "src": "288:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 44047,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "261:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 44048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "265:12:22",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "261:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 44051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "261:35:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 44046,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "251:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 44052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "251:46:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  ],
                  "id": 44045,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "ElementaryTypeNameExpression",
                  "src": "243:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_uint256_$",
                    "typeString": "type(uint256)"
                  },
                  "typeName": {
                    "id": 44044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:22",
                    "typeDescriptions": {}
                  }
                },
                "id": 44053,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "typeConversion",
                "lValueRequested": false,
                "nameLocations": [],
                "names": [],
                "nodeType": "FunctionCall",
                "src": "243:55:22",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "functionReturnParameters": 44043,
              "id": 44054,
              "nodeType": "Return",
              "src": "236:62:22"
            }
          ]
        },
        "implemented": true,
        "kind": "freeFunction",
        "modifiers": [],
        "name": "hashTicket",
        "nameLocation": "137:10:22",
        "parameters": {
          "id": 44040,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 44037,
              "mutability": "mutable",
              "name": "ticketer",
              "nameLocation": "156:8:22",
              "nodeType": "VariableDeclaration",
              "scope": 44056,
              "src": "148:16:22",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes22",
                "typeString": "bytes22"
              },
              "typeName": {
                "id": 44036,
                "name": "bytes22",
                "nodeType": "ElementaryTypeName",
                "src": "148:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes22",
                  "typeString": "bytes22"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "id": 44039,
              "mutability": "mutable",
              "name": "content",
              "nameLocation": "179:7:22",
              "nodeType": "VariableDeclaration",
              "scope": 44056,
              "src": "166:20:22",
              "stateVariable": false,
              "storageLocation": "memory",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_memory_ptr",
                "typeString": "bytes"
              },
              "typeName": {
                "id": 44038,
                "name": "bytes",
                "nodeType": "ElementaryTypeName",
                "src": "166:5:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "147:40:22"
        },
        "returnParameters": {
          "id": 44043,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 44042,
              "mutability": "mutable",
              "name": "ticketHash",
              "nameLocation": "218:10:22",
              "nodeType": "VariableDeclaration",
              "scope": 44056,
              "src": "210:18:22",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 44041,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "210:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "209:20:22"
        },
        "scope": 44191,
        "stateMutability": "pure",
        "virtual": false,
        "visibility": "internal"
      },
      {
        "id": 44190,
        "nodeType": "ContractDefinition",
        "src": "390:2856:22",
        "nodes": [
          {
            "id": 44061,
            "nodeType": "VariableDeclaration",
            "src": "425:37:22",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_ticketHash",
            "nameLocation": "451:11:22",
            "scope": 44190,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44060,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "425:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44063,
            "nodeType": "VariableDeclaration",
            "src": "468:33:22",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_kernel",
            "nameLocation": "494:7:22",
            "scope": 44190,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44062,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "468:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44065,
            "nodeType": "VariableDeclaration",
            "src": "507:33:22",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_decimals",
            "nameLocation": "531:9:22",
            "scope": 44190,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 44064,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "507:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44103,
            "nodeType": "FunctionDefinition",
            "src": "1050:342:22",
            "nodes": [],
            "body": {
              "id": 44102,
              "nodeType": "Block",
              "src": "1258:134:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44085,
                      "name": "_ticketHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44061,
                      "src": "1268:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44087,
                          "name": "ticketer_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44068,
                          "src": "1293:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes22",
                            "typeString": "bytes22"
                          }
                        },
                        {
                          "id": 44088,
                          "name": "content_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44070,
                          "src": "1304:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes22",
                            "typeString": "bytes22"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 44086,
                        "name": "hashTicket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44056,
                        "src": "1282:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes22_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (bytes22,bytes memory) pure returns (uint256)"
                        }
                      },
                      "id": 44089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1282:31:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1268:45:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44091,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:45:22"
                },
                {
                  "expression": {
                    "id": 44094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44092,
                      "name": "_kernel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44063,
                      "src": "1323:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44093,
                      "name": "kernel_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44072,
                      "src": "1333:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1323:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44095,
                  "nodeType": "ExpressionStatement",
                  "src": "1323:17:22"
                },
                {
                  "expression": {
                    "id": 44098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44096,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44065,
                      "src": "1350:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44097,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44078,
                      "src": "1362:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1350:21:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 44099,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:21:22"
                },
                {
                  "expression": {
                    "id": 44100,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -28,
                    "src": "1381:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Proxy_$44190",
                      "typeString": "contract ERC20Proxy"
                    }
                  },
                  "id": 44101,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:4:22"
                }
              ]
            },
            "documentation": {
              "id": 44066,
              "nodeType": "StructuredDocumentation",
              "src": "547:498:22",
              "text": " @param ticketer_ address of the L1 ticketer contract which tickets are\n        allowed to be minted by this ERC20Proxy\n @param content_ content of the L1 ticket allowed to be minted by\n        this ERC20Proxy\n @param kernel_ address of the rollup kernel which has rights for\n        the minting and burning tokens\n @param name_ name of the token\n @param symbol_ symbol of the token\n @param decimals_ number of decimals of the token"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 44081,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44074,
                    "src": "1242:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 44082,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44076,
                    "src": "1249:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 44083,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 44080,
                  "name": "ERC20",
                  "nameLocations": [
                    "1236:5:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43906,
                  "src": "1236:5:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1236:21:22"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44068,
                  "mutability": "mutable",
                  "name": "ticketer_",
                  "nameLocation": "1079:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44103,
                  "src": "1071:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes22",
                    "typeString": "bytes22"
                  },
                  "typeName": {
                    "id": 44067,
                    "name": "bytes22",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes22",
                      "typeString": "bytes22"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44070,
                  "mutability": "mutable",
                  "name": "content_",
                  "nameLocation": "1111:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44103,
                  "src": "1098:21:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44069,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44072,
                  "mutability": "mutable",
                  "name": "kernel_",
                  "nameLocation": "1137:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44103,
                  "src": "1129:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44074,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1168:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44103,
                  "src": "1154:19:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44073,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44076,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1197:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44103,
                  "src": "1183:21:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44075,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44078,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nameLocation": "1220:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44103,
                  "src": "1214:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 44077,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1061:174:22"
            },
            "returnParameters": {
              "id": 44084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:0:22"
            },
            "scope": 44190,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44116,
            "nodeType": "ModifierDefinition",
            "src": "1465:180:22",
            "nodes": [],
            "body": {
              "id": 44115,
              "nodeType": "Block",
              "src": "1487:158:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 44110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44107,
                          "name": "_kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44063,
                          "src": "1518:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 44108,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44021,
                            "src": "1529:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 44109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1529:12:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1518:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323050726f78793a206f6e6c79206b65726e656c20616c6c6f77656420746f206465706f736974202f20776974686472617720746f6b656e73",
                        "id": 44111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1555:62:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c68349c1947acf54d484f1ef80e3c632d4a8ac12c053bb8160436ea744b15e17",
                          "typeString": "literal_string \"ERC20Proxy: only kernel allowed to deposit / withdraw tokens\""
                        },
                        "value": "ERC20Proxy: only kernel allowed to deposit / withdraw tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c68349c1947acf54d484f1ef80e3c632d4a8ac12c053bb8160436ea744b15e17",
                          "typeString": "literal_string \"ERC20Proxy: only kernel allowed to deposit / withdraw tokens\""
                        }
                      ],
                      "id": 44106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1497:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1497:130:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44113,
                  "nodeType": "ExpressionStatement",
                  "src": "1497:130:22"
                },
                {
                  "id": 44114,
                  "nodeType": "PlaceholderStatement",
                  "src": "1637:1:22"
                }
              ]
            },
            "documentation": {
              "id": 44104,
              "nodeType": "StructuredDocumentation",
              "src": "1398:62:22",
              "text": " Checks if the sender is the kernel address."
            },
            "name": "onlyKernel",
            "nameLocation": "1474:10:22",
            "parameters": {
              "id": 44105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1484:2:22"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44130,
            "nodeType": "ModifierDefinition",
            "src": "1802:146:22",
            "nodes": [],
            "body": {
              "id": 44129,
              "nodeType": "Block",
              "src": "1853:95:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44122,
                          "name": "_ticketHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44061,
                          "src": "1871:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 44123,
                          "name": "ticketHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44119,
                          "src": "1886:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1871:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323050726f78793a2077726f6e67207469636b65742068617368",
                        "id": 44125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1898:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e6b6aeef59a394c3c80618ecbc5748f3b57de38a6335561f36beeded9148e32",
                          "typeString": "literal_string \"ERC20Proxy: wrong ticket hash\""
                        },
                        "value": "ERC20Proxy: wrong ticket hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e6b6aeef59a394c3c80618ecbc5748f3b57de38a6335561f36beeded9148e32",
                          "typeString": "literal_string \"ERC20Proxy: wrong ticket hash\""
                        }
                      ],
                      "id": 44121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1863:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1863:67:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44127,
                  "nodeType": "ExpressionStatement",
                  "src": "1863:67:22"
                },
                {
                  "id": 44128,
                  "nodeType": "PlaceholderStatement",
                  "src": "1940:1:22"
                }
              ]
            },
            "documentation": {
              "id": 44117,
              "nodeType": "StructuredDocumentation",
              "src": "1651:146:22",
              "text": " Checks if the provided `ticketHash` is equal to the ticket hash\n of the ticketer and content set during token deployment."
            },
            "name": "onlyAllowedTicketHash",
            "nameLocation": "1811:21:22",
            "parameters": {
              "id": 44120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44119,
                  "mutability": "mutable",
                  "name": "ticketHash",
                  "nameLocation": "1841:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44130,
                  "src": "1833:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1832:20:22"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44151,
            "nodeType": "FunctionDefinition",
            "src": "2276:187:22",
            "nodes": [],
            "body": {
              "id": 44150,
              "nodeType": "Block",
              "src": "2425:38:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44146,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44133,
                        "src": "2441:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44147,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44135,
                        "src": "2450:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44145,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43723,
                      "src": "2435:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2435:21:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44149,
                  "nodeType": "ExpressionStatement",
                  "src": "2435:21:22"
                }
              ]
            },
            "documentation": {
              "id": 44131,
              "nodeType": "StructuredDocumentation",
              "src": "1954:317:22",
              "text": " Mints `value` tokens amount for `account` address if provided\n `ticketHash` is correct.\n Requirements:\n - only kernel address allowed to mint tokens.\n - `ticketHash` must be equal to the ticket hash of the ticketer\n and identifier used during deployment."
            },
            "functionSelector": "0efe6a8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44140,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44139,
                  "name": "onlyKernel",
                  "nameLocations": [
                    "2368:10:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44116,
                  "src": "2368:10:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2368:10:22"
              },
              {
                "arguments": [
                  {
                    "id": 44142,
                    "name": "ticketHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44137,
                    "src": "2409:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 44143,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44141,
                  "name": "onlyAllowedTicketHash",
                  "nameLocations": [
                    "2387:21:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44130,
                  "src": "2387:21:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2387:33:22"
              }
            ],
            "name": "deposit",
            "nameLocation": "2285:7:22",
            "parameters": {
              "id": 44138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44133,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2301:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44151,
                  "src": "2293:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44135,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2318:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44151,
                  "src": "2310:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2310:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44137,
                  "mutability": "mutable",
                  "name": "ticketHash",
                  "nameLocation": "2333:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44151,
                  "src": "2325:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2325:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:52:22"
            },
            "returnParameters": {
              "id": 44144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2425:0:22"
            },
            "scope": 44190,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44172,
            "nodeType": "FunctionDefinition",
            "src": "2864:188:22",
            "nodes": [],
            "body": {
              "id": 44171,
              "nodeType": "Block",
              "src": "3014:38:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44167,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44154,
                        "src": "3030:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44168,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44156,
                        "src": "3039:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44166,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43795,
                      "src": "3024:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3024:21:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44170,
                  "nodeType": "ExpressionStatement",
                  "src": "3024:21:22"
                }
              ]
            },
            "documentation": {
              "id": 44152,
              "nodeType": "StructuredDocumentation",
              "src": "2469:390:22",
              "text": " Burns `value` tokens amount from the `account` address if provided\n `ticketHash` is correct.\n Requirements:\n - only kernel address allowed to burn tokens.\n - `ticketHash` must be equal to the token hash of the ticketer\n    and content set during deployment.\n - `amount` must be less or equal to the balance of the caller."
            },
            "functionSelector": "b5c5f672",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44160,
                  "name": "onlyKernel",
                  "nameLocations": [
                    "2957:10:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44116,
                  "src": "2957:10:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2957:10:22"
              },
              {
                "arguments": [
                  {
                    "id": 44163,
                    "name": "ticketHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44158,
                    "src": "2998:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 44164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44162,
                  "name": "onlyAllowedTicketHash",
                  "nameLocations": [
                    "2976:21:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44130,
                  "src": "2976:21:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2976:33:22"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2873:8:22",
            "parameters": {
              "id": 44159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44154,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2890:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44172,
                  "src": "2882:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2882:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44156,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2907:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44172,
                  "src": "2899:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2899:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44158,
                  "mutability": "mutable",
                  "name": "ticketHash",
                  "nameLocation": "2922:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 44172,
                  "src": "2914:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2914:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2881:52:22"
            },
            "returnParameters": {
              "id": 44165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3014:0:22"
            },
            "scope": 44190,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44181,
            "nodeType": "FunctionDefinition",
            "src": "3058:90:22",
            "nodes": [],
            "body": {
              "id": 44180,
              "nodeType": "Block",
              "src": "3115:33:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44178,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44065,
                    "src": "3132:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 44177,
                  "id": 44179,
                  "nodeType": "Return",
                  "src": "3125:16:22"
                }
              ]
            },
            "baseFunctions": [
              43394
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3067:8:22",
            "overrides": {
              "id": 44174,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3090:8:22"
            },
            "parameters": {
              "id": 44173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3075:2:22"
            },
            "returnParameters": {
              "id": 44177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44176,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44181,
                  "src": "3108:5:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 44175,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3107:7:22"
            },
            "scope": 44190,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44189,
            "nodeType": "FunctionDefinition",
            "src": "3154:90:22",
            "nodes": [],
            "body": {
              "id": 44188,
              "nodeType": "Block",
              "src": "3209:35:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44186,
                    "name": "_ticketHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44061,
                    "src": "3226:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44185,
                  "id": 44187,
                  "nodeType": "Return",
                  "src": "3219:18:22"
                }
              ]
            },
            "functionSelector": "39bb4479",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTicketHash",
            "nameLocation": "3163:13:22",
            "parameters": {
              "id": 44182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3176:2:22"
            },
            "returnParameters": {
              "id": 44185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44189,
                  "src": "3200:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3200:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3199:9:22"
            },
            "scope": 44190,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44058,
              "name": "ERC20",
              "nameLocations": [
                "413:5:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43906,
              "src": "413:5:22"
            },
            "id": 44059,
            "nodeType": "InheritanceSpecifier",
            "src": "413:5:22"
          }
        ],
        "canonicalName": "ERC20Proxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 44057,
          "nodeType": "StructuredDocumentation",
          "src": "303:86:22",
          "text": " ERC20 Proxy is a ERC20 token contract which represents a L1 token\n on L2."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44190,
          43906,
          44009,
          43984,
          44031
        ],
        "name": "ERC20Proxy",
        "nameLocation": "399:10:22",
        "scope": 44191,
        "usedErrors": [],
        "usedEvents": [
          43918,
          43927
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 22
}