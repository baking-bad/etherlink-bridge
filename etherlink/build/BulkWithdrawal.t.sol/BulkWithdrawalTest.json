{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bulkWithdrawal",
      "outputs": [
        {
          "internalType": "contract BulkWithdrawal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "content",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract KernelMock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver22",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_WithdrawalFromSmartContractSucceed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_WithdrawalNativeSucceed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticketHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticketer",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20Proxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrongContent",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrongTicketer",
      "outputs": [
        {
          "internalType": "bytes22",
          "name": "",
          "type": "bytes22"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "250:1663:31:-:0;;;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;-1:-1:-1;;;;;;326:12:30;;;;168:25:34;326:7:30;;141:18:34;326:12:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;303:35;;;-1:-1:-1;;;;;;303:35:30;-1:-1:-1;;;;;303:35:30;;;;;;;;;;365:12;;-1:-1:-1;;;;;;365:12:30;;373:3;365:12;;;168:25:34;365:7:30;;;;141:18:34;;365:12:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;344:33;;;-1:-1:-1;;;;;;344:33:30;-1:-1:-1;;;;;344:33:30;;;;;;;;;;414:50;;;-1:-1:-1;;;;;;414:50:30;;;;;;;;470:61;;;;;;;;;;560:34;;-1:-1:-1;;;560:34:30;;;891:29:34;936:12;;560:34:30;;;;;;;;;;;;537:57;;;;;;;:::i;:::-;-1:-1:-1;628:42:30;;3888:24:34;628:42:30;;;3876:37:34;3929:12;;628:42:30;;;;;;;;;;;;600:70;;;;;;;:::i;:::-;-1:-1:-1;700:35:30;;;;;;;;;;;;;;;;;676:59;;;;;;:::i;:::-;-1:-1:-1;741:61:30;;;-1:-1:-1;;;;;;741:61:30;;;;;250:1663:31;;;;;;;;;;;;204:290:34;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;369:16;;-1:-1:-1;;;;;414:31:34;;404:42;;394:70;;460:1;457;450:12;394:70;483:5;204:290;-1:-1:-1;;;204:290:34:o;959:127::-;1020:10;1015:3;1011:20;1008:1;1001:31;1051:4;1048:1;1041:15;1075:4;1072:1;1065:15;1091:380;1170:1;1166:12;;;;1213;;;1234:61;;1288:4;1280:6;1276:17;1266:27;;1234:61;1341:2;1333:6;1330:14;1310:18;1307:38;1304:161;;1387:10;1382:3;1378:20;1375:1;1368:31;1422:4;1419:1;1412:15;1450:4;1447:1;1440:15;1304:161;;1091:380;;;:::o;1601:544::-;1702:2;1697:3;1694:11;1691:448;;;1738:1;1763:5;1759:2;1752:17;1808:4;1804:2;1794:19;1878:2;1866:10;1862:19;1859:1;1855:27;1849:4;1845:38;1914:4;1902:10;1899:20;1896:47;;;-1:-1:-1;1937:4:34;1896:47;1992:2;1987:3;1983:12;1980:1;1976:20;1970:4;1966:31;1956:41;;2047:82;2065:2;2058:5;2055:13;2047:82;;;2110:17;;;2091:1;2080:13;2047:82;;;2051:3;;;1691:448;1601:544;;;:::o;2321:1348::-;2439:10;;-1:-1:-1;;;;;2461:30:34;;2458:56;;;2494:18;;:::i;:::-;2523:96;2612:6;2572:38;2604:4;2598:11;2572:38;:::i;:::-;2566:4;2523:96;:::i;:::-;2674:4;;2738:2;2727:14;;2755:1;2750:662;;;;3456:1;3473:6;3470:89;;;-1:-1:-1;3525:19:34;;;3519:26;3470:89;-1:-1:-1;;2278:1:34;2274:11;;;2270:24;2266:29;2256:40;2302:1;2298:11;;;2253:57;3572:81;;2720:943;;2750:662;1548:1;1541:14;;;1585:4;1572:18;;-1:-1:-1;;2786:20:34;;;2903:236;2917:7;2914:1;2911:14;2903:236;;;3006:19;;;3000:26;2985:42;;3098:27;;;;3066:1;3054:14;;;;2933:19;;2903:236;;;2907:3;3167:6;3158:7;3155:19;3152:201;;;3228:19;;;3222:26;-1:-1:-1;;3311:1:34;3307:14;;;3323:3;3303:24;3299:37;3295:42;3280:58;3265:74;;3152:201;-1:-1:-1;;;;;3399:1:34;3383:14;;;3379:22;3366:36;;-1:-1:-1;2321:1348:34:o;3674:273::-;250:1663:31;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001af5760003560e01c80638a4d5a6711620000f0578063c09cec7711620000a3578063f7260d3e116200007a578063f7260d3e1462000366578063fa7626d41462000370578063fb47e3a2146200037e578063fc0c546a146200039257600080fd5b8063c09cec771462000334578063d4aae0c41462000348578063e20c9f71146200035c57600080fd5b80638a4d5a6714620002c4578063916a17c614620002ce5780639736159414620002d8578063a84922a414620002e2578063b5508aa9146200030f578063ba414fa6146200031957600080fd5b80633f70f347116200016657806356342f63116200013d57806356342f63146200026057806366d9a9a0146200027957806376822969146200029257806385226c8114620002ab57600080fd5b80633f70f347146200023a5780633f7286f414620002485780634f6c39bb146200025257600080fd5b8063094ae1fc14620001b45780630a9254e414620001c05780631ed7831c14620001ca5780632ade388014620001ec578063392c172214620002055780633e5e3c231462000230575b600080fd5b620001be620003a6565b005b620001be620007e6565b620001d462000a61565b604051620001e3919062001974565b60405180910390f35b620001f662000ac5565b604051620001e3919062001a17565b602654620002139060501b81565b60405169ffffffffffffffffffff199091168152602001620001e3565b620001d462000c13565b602154620002139060501b81565b620001d462000c75565b602254620002139060501b81565b6200026a62000cd7565b604051620001e3919062001add565b6200028362000d6d565b604051620001e3919062001af9565b6200029c60205481565b604051908152602001620001e3565b620002b562000e57565b604051620001e3919062001bb0565b6200026a62000f31565b6200028362000f40565b620001be6200102a565b602754620002f6906001600160a01b031681565b6040516001600160a01b039091168152602001620001e3565b620002b5620012ff565b62000323620013d9565b6040519015158152602001620001e3565b601f54620002f6906001600160a01b031681565b601d54620002f6906001600160a01b031681565b620001d462001510565b6200026a62001572565b600754620003239060ff1681565b601e54620002f6906001600160a01b031681565b601c54620002f6906001600160a01b031681565b601d546040516003916001600160a01b03169081908390620003c8906200194a565b6001600160a01b0393841681529290911660208301526040820152606001604051809103906000f08015801562000403573d6000803e3d6000fd5b50602780546001600160a01b0319166001600160a01b03928316908117909155601d54601c54602154604051630a45473160e11b81529285169463148a8e629462000465949390911692909160649160509190911b9060239060040162001cfe565b600060405180830381600087803b1580156200048057600080fd5b505af115801562000495573d6000803e3d6000fd5b505050506200051f601c60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000517919062001d51565b606462001581565b601d54601c546021546040516000936001600160a01b03908116936380fc1fe39362000560939190921691602591600c9160501b9060239060240162001d6b565b60408051601f198184030181529181526020820180516001600160e01b031660e09490941b93909317909252601d549151632f5abd0d60e21b8152909350737109709ecfa91a80626ff3989d68f67f5b1dd12d925063bd6af43491620005d8916001600160a01b039190911690859060040162001dca565b600060405180830381600087803b158015620005f357600080fd5b505af115801562000608573d6000803e3d6000fd5b5050601f5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200066657600080fd5b505af11580156200067b573d6000803e3d6000fd5b5050602754601c546021546040516380fc1fe360e01b81526001600160a01b0393841695506380fc1fe39450620006c99390921691602591600c9160509190911b9060239060040162001d6b565b600060405180830381600087803b158015620006e457600080fd5b505af1158015620006f9573d6000803e3d6000fd5b5050601c546027546040516370a0823160e01b81526001600160a01b039182166004820152620007959450911691506370a0823190602401602060405180830381865afa1580156200074f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000775919062001d51565b6200078284600c62001e0e565b6200078f90606462001e2e565b62001581565b601c54604080516318160ddd60e01b81529051620007e2926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156200074f573d6000803e3d6000fd5b5050565b601e54604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526005604482015264416c69636560d81b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b1580156200085b57600080fd5b505af115801562000870573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260036044820152622137b160e91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015620008e757600080fd5b505af1158015620008fc573d6000803e3d6000fd5b505050506040516200090e9062001958565b604051809103906000f0801580156200092b573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b0392909216918217905560215460405160509190911b91602391601290620009699062001966565b62000978949392919062001e44565b604051809103906000f08015801562000995573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03929092169190911790556021546023805462000a5c9260501b9190620009d29062001c16565b80601f016020809104026020016040519081016040528092919081815260200182805462000a009062001c16565b801562000a515780601f1062000a255761010080835404028352916020019162000a51565b820191906000526020600020905b81548152906001019060200180831162000a3357829003601f168201915b5050505050620016ac565b602055565b6060601480548060200260200160405190810160405280929190818152602001828054801562000abb57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000a9c575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562000c0a57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000bf257838290600052602060002001805462000b5e9062001c16565b80601f016020809104026020016040519081016040528092919081815260200182805462000b8c9062001c16565b801562000bdd5780601f1062000bb15761010080835404028352916020019162000bdd565b820191906000526020600020905b81548152906001019060200180831162000bbf57829003601f168201915b50505050508152602001906001019062000b3c565b50505050815250508152602001906001019062000ae9565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801562000abb576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a9c575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000abb576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a9c575050505050905090565b6024805462000ce69062001c16565b80601f016020809104026020016040519081016040528092919081815260200182805462000d149062001c16565b801562000d655780601f1062000d395761010080835404028352916020019162000d65565b820191906000526020600020905b81548152906001019060200180831162000d4757829003601f168201915b505050505081565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000c0a5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000e3e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000dff5790505b5050505050815250508152602001906001019062000d91565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101562000c0a57838290600052602060002001805462000e9d9062001c16565b80601f016020809104026020016040519081016040528092919081815260200182805462000ecb9062001c16565b801562000f1c5780601f1062000ef05761010080835404028352916020019162000f1c565b820191906000526020600020905b81548152906001019060200180831162000efe57829003601f168201915b50505050508152602001906001019062000e7b565b6023805462000ce69062001c16565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000c0a5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200101157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000fd25790505b5050505050815250508152602001906001019062000f64565b601d546040516005916001600160a01b031690819083906200104c906200194a565b6001600160a01b0393841681529290911660208301526040820152606001604051809103906000f08015801562001087573d6000803e3d6000fd5b50602780546001600160a01b0319166001600160a01b0392831617905560408051808201909152600a8152691cdbdb5955185c99d95d60b21b6020820152601f549091620010da9116620f4240620016e2565b6027546040516000916001600160a01b0316906101f4908381818185875af1925050503d80600081146200112b576040519150601f19603f3d011682016040523d82523d6000602084013e62001130565b606091505b5050905080620011865760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f206465706f736974206574686572000000000000000000604482015260640160405180910390fd5b601d546040516000916001600160a01b03169063cda4fee290620011af90869060240162001add565b60408051601f198184030181529181526020820180516001600160e01b031660e09490941b93909317909252601d549151632f5abd0d60e21b8152909350737109709ecfa91a80626ff3989d68f67f5b1dd12d925063bd6af4349162001227916001600160a01b039190911690859060040162001dca565b600060405180830381600087803b1580156200124257600080fd5b505af115801562001257573d6000803e3d6000fd5b50506027546040516366d27f7160e11b81526001600160a01b03909116925063cda4fee291506064906200129090879060040162001add565b6000604051808303818588803b158015620012aa57600080fd5b505af1158015620012bf573d6000803e3d6000fd5b5050601d54620012e193506001600160a01b03163191506101f4905062001581565b601f54620012f9906001600160a01b031631620017cb565b50505050565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562000c0a578382906000526020600020018054620013459062001c16565b80601f0160208091040260200160405190810160405280929190818152602001828054620013739062001c16565b8015620013c45780601f106200139857610100808354040283529160200191620013c4565b820191906000526020600020905b815481529060010190602001808311620013a657829003601f168201915b50505050508152602001906001019062001323565b600754600090610100900460ff1615620013fc5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200150b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200148d917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001ecb565b60408051601f1981840301815290829052620014a99162001efe565b6000604051808303816000865af19150503d8060008114620014e8576040519150601f19603f3d011682016040523d82523d6000602084013e620014ed565b606091505b509150508080602001905181019062001507919062001f1c565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000abb576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a9c575050505050905090565b6025805462000ce69062001c16565b808214620007e2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620015f49060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1620007e262001816565b60008282604051602001620016c392919062001f40565b60408051601f1981840301815291905280516020909101209392505050565b60405163c88a5e6d60e01b81526001600160a01b038316600482015260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156200173f57600080fd5b505af115801562001754573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b158015620017ae57600080fd5b505af1158015620017c3573d6000803e3d6000fd5b505050505050565b6200181381604051602401620017e391815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b17905262001929565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620019185760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620018b3929160200162001ecb565b60408051601f1981840301815290829052620018cf9162001efe565b6000604051808303816000865af19150503d80600081146200190e576040519150601f19603f3d011682016040523d82523d6000602084013e62001913565b606091505b505050505b6007805461ff001916610100179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6106718062001f7683390190565b6108a480620025e783390190565b61116b8062002e8b83390190565b6020808252825182820181905260009190848201906040850190845b81811015620019b75783516001600160a01b03168352928401929184019160010162001990565b50909695505050505050565b60005b83811015620019e0578181015183820152602001620019c6565b50506000910152565b6000815180845262001a03816020860160208601620019c3565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562001acd57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562001ab657605f1989850301835262001aa3848651620019e9565b948e01949350918d019160010162001a84565b505050978a01979450509188019160010162001a3e565b50919a9950505050505050505050565b60208152600062001af26020830184620019e9565b9392505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562001ba157898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562001b8b5783516001600160e01b0319168252928b019260019290920191908b019062001b5f565b50978a0197955050509187019160010162001b21565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562001c0957603f1988860301845262001bf6858351620019e9565b9450928501929085019060010162001bd7565b5092979650505050505050565b600181811c9082168062001c2b57607f821691505b60208210810362001c4c57634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c908083168062001c6d57607f831692505b6020808410820362001c8f57634e487b7160e01b600052602260045260246000fd5b8388526020880182801562001cad576001811462001cc45762001cf1565b60ff198716825285151560051b8201975062001cf1565b60008981526020902060005b8781101562001ceb5781548482015290860190840162001cd0565b83019850505b5050505050505092915050565b6001600160a01b038681168252851660208201526040810184905269ffffffffffffffffffff198316606082015260a06080820181905260009062001d469083018462001c52565b979650505050505050565b60006020828403121562001d6457600080fd5b5051919050565b6001600160a01b038616815260a06020820181905260009062001d919083018762001c52565b85604084015269ffffffffffffffffffff1985166060840152828103608084015262001dbe818562001c52565b98975050505050505050565b6001600160a01b038316815260406020820181905260009062001df090830184620019e9565b949350505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141762001e285762001e2862001df8565b92915050565b8181038181111562001e285762001e2862001df8565b69ffffffffffffffffffff198516815260c06020820152600062001e6c60c083018662001c52565b60018060a01b038516604084015282810380606085015260058252642a37b5b2b760d91b60208301526040810160808501525060036040820152622a25a760e91b60608201526080810191505060ff831660a083015295945050505050565b6001600160e01b031983168152815160009062001ef0816004850160208701620019c3565b919091016004019392505050565b6000825162001f12818460208701620019c3565b9190910192915050565b60006020828403121562001f2f57600080fd5b8151801515811462001af257600080fd5b69ffffffffffffffffffff19831681526000825162001f67816016850160208701620019c3565b91909101601601939250505056fe608060405234801561001057600080fd5b5060405161067138038061067183398101604081905261002f91610083565b600080546001600160a01b039485166001600160a01b03199182161790915560018054939094169216919091179091556002556100bf565b80516001600160a01b038116811461007e57600080fd5b919050565b60008060006060848603121561009857600080fd5b6100a184610067565b92506100af60208501610067565b9150604084015190509250925092565b6105a3806100ce6000396000f3fe60806040526004361061004e5760003560e01c80630be69fcd1461005a57806334b2e495146100835780637c62dd31146100bb57806380fc1fe3146100db578063cda4fee2146100fd57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061007060025481565b6040519081526020015b60405180910390f35b34801561008f57600080fd5b506000546100a3906001600160a01b031681565b6040516001600160a01b03909116815260200161007a565b3480156100c757600080fd5b506001546100a3906001600160a01b031681565b3480156100e757600080fd5b506100fb6100f636600461036a565b610110565b005b6100fb61010b36600461041b565b61017e565b6000858585858560405160240161012b9594939291906104bc565b60408051601f198184030181529190526020810180516001600160e01b03166380fc1fe360e01b17905260008054600254929350610176926001600160a01b039091169184916101e1565b505050505050565b6000816040516024016101919190610517565b60408051601f198184030181529190526020810180516001600160e01b03166366d27f7160e11b1790526001546002549192506101dd916001600160a01b0390911690839034906101e1565b5050565b60015b8181116102b0576000856001600160a01b03168486604051610206919061052a565b60006040518083038185875af1925050503d8060008114610243576040519150601f19603f3d011682016040523d82523d6000602084013e610248565b606091505b505090508061029d5760405162461bcd60e51b815260206004820152601e60248201527f43616c6c20746f2074617267657420636f6e7472616374206661696c65640000604482015260640160405180910390fd5b6102a8600183610546565b9150506101e4565b5050505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156102e8576102e86102b7565b604051601f8501601f19908116603f01168101908282118183101715610310576103106102b7565b8160405280935085815286868601111561032957600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261035457600080fd5b610363838335602085016102cd565b9392505050565b600080600080600060a0868803121561038257600080fd5b85356001600160a01b038116811461039957600080fd5b9450602086013567ffffffffffffffff808211156103b657600080fd5b6103c289838a01610343565b9550604088013594506060880135915069ffffffffffffffffffff19821682146103eb57600080fd5b9092506080870135908082111561040157600080fd5b5061040e88828901610343565b9150509295509295909350565b60006020828403121561042d57600080fd5b813567ffffffffffffffff81111561044457600080fd5b8201601f8101841361045557600080fd5b610464848235602084016102cd565b949350505050565b60005b8381101561048757818101518382015260200161046f565b50506000910152565b600081518084526104a881602086016020860161046c565b601f01601f19169290920160200192915050565b6001600160a01b038616815260a0602082018190526000906104e090830187610490565b85604084015269ffffffffffffffffffff1985166060840152828103608084015261050b8185610490565b98975050505050505050565b6020815260006103636020830184610490565b6000825161053c81846020870161046c565b9190910192915050565b8082018082111561056757634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220e86bae5b430ab3f2f78c4bcbacd848a0fc4d0acd09c254814540a3bafd63620a64736f6c63430008150033608060405234801561001057600080fd5b50610884806100206000396000f3fe60806040526004361061003f5760003560e01c8063148a8e62146100445780634b2520e81461006657806380fc1fe314610098578063cda4fee2146100b8575b600080fd5b34801561005057600080fd5b5061006461005f3660046105a1565b6100c9565b005b34801561007257600080fd5b5061008661008136600461061a565b6101ce565b60405190815260200160405180910390f35b3480156100a457600080fd5b506100646100b3366004610678565b6101f4565b6100646100c63660046106fa565b50565b8460006100d68484610367565b90506100e48484898861039b565b600154600254604080516001600160a01b03808c1682528a1660208201529081018890526060810192909252608082015281907f7ee7a1de9c18ce695c95b8b19fbdf26cce3544e3ca9e08c9f487776783d7599f9060a00160405180910390a26001600260008282546101579190610761565b9091555050604051630efe6a8b60e01b81526001600160a01b0387811660048301526024820187905260448201839052831690630efe6a8b90606401600060405180830381600087803b1580156101ad57600080fd5b505af11580156101c1573d6000803e3d6000fd5b5050505050505050505050565b6000806101dc8585856103d9565b60009081526004602052604090205495945050505050565b843360006102028585610367565b905061021085858a8961040f565b6016875110156102675760405162461bcd60e51b815260206004820152601960248201527f526f7574696e6720696e666f20697320746f6f2073686f72740000000000000060448201526064015b60405180910390fd5b60006102728861077a565b600354604080516001600160a01b0387811682528d1660208201526001600160501b0319841681830152606081018b905260808101929092525191925083917f589b38feb5b5559d564ed81012950893bfc35db66a90524d70410d1c15c8e56c9181900360a00190a26001600360008282546102ee9190610761565b9091555050604051635ae2fb3960e11b81526001600160a01b038481166004830152602482018990526044820184905285169063b5c5f67290606401600060405180830381600087803b15801561034457600080fd5b505af1158015610358573d6000803e3d6000fd5b50505050505050505050505050565b6000828260405160200161037c9291906107e1565b60408051601f1981840301815291905280516020909101209392505050565b60006103a88585856103d9565b9050816004600083815260200190815260200160002060008282546103cd9190610761565b90915550505050505050565b60008383836040516020016103f0939291906107fd565b6040516020818303038152906040528051906020012090509392505050565b600061041c8585856103d9565b6000818152600460205260409020549091508281101561048f5760405162461bcd60e51b815260206004820152602860248201527f4b65726e656c4d6f636b3a207469636b65742062616c616e6365206973206e6f6044820152670e840cadcdeeaced60c31b606482015260840161025e565b600082815260046020526040812080548592906104ad90849061083b565b9091555050505050505050565b80356001600160a01b03811681146104d157600080fd5b919050565b80356001600160501b0319811681146104d157600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561051f5761051f6104ee565b604051601f8501601f19908116603f01168101908282118183101715610547576105476104ee565b8160405280935085815286868601111561056057600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261058b57600080fd5b61059a83833560208501610504565b9392505050565b600080600080600060a086880312156105b957600080fd5b6105c2866104ba565b94506105d0602087016104ba565b9350604086013592506105e5606087016104d6565b9150608086013567ffffffffffffffff81111561060157600080fd5b61060d8882890161057a565b9150509295509295909350565b60008060006060848603121561062f57600080fd5b610638846104d6565b9250602084013567ffffffffffffffff81111561065457600080fd5b6106608682870161057a565b92505061066f604085016104ba565b90509250925092565b600080600080600060a0868803121561069057600080fd5b610699866104ba565b9450602086013567ffffffffffffffff808211156106b657600080fd5b6106c289838a0161057a565b9550604088013594506106d7606089016104d6565b935060808801359150808211156106ed57600080fd5b5061060d8882890161057a565b60006020828403121561070c57600080fd5b813567ffffffffffffffff81111561072357600080fd5b8201601f8101841361073457600080fd5b61074384823560208401610504565b949350505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107745761077461074b565b92915050565b805160208201516001600160501b031980821692919060168310156107a95780818460160360031b1b83161693505b505050919050565b6000815160005b818110156107d257602081850181015186830152016107b8565b50600093019283525090919050565b6001600160501b031983168152600061074360168301846107b1565b6001600160501b031984168152600061081960168301856107b1565b60609390931b6bffffffffffffffffffffffff19168352505060140192915050565b818103818111156107745761077461074b56fea2646970667358221220f8e60400136d923ba668412da53b8ec544dfbd01d2bdd66fe79b207b0c03baf864736f6c6343000815003360e06040523480156200001157600080fd5b506040516200116b3803806200116b8339810160408190526200003491620001bc565b8282600362000044838262000322565b50600462000053828262000322565b5050506200006886866200008a60201b60201c565b6080526001600160a01b0390931660a052505060ff1660c05250620004219050565b60008282604051602001620000a1929190620003ee565b60408051601f1981840301815291905280516020909101209392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620000f3578181015183820152602001620000d9565b50506000910152565b600082601f8301126200010e57600080fd5b81516001600160401b03808211156200012b576200012b620000c0565b604051601f8301601f19908116603f01168101908282118183101715620001565762000156620000c0565b816040528381528660208588010111156200017057600080fd5b62000183846020830160208901620000d6565b9695505050505050565b80516001600160a01b0381168114620001a557600080fd5b919050565b805160ff81168114620001a557600080fd5b60008060008060008060c08789031215620001d657600080fd5b86516001600160501b031981168114620001ef57600080fd5b60208801519096506001600160401b03808211156200020d57600080fd5b6200021b8a838b01620000fc565b96506200022b60408a016200018d565b955060608901519150808211156200024257600080fd5b620002508a838b01620000fc565b945060808901519150808211156200026757600080fd5b506200027689828a01620000fc565b9250506200028760a08801620001aa565b90509295509295509295565b600181811c90821680620002a857607f821691505b602082108103620002c957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031d57600081815260208120601f850160051c81016020861015620002f85750805b601f850160051c820191505b81811015620003195782815560010162000304565b5050505b505050565b81516001600160401b038111156200033e576200033e620000c0565b62000356816200034f845462000293565b84620002cf565b602080601f8311600181146200038e5760008415620003755750858301515b600019600386901b1c1916600185901b17855562000319565b600085815260208120601f198616915b82811015620003bf578886015182559484019460019091019084016200039e565b5085821015620003de5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160501b031983168152815160009062000413816016850160208701620000d6565b919091016016019392505050565b60805160a05160c051610d056200046660003960006101710152600081816102ff01526104ae0152600081816101b00152818161035201526104f80152610d056000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806339bb44791161008c578063a457c2d711610066578063a457c2d714610205578063a9059cbb14610218578063b5c5f6721461022b578063dd62ed3e1461023e57600080fd5b806339bb4479146101ae57806370a08231146101d457806395d89b41146101fd57600080fd5b806318160ddd116100c857806318160ddd1461014557806323b872dd14610157578063313ce5671461016a578063395093511461019b57600080fd5b806306fdde03146100ef578063095ea7b31461010d5780630efe6a8b14610130575b600080fd5b6100f7610251565b6040516101049190610abf565b60405180910390f35b61012061011b366004610b29565b6102e3565b6040519015158152602001610104565b61014361013e366004610b53565b6102fd565b005b6002545b604051908152602001610104565b610120610165366004610b86565b6103ce565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610104565b6101206101a9366004610b29565b6103f2565b7f0000000000000000000000000000000000000000000000000000000000000000610149565b6101496101e2366004610bc2565b6001600160a01b031660009081526020819052604090205490565b6100f7610414565b610120610213366004610b29565b610423565b610120610226366004610b29565b61049e565b610143610239366004610b53565b6104ac565b61014961024c366004610be4565b61056e565b60606003805461026090610c17565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610c17565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b6000336102f1818585610599565b60019150505b92915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461034e5760405162461bcd60e51b815260040161034590610c51565b60405180910390fd5b80807f0000000000000000000000000000000000000000000000000000000000000000146103be5760405162461bcd60e51b815260206004820152601d60248201527f455243323050726f78793a2077726f6e67207469636b657420686173680000006044820152606401610345565b6103c884846106be565b50505050565b6000336103dc85828561077d565b6103e78585856107f1565b506001949350505050565b6000336102f1818585610405838361056e565b61040f9190610cae565b610599565b60606004805461026090610c17565b60003381610431828661056e565b9050838110156104915760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610345565b6103e78286868403610599565b6000336102f18185856107f1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146104f45760405162461bcd60e51b815260040161034590610c51565b80807f0000000000000000000000000000000000000000000000000000000000000000146105645760405162461bcd60e51b815260206004820152601d60248201527f455243323050726f78793a2077726f6e67207469636b657420686173680000006044820152606401610345565b6103c88484610995565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610345565b6001600160a01b03821661065c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610345565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0382166107145760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610345565b80600260008282546107269190610cae565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610789848461056e565b905060001981146103c857818110156107e45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610345565b6103c88484848403610599565b6001600160a01b0383166108555760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610345565b6001600160a01b0382166108b75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610345565b6001600160a01b0383166000908152602081905260409020548181101561092f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610345565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36103c8565b6001600160a01b0382166109f55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610345565b6001600160a01b03821660009081526020819052604090205481811015610a695760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610345565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016106b1565b600060208083528351808285015260005b81811015610aec57858101830151858201604001528201610ad0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b2457600080fd5b919050565b60008060408385031215610b3c57600080fd5b610b4583610b0d565b946020939093013593505050565b600080600060608486031215610b6857600080fd5b610b7184610b0d565b95602085013595506040909401359392505050565b600080600060608486031215610b9b57600080fd5b610ba484610b0d565b9250610bb260208501610b0d565b9150604084013590509250925092565b600060208284031215610bd457600080fd5b610bdd82610b0d565b9392505050565b60008060408385031215610bf757600080fd5b610c0083610b0d565b9150610c0e60208401610b0d565b90509250929050565b600181811c90821680610c2b57607f821691505b602082108103610c4b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252603c908201527f455243323050726f78793a206f6e6c79206b65726e656c20616c6c6f7765642060408201527f746f206465706f736974202f20776974686472617720746f6b656e7300000000606082015260800190565b808201808211156102f757634e487b7160e01b600052601160045260246000fdfea26469706673582212206818c201ca490927ddaadf28d826d596672fb9110483d826c500e5f9322f0b0764736f6c63430008150033a2646970667358221220672ae6c7bc159bb34c6fd6d1fc52125ec60feaedde437deaf7096062437c9b5e64736f6c63430008150033",
    "sourceMap": "250:1663:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:870;;;:::i;:::-;;809:352:30;;;:::i;2452:134:6:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;741:61:30:-;;;;;;;;;;;;-1:-1:-1;;3285:40:34;;;3267:59;;3255:2;3240:18;741:61:30;3121:211:34;3221:133:6;;;:::i;414:50:30:-;;;;;;;;;2922:141:6;;;:::i;470:61:30:-;;;;;;;;;600:70;;;:::i;:::-;;;;;;;:::i;2738:178:6:-;;;:::i;:::-;;;;;;;:::i;383:25:30:-;;;;;;;;;5278::34;;;5266:2;5251:18;383:25:30;5132:177:34;2592:140:6;;;:::i;:::-;;;;;;;:::i;537:57:30:-;;;:::i;3069:146:6:-;;;:::i;1215:696:31:-;;;:::i;296:36::-;;;;;-1:-1:-1;;;;;296:36:31;;;;;;-1:-1:-1;;;;;6318:32:34;;;6300:51;;6288:2;6273:18;296:36:31;6122:235:34;2157:141:6;;;:::i;1819:584:0:-;;;:::i;:::-;;;6527:14:34;;6520:22;6502:41;;6490:2;6475:18;1819:584:0;6362:187:34;344:33:30;;;;;-1:-1:-1;;;;;344:33:30;;;273:24;;;;;-1:-1:-1;;;;;273:24:30;;;2304:142:6;;;:::i;676:59:30:-;;;:::i;1572:26:0:-;;;;;;;;;303:35:30;;;;;-1:-1:-1;;;;;303:35:30;;;244:23;;;;;-1:-1:-1;;;;;244:23:30;;;339:870:31;494:6;;467:63;;427:1;;-1:-1:-1;;;;;494:6:31;;;;427:1;;467:63;;;:::i;:::-;-1:-1:-1;;;;;7476:15:34;;;7458:34;;7528:15;;;;7523:2;7508:18;;7501:43;7575:2;7560:18;;7553:34;7408:2;7393:18;467:63:31;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;438:14:31;:92;;-1:-1:-1;;;;;;438:92:31;-1:-1:-1;;;;;438:92:31;;;;;;;;;540:6;;581:5;;619:8;;540:106;;-1:-1:-1;;;540:106:31;;:6;;;;:19;;:106;;581:5;;;;;438:92;;614:3;;619:8;;;;;;629:7;;540:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;656:34;665:5;;;;;;;;;-1:-1:-1;;;;;665:5:31;-1:-1:-1;;;;;665:17:31;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;686:3;656:8;:34::i;:::-;757:6;;783:5;;805:8;;729:104;;701:25;;-1:-1:-1;;;;;757:6:31;;;;:15;;729:104;;783:5;;;;;791:8;;801:2;;805:8;;;815:7;;729:104;;;:::i;:::-;;;;-1:-1:-1;;729:104:31;;;;;;;;;;;;;;-1:-1:-1;;;;;729:104:31;;;;;;;;;;;;;865:6;;843:44;;-1:-1:-1;;;843:44:31;;729:104;;-1:-1:-1;843:13:31;;-1:-1:-1;843:13:31;;:44;;-1:-1:-1;;;;;865:6:31;;;;;729:104;;843:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;906:3:31;;897:13;;-1:-1:-1;;;897:13:31;;-1:-1:-1;;;;;906:3:31;;;897:13;;;6300:51:34;897:8:31;;-1:-1:-1;897:8:31;;-1:-1:-1;6273:18:34;;897:13:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;987:14:31;;1019:5;;1041:8;;987:72;;-1:-1:-1;;;987:72:31;;-1:-1:-1;;;;;987:14:31;;;;-1:-1:-1;987:23:31;;-1:-1:-1;987:72:31;;1019:5;;;;1027:8;;1037:2;;1041:8;;;;;;1051:7;;987:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1078:5:31;;1102:14;;1078:40;;-1:-1:-1;;;1078:40:31;;-1:-1:-1;;;;;1102:14:31;;;1078:40;;;6300:51:34;1069:72:31;;-1:-1:-1;1078:5:31;;;-1:-1:-1;1078:15:31;;6273:18:34;;1078:40:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1126:14;1131:9;1126:2;:14;:::i;:::-;1120:20;;:3;:20;:::i;:::-;1069:8;:72::i;:::-;1160:5;;:19;;;-1:-1:-1;;;1160:19:31;;;;1151:51;;-1:-1:-1;;;;;1160:5:31;;:17;;:19;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;;;1151:51;397:812;;339:870::o;809:352:30:-;852:5;;843:24;;;-1:-1:-1;;;843:24:30;;-1:-1:-1;;;;;852:5:30;;;843:24;;;11642:51:34;11709:18;;;11702:30;11768:1;11748:18;;;11741:29;-1:-1:-1;;;11786:18:34;;;11779:35;843:8:30;;;;11831:19:34;;843:24:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;886:3:30;;877:20;;;-1:-1:-1;;;877:20:30;;-1:-1:-1;;;;;886:3:30;;;877:20;;;12073:51:34;12140:18;;;12133:30;12199:1;12179:18;;;12172:29;-1:-1:-1;;;12217:18:34;;;12210:33;877:8:30;;-1:-1:-1;877:8:30;;-1:-1:-1;12260:19:34;;877:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;916:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;907:6:30;:25;;-1:-1:-1;;;;;;907:25:30;-1:-1:-1;;;;;907:25:30;;;;;;;;;978:8;;950:152;;978:8;;;;;;1000:7;;1090:2;;950:152;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;942:5:30;:160;;-1:-1:-1;;;;;;942:160:30;-1:-1:-1;;;;;942:160:30;;;;;;;;;;1136:8;;1146:7;1125:29;;;;1136:8;;;1146:7;1125:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;:29::i;:::-;1112:10;:42;809:352::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;600:70:30:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2738:178:6:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;537:57:30;;;;;;;:::i;3069:146:6:-;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:696:31;1359:6;;1332:63;;1292:1;;-1:-1:-1;;;;;1359:6:31;;;;1292:1;;1332:63;;;:::i;:::-;-1:-1:-1;;;;;7476:15:34;;;7458:34;;7528:15;;;;7523:2;7508:18;;7501:43;7575:2;7560:18;;7553:34;7408:2;7393:18;1332:63:31;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1303:14:31;:92;;-1:-1:-1;;;;;;1303:92:31;-1:-1:-1;;;;;1303:92:31;;;;;;1405:35;;;;;;;;;;;;-1:-1:-1;;;1405:35:31;;;;1460:3;;1405:35;;1450:23;;1460:3;1465:7;1450:9;:23::i;:::-;1509:14;;1501:44;;1484:12;;-1:-1:-1;;;;;1509:14:31;;1537:3;;1484:12;1501:44;1484:12;1501:44;1537:3;1509:14;1501:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:62;;;1563:7;1555:43;;;;-1:-1:-1;;;1555:43:31;;13734:2:34;1555:43:31;;;13716:21:34;13773:2;13753:18;;;13746:30;13812:25;13792:18;;;13785:53;13855:18;;1555:43:31;;;;;;;;1664:6;;1649:46;;1609:25;;-1:-1:-1;;;;;1664:6:31;;:22;;1649:46;;1688:6;;1649:46;;;:::i;:::-;;;;-1:-1:-1;;1649:46:31;;;;;;;;;;;;;;-1:-1:-1;;;;;1649:46:31;;;;;;;;;;;;;1727:6;;1705:44;;-1:-1:-1;;;1705:44:31;;1649:46;;-1:-1:-1;1705:13:31;;-1:-1:-1;1705:13:31;;:44;;-1:-1:-1;;;;;1727:6:31;;;;;1649:46;;1705:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1759:14:31;;:50;;-1:-1:-1;;;1759:50:31;;-1:-1:-1;;;;;1759:14:31;;;;-1:-1:-1;1759:30:31;;-1:-1:-1;1797:3:31;;1759:50;;1802:6;;1759:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1836:6:31;;1819:38;;-1:-1:-1;;;;;;1836:6:31;1828:23;;-1:-1:-1;1853:3:31;;-1:-1:-1;1819:8:31;:38::i;:::-;1891:3;;1867:37;;-1:-1:-1;;;;;1891:3:31;1883:20;1867:15;:37::i;:::-;1262:649;;;;1215:696::o;2157:141:6:-;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;14283:51:34;;;-1:-1:-1;;;14350:18:34;;;14343:34;2196:43:0;;;;;;;;;14256:18:34;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;676:59:30:-;;;;;;;:::i;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;15553:2:34;15535:21;;;15592:2;15572:18;;;15565:30;15631:34;15626:2;15611:18;;15604:62;-1:-1:-1;;;15697:2:34;15682:18;;15675:32;15739:3;15724:19;;15351:398;5293:41:0;;;;;;;;5353:31;;;15966:21:34;;;16023:2;16003:18;;;15996:30;-1:-1:-1;;;16057:2:34;16042:18;;16035:40;16142:4;16127:20;;16120:36;;;5353:31:0;;;;;;;16107:3:34;5353:31:0;;;5403;;;16379:21:34;;;16436:2;16416:18;;;16409:30;-1:-1:-1;;;16470:2:34;16455:18;;16448:40;16555:4;16540:20;;16533:36;;;5403:31:0;;;;;;;16520:3:34;5403:31:0;;;5448:6;:4;:6::i;391:179:25:-;473:18;547:8;557:7;530:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;530:35:25;;;;;;;;;520:46;;530:35;520:46;;;;;391:179;-1:-1:-1;;;391:179:25:o;25654:144:4:-;25733:24;;-1:-1:-1;;;25733:24:4;;-1:-1:-1;;;;;14301:32:34;;25733:24:4;;;14283:51:34;14350:18;;;14343:34;;;25733:7:4;;;;14256:18:34;;25733:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25767:24:4;;-1:-1:-1;;;25767:24:4;;-1:-1:-1;;;;;6318:32:34;;25767:24:4;;;6300:51:34;25767:13:4;;-1:-1:-1;25767:13:4;;-1:-1:-1;6273:18:34;;25767:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25654:144;;:::o;781:114:14:-;831:57;884:2;847:40;;;;;;5278:25:34;;5266:2;5251:18;;5132:177;847:40:14;;;;-1:-1:-1;;847:40:14;;;;;;;;;;;;;;-1:-1:-1;;;;;847:40:14;-1:-1:-1;;;847:40:14;;;831:15;:57::i;:::-;781:114;:::o;2409:432:0:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;17461:51:34;;;-1:-1:-1;;;17528:18:34;;;17521:34;;;;2712:4:0;17571:18:34;;;17564:34;2489:11:0;;1671:64;2586:43;;17434:18:34;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;181:376:14:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;180:658:34:-;351:2;403:21;;;473:13;;376:18;;;495:22;;;322:4;;351:2;574:15;;;;548:2;533:18;;;322:4;617:195;631:6;628:1;625:13;617:195;;;696:13;;-1:-1:-1;;;;;692:39:34;680:52;;787:15;;;;752:12;;;;728:1;646:9;617:195;;;-1:-1:-1;829:3:34;;180:658;-1:-1:-1;;;;;;180:658:34:o;843:250::-;928:1;938:113;952:6;949:1;946:13;938:113;;;1028:11;;;1022:18;1009:11;;;1002:39;974:2;967:10;938:113;;;-1:-1:-1;;1085:1:34;1067:16;;1060:27;843:250::o;1098:271::-;1140:3;1178:5;1172:12;1205:6;1200:3;1193:19;1221:76;1290:6;1283:4;1278:3;1274:14;1267:4;1260:5;1256:16;1221:76;:::i;:::-;1351:2;1330:15;-1:-1:-1;;1326:29:34;1317:39;;;;1358:4;1313:50;;1098:271;-1:-1:-1;;1098:271:34:o;1374:1742::-;1607:2;1659:21;;;1729:13;;1632:18;;;1751:22;;;1578:4;;1607:2;1792;;1810:18;;;;1847:1;1890:15;;;1875:31;;1871:40;;1934:15;;;1578:4;;1998:1089;2014:6;2009:3;2006:15;1998:1089;;;-1:-1:-1;;2083:22:34;;;2079:36;2067:49;;2139:13;;2226:9;;-1:-1:-1;;;;;2222:35:34;2207:51;;2297:11;;2291:18;2329:15;;;2322:27;;;2410:19;;2179:15;;;2442:24;;;2623:21;;;;2489:2;2571:17;;;2559:30;;2555:39;;;2513:15;;;;2668:1;2682:296;2698:8;2693:3;2690:17;2682:296;;;2804:2;2800:7;2791:6;2783;2779:19;2775:33;2768:5;2761:48;2836:42;2871:6;2860:8;2854:15;2836:42;:::i;:::-;2907:17;;;;2826:52;-1:-1:-1;2950:14:34;;;;2726:1;2717:11;2682:296;;;-1:-1:-1;;;3065:12:34;;;;3001:6;-1:-1:-1;;3030:15:34;;;;2040:1;2031:11;1998:1089;;;-1:-1:-1;3104:6:34;;1374:1742;-1:-1:-1;;;;;;;;;;1374:1742:34:o;3337:218::-;3484:2;3473:9;3466:21;3447:4;3504:45;3545:2;3534:9;3530:18;3522:6;3504:45;:::i;:::-;3496:53;3337:218;-1:-1:-1;;;3337:218:34:o;3560:1567::-;3762:4;3791:2;3831;3820:9;3816:18;3861:2;3850:9;3843:21;3884:6;3919;3913:13;3950:6;3942;3935:22;3976:2;3966:12;;4009:2;3998:9;3994:18;3987:25;;4071:2;4061:6;4058:1;4054:14;4043:9;4039:30;4035:39;4109:2;4101:6;4097:15;4130:1;4151;4161:937;4177:6;4172:3;4169:15;4161:937;;;4246:22;;;-1:-1:-1;;4242:36:34;4230:49;;4302:13;;4389:9;;-1:-1:-1;;;;;4385:35:34;4370:51;;4460:11;;4454:18;4492:15;;;4485:27;;;4573:19;;4342:15;;;4605:24;;;4695:21;;;;4740:1;;4663:2;4651:15;;;4754:236;4770:8;4765:3;4762:17;4754:236;;;4851:15;;-1:-1:-1;;;;;;4847:42:34;4833:57;;4959:17;;;;4798:1;4789:11;;;;;4916:14;;;;4754:236;;;-1:-1:-1;5076:12:34;;;;5013:5;-1:-1:-1;;;5041:15:34;;;;4203:1;4194:11;4161:937;;;-1:-1:-1;5115:6:34;;3560:1567;-1:-1:-1;;;;;;;;;3560:1567:34:o;5314:803::-;5476:4;5505:2;5545;5534:9;5530:18;5575:2;5564:9;5557:21;5598:6;5633;5627:13;5664:6;5656;5649:22;5702:2;5691:9;5687:18;5680:25;;5764:2;5754:6;5751:1;5747:14;5736:9;5732:30;5728:39;5714:53;;5802:2;5794:6;5790:15;5823:1;5833:255;5847:6;5844:1;5841:13;5833:255;;;5940:2;5936:7;5924:9;5916:6;5912:22;5908:36;5903:3;5896:49;5968:40;6001:6;5992;5986:13;5968:40;:::i;:::-;5958:50;-1:-1:-1;6066:12:34;;;;6031:15;;;;5869:1;5862:9;5833:255;;;-1:-1:-1;6105:6:34;;5314:803;-1:-1:-1;;;;;;;5314:803:34:o;7598:380::-;7677:1;7673:12;;;;7720;;;7741:61;;7795:4;7787:6;7783:17;7773:27;;7741:61;7848:2;7840:6;7837:14;7817:18;7814:38;7811:161;;7894:10;7889:3;7885:20;7882:1;7875:31;7929:4;7926:1;7919:15;7957:4;7954:1;7947:15;7811:161;;7598:380;;;:::o;8108:1079::-;8192:12;;8157:3;;8247:1;8267:18;;;;8320;;;;8347:61;;8401:4;8393:6;8389:17;8379:27;;8347:61;8427:2;8475;8467:6;8464:14;8444:18;8441:38;8438:161;;8521:10;8516:3;8512:20;8509:1;8502:31;8556:4;8553:1;8546:15;8584:4;8581:1;8574:15;8438:161;112:19;;;164:4;155:14;;8696:18;8723:132;;;;8869:1;8864:317;;;;8689:492;;8723:132;-1:-1:-1;;8758:24:34;;8744:39;;8828:14;;8821:22;8818:1;8814:30;8803:42;;;-1:-1:-1;8723:132:34;;8864:317;8055:1;8048:14;;;8092:4;8079:18;;8957:1;8971:167;8985:6;8982:1;8979:13;8971:167;;;9065:14;;9050:13;;;9043:37;9108:16;;;;9000:10;;8971:167;;;9158:13;;;-1:-1:-1;;8689:492:34;;;;;;;;8108:1079;;;;:::o;9192:609::-;-1:-1:-1;;;;;9496:15:34;;;9478:34;;9548:15;;9543:2;9528:18;;9521:43;9595:2;9580:18;;9573:34;;;-1:-1:-1;;9643:40:34;;9638:2;9623:18;;9616:68;9458:3;9715;9700:19;;9693:32;;;9421:4;;9742:53;;9775:19;;9767:6;9742:53;:::i;:::-;9734:61;9192:609;-1:-1:-1;;;;;;;9192:609:34:o;9806:184::-;9876:6;9929:2;9917:9;9908:7;9904:23;9900:32;9897:52;;;9945:1;9942;9935:12;9897:52;-1:-1:-1;9968:16:34;;9806:184;-1:-1:-1;9806:184:34:o;9995:672::-;-1:-1:-1;;;;;10275:32:34;;10257:51;;10295:3;10339:2;10324:18;;10317:31;;;-1:-1:-1;;10371:53:34;;10404:19;;10396:6;10371:53;:::i;:::-;10460:6;10455:2;10444:9;10440:18;10433:34;10519:22;10515:27;10507:6;10503:40;10498:2;10487:9;10483:18;10476:68;10593:9;10585:6;10581:22;10575:3;10564:9;10560:19;10553:51;10621:40;10654:6;10646;10621:40;:::i;:::-;10613:48;9995:672;-1:-1:-1;;;;;;;;9995:672:34:o;10672:315::-;-1:-1:-1;;;;;10847:32:34;;10829:51;;10916:2;10911;10896:18;;10889:30;;;-1:-1:-1;;10936:45:34;;10962:18;;10954:6;10936:45;:::i;:::-;10928:53;10672:315;-1:-1:-1;;;;10672:315:34:o;10992:127::-;11053:10;11048:3;11044:20;11041:1;11034:31;11084:4;11081:1;11074:15;11108:4;11105:1;11098:15;11124:168;11197:9;;;11228;;11245:15;;;11239:22;;11225:37;11215:71;;11266:18;;:::i;:::-;11124:168;;;;:::o;11297:128::-;11364:9;;;11385:11;;;11382:37;;;11399:18;;:::i;12290:1027::-;12743:22;12739:27;12731:6;12727:40;12716:9;12709:59;12804:3;12799:2;12788:9;12784:18;12777:31;12690:4;12831:53;12879:3;12868:9;12864:19;12856:6;12831:53;:::i;:::-;12949:1;12945;12940:3;12936:11;12932:19;12924:6;12920:32;12915:2;12904:9;12900:18;12893:60;12984:9;12976:6;12972:22;13030:2;13025;13014:9;13010:18;13003:30;13057:1;13049:6;13042:17;-1:-1:-1;;;13087:2:34;13079:6;13075:15;13068:32;13145:2;13141;13137:11;13131:3;13120:9;13116:19;13109:40;;13182:1;13177:2;13169:6;13165:15;13158:26;-1:-1:-1;;;13212:2:34;13204:6;13200:15;13193:30;13252:3;13244:6;13240:16;13232:24;;;13305:4;13297:6;13293:17;13287:3;13276:9;13272:19;13265:46;12290:1027;;;;;;;:::o;14388:384::-;-1:-1:-1;;;;;;14573:33:34;;14561:46;;14630:13;;14543:3;;14652:74;14630:13;14715:1;14706:11;;14699:4;14687:17;;14652:74;:::i;:::-;14746:16;;;;14764:1;14742:24;;14388:384;-1:-1:-1;;;14388:384:34:o;14777:287::-;14906:3;14944:6;14938:13;14960:66;15019:6;15014:3;15007:4;14999:6;14995:17;14960:66;:::i;:::-;15042:16;;;;;14777:287;-1:-1:-1;;14777:287:34:o;15069:277::-;15136:6;15189:2;15177:9;15168:7;15164:23;15160:32;15157:52;;;15205:1;15202;15195:12;15157:52;15237:9;15231:16;15290:5;15283:13;15276:21;15269:5;15266:32;15256:60;;15312:1;15309;15302:12;16580:395;16783:22;16779:27;16771:6;16767:40;16762:3;16755:53;16737:3;16837:6;16831:13;16853:75;16921:6;16916:2;16911:3;16907:12;16900:4;16892:6;16888:17;16853:75;:::i;:::-;16948:16;;;;16966:2;16944:25;;16580:395;-1:-1:-1;;;16580:395:34:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "bulkWithdrawal()": "a84922a4",
    "content()": "8a4d5a67",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "kernel()": "d4aae0c4",
    "receiver()": "f7260d3e",
    "receiver22()": "392c1722",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_WithdrawalFromSmartContractSucceed()": "094ae1fc",
    "test_WithdrawalNativeSucceed()": "97361594",
    "ticketHash()": "76822969",
    "ticketer()": "3f70f347",
    "token()": "fc0c546a",
    "wrongContent()": "56342f63",
    "wrongTicketer()": "4f6c39bb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bulkWithdrawal\",\"outputs\":[{\"internalType\":\"contract BulkWithdrawal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"content\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract KernelMock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver22\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_WithdrawalFromSmartContractSucceed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_WithdrawalNativeSucceed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketer\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20Proxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrongContent\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrongTicketer\",\"outputs\":[{\"internalType\":\"bytes22\",\"name\":\"\",\"type\":\"bytes22\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BulkWithdrawal.t.sol\":\"BulkWithdrawalTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\"lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85\",\"dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9\",\"dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/BatchCallHelper.sol\":{\"keccak256\":\"0x55f43ea2dccdf5053c604724d26021a6b40a412d50a6700df196f31fbff0653f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95b36dcde2964f119180127620b1f3b9653730fa167cfaaf1d2974f7c8c129cf\",\"dweb:/ipfs/QmVQAKc83R7wCr8uhkBjnDYSKGXHBgnJxvz9b9HMXp3cXr\"]},\"src/BulkWithdrawal.sol\":{\"keccak256\":\"0xba8efca99f2b87a694150f8529340d121a05202fb54c17d25f93bd8bd0f9db3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac2a8eb6599d36dcbc5168e17ab7d0851fc4ab30f6667f90677edbda11ae7df7\",\"dweb:/ipfs/QmSxyka8QrJSKfVr1BugqFU9xmwNNddwVKYzLrAS3nV5nG\"]},\"src/ERC20Proxy.sol\":{\"keccak256\":\"0x5d050db8f294c9423f0fe6c559de8831d663f15f77410e7f143e201b6cae7a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ac867cb5aff71f60fe40e5551215951338c333ce2390311f677dc291cda2af\",\"dweb:/ipfs/QmQKVAP9XBuvGuwzmxRRWayDj8kX1s5AaCaqxdRPJJTZoZ\"]},\"src/IDepositEvent.sol\":{\"keccak256\":\"0x2ee2f29720073433a67601d155e57ecab4d3805a60a99f7505df55fd06e50b43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93934f97d78286db35c6d103d24a058f8a6d481eee3ec0324cf9d0d8b1e83b5a\",\"dweb:/ipfs/QmYtDQmUte2EqhFZxEHZeBSw7KVTmBFx6HHNv43R6X2BPS\"]},\"src/IWithdrawalEvent.sol\":{\"keccak256\":\"0x4c31c398bde6481ff2d53a59be280fdeffbe5bb6f70b9afbc2197d9dc9ba0ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cf330488f1df81e3ebb40c397c21d8ba50418cba2f4e86dcaecfcb3081c5d85\",\"dweb:/ipfs/QmXKXPiN8DxgEobpsq1m4krKkw7J2ng77zARtMCZgcH9Rh\"]},\"src/KernelMock.sol\":{\"keccak256\":\"0x2b5bbfe00f1191024af2b819b78b69abcc48d890e724d4919b07e44d43ad9934\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://691cf5290bd203356ff25e1c7fd2c301125f09080dd8a2dc28fa6b9c6ebd8371\",\"dweb:/ipfs/QmTYyRiruQoj6xKffsZZJZxSUKm9e32kAR1NaJCGePj8J1\"]},\"test/Base.t.sol\":{\"keccak256\":\"0x691c6c3ddb55cd866c3f60ffc58051bbc183a95a3ff253c1d1e45bb605530313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc48f4f8796dc850b8f8394ddf8717e93e8a526aabeb8663936248edfad45fa\",\"dweb:/ipfs/QmcbU5r1zSFqPktnLLT6dGEp2V4B1pVjwmkCqMuNq9vbUA\"]},\"test/BulkWithdrawal.t.sol\":{\"keccak256\":\"0x6093d807c762cbb3bb773d2eec184175f0d343badbd11f66458f6a9859ea05ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55dc675c2a799030176985ada39a4eedb371490fb6bb6fd27c6131fd5034bd36\",\"dweb:/ipfs/QmUeBMqpVC6QXXB9gjarG7zhJcuN9M9QeDncX8PBb3MCWm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bulkWithdrawal",
          "outputs": [
            {
              "internalType": "contract BulkWithdrawal",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "content",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kernel",
          "outputs": [
            {
              "internalType": "contract KernelMock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiver",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiver22",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_WithdrawalFromSmartContractSucceed"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_WithdrawalNativeSucceed"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ticketHash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ticketer",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract ERC20Proxy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrongContent",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrongTicketer",
          "outputs": [
            {
              "internalType": "bytes22",
              "name": "",
              "type": "bytes22"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/BulkWithdrawal.t.sol": "BulkWithdrawalTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a",
        "urls": [
          "bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85",
          "dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9",
        "urls": [
          "bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9",
          "dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/BatchCallHelper.sol": {
        "keccak256": "0x55f43ea2dccdf5053c604724d26021a6b40a412d50a6700df196f31fbff0653f",
        "urls": [
          "bzz-raw://95b36dcde2964f119180127620b1f3b9653730fa167cfaaf1d2974f7c8c129cf",
          "dweb:/ipfs/QmVQAKc83R7wCr8uhkBjnDYSKGXHBgnJxvz9b9HMXp3cXr"
        ],
        "license": "MIT"
      },
      "src/BulkWithdrawal.sol": {
        "keccak256": "0xba8efca99f2b87a694150f8529340d121a05202fb54c17d25f93bd8bd0f9db3e",
        "urls": [
          "bzz-raw://ac2a8eb6599d36dcbc5168e17ab7d0851fc4ab30f6667f90677edbda11ae7df7",
          "dweb:/ipfs/QmSxyka8QrJSKfVr1BugqFU9xmwNNddwVKYzLrAS3nV5nG"
        ],
        "license": "MIT"
      },
      "src/ERC20Proxy.sol": {
        "keccak256": "0x5d050db8f294c9423f0fe6c559de8831d663f15f77410e7f143e201b6cae7a3f",
        "urls": [
          "bzz-raw://f0ac867cb5aff71f60fe40e5551215951338c333ce2390311f677dc291cda2af",
          "dweb:/ipfs/QmQKVAP9XBuvGuwzmxRRWayDj8kX1s5AaCaqxdRPJJTZoZ"
        ],
        "license": "MIT"
      },
      "src/IDepositEvent.sol": {
        "keccak256": "0x2ee2f29720073433a67601d155e57ecab4d3805a60a99f7505df55fd06e50b43",
        "urls": [
          "bzz-raw://93934f97d78286db35c6d103d24a058f8a6d481eee3ec0324cf9d0d8b1e83b5a",
          "dweb:/ipfs/QmYtDQmUte2EqhFZxEHZeBSw7KVTmBFx6HHNv43R6X2BPS"
        ],
        "license": "MIT"
      },
      "src/IWithdrawalEvent.sol": {
        "keccak256": "0x4c31c398bde6481ff2d53a59be280fdeffbe5bb6f70b9afbc2197d9dc9ba0ca0",
        "urls": [
          "bzz-raw://7cf330488f1df81e3ebb40c397c21d8ba50418cba2f4e86dcaecfcb3081c5d85",
          "dweb:/ipfs/QmXKXPiN8DxgEobpsq1m4krKkw7J2ng77zARtMCZgcH9Rh"
        ],
        "license": "MIT"
      },
      "src/KernelMock.sol": {
        "keccak256": "0x2b5bbfe00f1191024af2b819b78b69abcc48d890e724d4919b07e44d43ad9934",
        "urls": [
          "bzz-raw://691cf5290bd203356ff25e1c7fd2c301125f09080dd8a2dc28fa6b9c6ebd8371",
          "dweb:/ipfs/QmTYyRiruQoj6xKffsZZJZxSUKm9e32kAR1NaJCGePj8J1"
        ],
        "license": "MIT"
      },
      "test/Base.t.sol": {
        "keccak256": "0x691c6c3ddb55cd866c3f60ffc58051bbc183a95a3ff253c1d1e45bb605530313",
        "urls": [
          "bzz-raw://6bc48f4f8796dc850b8f8394ddf8717e93e8a526aabeb8663936248edfad45fa",
          "dweb:/ipfs/QmcbU5r1zSFqPktnLLT6dGEp2V4B1pVjwmkCqMuNq9vbUA"
        ],
        "license": "MIT"
      },
      "test/BulkWithdrawal.t.sol": {
        "keccak256": "0x6093d807c762cbb3bb773d2eec184175f0d343badbd11f66458f6a9859ea05ea",
        "urls": [
          "bzz-raw://55dc675c2a799030176985ada39a4eedb371490fb6bb6fd27c6131fd5034bd36",
          "dweb:/ipfs/QmUeBMqpVC6QXXB9gjarG7zhJcuN9M9QeDncX8PBb3MCWm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/BulkWithdrawal.t.sol",
    "id": 45223,
    "exportedSymbols": {
      "BaseTest": [
        44991
      ],
      "BulkWithdrawal": [
        44167
      ],
      "BulkWithdrawalTest": [
        45222
      ],
      "ERC20Proxy": [
        44381
      ],
      "console": [
        21956
      ],
      "hashTicket": [
        44245
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1882:31",
    "nodes": [
      {
        "id": 44993,
        "nodeType": "PragmaDirective",
        "src": "32:24:31",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 44995,
        "nodeType": "ImportDirective",
        "src": "58:38:31",
        "nodes": [],
        "absolutePath": "test/Base.t.sol",
        "file": "./Base.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45223,
        "sourceUnit": 44992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44994,
              "name": "BaseTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44991,
              "src": "66:8:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44997,
        "nodeType": "ImportDirective",
        "src": "97:57:31",
        "nodes": [],
        "absolutePath": "src/BulkWithdrawal.sol",
        "file": "../src/BulkWithdrawal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45223,
        "sourceUnit": 44168,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44996,
              "name": "BulkWithdrawal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44167,
              "src": "105:14:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45000,
        "nodeType": "ImportDirective",
        "src": "155:61:31",
        "nodes": [],
        "absolutePath": "src/ERC20Proxy.sol",
        "file": "../src/ERC20Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45223,
        "sourceUnit": 44382,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44998,
              "name": "ERC20Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44381,
              "src": "163:10:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44999,
              "name": "hashTicket",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44245,
              "src": "175:10:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45001,
        "nodeType": "ImportDirective",
        "src": "217:31:31",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45223,
        "sourceUnit": 21957,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45222,
        "nodeType": "ContractDefinition",
        "src": "250:1663:31",
        "nodes": [
          {
            "id": 45006,
            "nodeType": "VariableDeclaration",
            "src": "296:36:31",
            "nodes": [],
            "constant": false,
            "functionSelector": "a84922a4",
            "mutability": "mutable",
            "name": "bulkWithdrawal",
            "nameLocation": "318:14:31",
            "scope": 45222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
              "typeString": "contract BulkWithdrawal"
            },
            "typeName": {
              "id": 45005,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45004,
                "name": "BulkWithdrawal",
                "nameLocations": [
                  "296:14:31"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44167,
                "src": "296:14:31"
              },
              "referencedDeclaration": 44167,
              "src": "296:14:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                "typeString": "contract BulkWithdrawal"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45125,
            "nodeType": "FunctionDefinition",
            "src": "339:870:31",
            "nodes": [],
            "body": {
              "id": 45124,
              "nodeType": "Block",
              "src": "397:812:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45010
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45010,
                      "mutability": "mutable",
                      "name": "batchSize",
                      "nameLocation": "415:9:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 45124,
                      "src": "407:17:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45009,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "407:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45012,
                  "initialValue": {
                    "hexValue": "33",
                    "id": 45011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "427:1:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "407:21:31"
                },
                {
                  "expression": {
                    "id": 45027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45013,
                      "name": "bulkWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45006,
                      "src": "438:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                        "typeString": "contract BulkWithdrawal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45019,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44892,
                              "src": "494:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KernelMock_$44702",
                                "typeString": "contract KernelMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_KernelMock_$44702",
                                "typeString": "contract KernelMock"
                              }
                            ],
                            "id": 45018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "486:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45017,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "486:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "486:15:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 45023,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44892,
                              "src": "511:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KernelMock_$44702",
                                "typeString": "contract KernelMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_KernelMock_$44702",
                                "typeString": "contract KernelMock"
                              }
                            ],
                            "id": 45022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "503:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45021,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "503:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "503:15:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 45025,
                          "name": "batchSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45010,
                          "src": "520:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 45016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "467:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_BulkWithdrawal_$44167_$",
                          "typeString": "function (address,address,uint256) returns (contract BulkWithdrawal)"
                        },
                        "typeName": {
                          "id": 45015,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45014,
                            "name": "BulkWithdrawal",
                            "nameLocations": [
                              "471:14:31"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44167,
                            "src": "471:14:31"
                          },
                          "referencedDeclaration": 44167,
                          "src": "471:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                            "typeString": "contract BulkWithdrawal"
                          }
                        }
                      },
                      "id": 45026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "467:63:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                        "typeString": "contract BulkWithdrawal"
                      }
                    },
                    "src": "438:92:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                      "typeString": "contract BulkWithdrawal"
                    }
                  },
                  "id": 45028,
                  "nodeType": "ExpressionStatement",
                  "src": "438:92:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45034,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "581:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "573:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45032,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "573:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "573:14:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45038,
                            "name": "bulkWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45006,
                            "src": "597:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                              "typeString": "contract BulkWithdrawal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                              "typeString": "contract BulkWithdrawal"
                            }
                          ],
                          "id": 45037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "589:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45036,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "589:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "589:23:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "614:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "id": 45041,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "619:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45042,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "629:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45029,
                        "name": "kernel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44892,
                        "src": "540:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KernelMock_$44702",
                          "typeString": "contract KernelMock"
                        }
                      },
                      "id": 45031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "547:12:31",
                      "memberName": "inboxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44618,
                      "src": "540:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "540:106:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45044,
                  "nodeType": "ExpressionStatement",
                  "src": "540:106:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45046,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "665:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "671:11:31",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43404,
                          "src": "665:17:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 45048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "665:19:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 45049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "686:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 45045,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "656:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "656:34:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45051,
                  "nodeType": "ExpressionStatement",
                  "src": "656:34:31"
                },
                {
                  "assignments": [
                    45053
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45053,
                      "mutability": "mutable",
                      "name": "expectedData",
                      "nameLocation": "714:12:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 45124,
                      "src": "701:25:31",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 45052,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "701:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45068,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45056,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44892,
                          "src": "757:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KernelMock_$44702",
                            "typeString": "contract KernelMock"
                          }
                        },
                        "id": 45057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "764:8:31",
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44695,
                        "src": "757:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (address,bytes memory,uint256,bytes22,bytes memory) external"
                        }
                      },
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "id": 45060,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44889,
                                "src": "783:5:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                                  "typeString": "contract ERC20Proxy"
                                }
                              ],
                              "id": 45059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "775:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45058,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "775:7:31",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "775:14:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 45062,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44936,
                            "src": "791:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          {
                            "hexValue": "3132",
                            "id": 45063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "801:2:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_12_by_1",
                              "typeString": "int_const 12"
                            },
                            "value": "12"
                          },
                          {
                            "id": 45064,
                            "name": "ticketer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44912,
                            "src": "805:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes22",
                              "typeString": "bytes22"
                            }
                          },
                          {
                            "id": 45065,
                            "name": "content",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44924,
                            "src": "815:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          }
                        ],
                        "id": 45066,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "774:49:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_bytes_storage_$_t_rational_12_by_1_$_t_bytes22_$_t_bytes_storage_$",
                          "typeString": "tuple(address,bytes storage ref,int_const 12,bytes22,bytes storage ref)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (address,bytes memory,uint256,bytes22,bytes memory) external"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_address_$_t_bytes_storage_$_t_rational_12_by_1_$_t_bytes22_$_t_bytes_storage_$",
                          "typeString": "tuple(address,bytes storage ref,int_const 12,bytes22,bytes storage ref)"
                        }
                      ],
                      "expression": {
                        "id": 45054,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "729:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 45055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "733:10:31",
                      "memberName": "encodeCall",
                      "nodeType": "MemberAccess",
                      "src": "729:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 45067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:104:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "701:132:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45074,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "865:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          ],
                          "id": 45073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "857:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45072,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "857:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "857:15:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45076,
                        "name": "expectedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45053,
                        "src": "874:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45069,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "843:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "846:10:31",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13636,
                      "src": "843:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "843:44:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45078,
                  "nodeType": "ExpressionStatement",
                  "src": "843:44:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45082,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44904,
                        "src": "906:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45079,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "897:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "900:5:31",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13490,
                      "src": "897:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "897:13:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45084,
                  "nodeType": "ExpressionStatement",
                  "src": "897:13:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45090,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1019:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          ],
                          "id": 45089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1011:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45088,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1011:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1011:14:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45092,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44936,
                        "src": "1027:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "3132",
                        "id": 45093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1037:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12_by_1",
                          "typeString": "int_const 12"
                        },
                        "value": "12"
                      },
                      {
                        "id": 45094,
                        "name": "ticketer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44912,
                        "src": "1041:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        }
                      },
                      {
                        "id": 45095,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44924,
                        "src": "1051:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_12_by_1",
                          "typeString": "int_const 12"
                        },
                        {
                          "typeIdentifier": "t_bytes22",
                          "typeString": "bytes22"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 45085,
                        "name": "bulkWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45006,
                        "src": "987:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                          "typeString": "contract BulkWithdrawal"
                        }
                      },
                      "id": 45087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1002:8:31",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44140,
                      "src": "987:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes22_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,bytes22,bytes memory) external"
                      }
                    },
                    "id": 45096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:72:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45097,
                  "nodeType": "ExpressionStatement",
                  "src": "987:72:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45103,
                                "name": "bulkWithdrawal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45006,
                                "src": "1102:14:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                                  "typeString": "contract BulkWithdrawal"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                                  "typeString": "contract BulkWithdrawal"
                                }
                              ],
                              "id": 45102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1094:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45101,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1094:7:31",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1094:23:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45099,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1078:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1084:9:31",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43418,
                          "src": "1078:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1078:40:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 45106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1120:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 45109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3132",
                            "id": 45107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1126:2:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_12_by_1",
                              "typeString": "int_const 12"
                            },
                            "value": "12"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 45108,
                            "name": "batchSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45010,
                            "src": "1131:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1126:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1120:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45098,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1069:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:72:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45112,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:72:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45114,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44889,
                            "src": "1160:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Proxy_$44381",
                              "typeString": "contract ERC20Proxy"
                            }
                          },
                          "id": 45115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1166:11:31",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43404,
                          "src": "1160:17:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 45116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1160:19:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 45117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1181:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 45120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3132",
                            "id": 45118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1187:2:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_12_by_1",
                              "typeString": "int_const 12"
                            },
                            "value": "12"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 45119,
                            "name": "batchSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45010,
                            "src": "1192:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1187:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1181:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45113,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1151:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1151:51:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45123,
                  "nodeType": "ExpressionStatement",
                  "src": "1151:51:31"
                }
              ]
            },
            "functionSelector": "094ae1fc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_WithdrawalFromSmartContractSucceed",
            "nameLocation": "348:39:31",
            "parameters": {
              "id": 45007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:2:31"
            },
            "returnParameters": {
              "id": 45008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:0:31"
            },
            "scope": 45222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45221,
            "nodeType": "FunctionDefinition",
            "src": "1215:696:31",
            "nodes": [],
            "body": {
              "id": 45220,
              "nodeType": "Block",
              "src": "1262:649:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45129,
                      "mutability": "mutable",
                      "name": "batchSize",
                      "nameLocation": "1280:9:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 45220,
                      "src": "1272:17:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45128,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1272:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45131,
                  "initialValue": {
                    "hexValue": "35",
                    "id": 45130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1292:1:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5_by_1",
                      "typeString": "int_const 5"
                    },
                    "value": "5"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1272:21:31"
                },
                {
                  "expression": {
                    "id": 45146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45132,
                      "name": "bulkWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45006,
                      "src": "1303:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                        "typeString": "contract BulkWithdrawal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45138,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44892,
                              "src": "1359:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KernelMock_$44702",
                                "typeString": "contract KernelMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_KernelMock_$44702",
                                "typeString": "contract KernelMock"
                              }
                            ],
                            "id": 45137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1351:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45136,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1351:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1351:15:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 45142,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44892,
                              "src": "1376:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KernelMock_$44702",
                                "typeString": "contract KernelMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_KernelMock_$44702",
                                "typeString": "contract KernelMock"
                              }
                            ],
                            "id": 45141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1368:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45140,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1368:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1368:15:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 45144,
                          "name": "batchSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45129,
                          "src": "1385:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 45135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1332:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_BulkWithdrawal_$44167_$",
                          "typeString": "function (address,address,uint256) returns (contract BulkWithdrawal)"
                        },
                        "typeName": {
                          "id": 45134,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45133,
                            "name": "BulkWithdrawal",
                            "nameLocations": [
                              "1336:14:31"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44167,
                            "src": "1336:14:31"
                          },
                          "referencedDeclaration": 44167,
                          "src": "1336:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                            "typeString": "contract BulkWithdrawal"
                          }
                        }
                      },
                      "id": 45145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1332:63:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                        "typeString": "contract BulkWithdrawal"
                      }
                    },
                    "src": "1303:92:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                      "typeString": "contract BulkWithdrawal"
                    }
                  },
                  "id": 45147,
                  "nodeType": "ExpressionStatement",
                  "src": "1303:92:31"
                },
                {
                  "assignments": [
                    45149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45149,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "1419:6:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 45220,
                      "src": "1405:20:31",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 45148,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1405:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45151,
                  "initialValue": {
                    "hexValue": "736f6d65546172676574",
                    "id": 45150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1428:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4826796f5a1f0edf1ad09d445097e1ac0245525120a378bd3c5652d455d093d2",
                      "typeString": "literal_string \"someTarget\""
                    },
                    "value": "someTarget"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1405:35:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45153,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44904,
                        "src": "1460:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 45154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1465:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "id": 45152,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6752,
                        6773,
                        6797,
                        6821
                      ],
                      "referencedDeclaration": 6773,
                      "src": "1450:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1450:23:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45156,
                  "nodeType": "ExpressionStatement",
                  "src": "1450:23:31"
                },
                {
                  "assignments": [
                    45158,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45158,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1489:7:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 45220,
                      "src": "1484:12:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 45157,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1484:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 45168,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 45166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1542:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 45161,
                              "name": "bulkWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45006,
                              "src": "1509:14:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                                "typeString": "contract BulkWithdrawal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                                "typeString": "contract BulkWithdrawal"
                              }
                            ],
                            "id": 45160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1501:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45159,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1501:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1501:23:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1525:4:31",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1501:28:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 45165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "353030",
                          "id": 45164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1537:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        }
                      ],
                      "src": "1501:40:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 45167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:44:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1483:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45170,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45158,
                        "src": "1563:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f206465706f736974206574686572",
                        "id": 45171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1572:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e577342e24342fa112396590f157c9ae40d418a0dfaa696d0699af5dab0cc78b",
                          "typeString": "literal_string \"Failed to deposit ether\""
                        },
                        "value": "Failed to deposit ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e577342e24342fa112396590f157c9ae40d418a0dfaa696d0699af5dab0cc78b",
                          "typeString": "literal_string \"Failed to deposit ether\""
                        }
                      ],
                      "id": 45169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1555:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1555:43:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45173,
                  "nodeType": "ExpressionStatement",
                  "src": "1555:43:31"
                },
                {
                  "assignments": [
                    45175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45175,
                      "mutability": "mutable",
                      "name": "expectedData",
                      "nameLocation": "1622:12:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 45220,
                      "src": "1609:25:31",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 45174,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1609:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45182,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45178,
                          "name": "kernel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44892,
                          "src": "1664:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KernelMock_$44702",
                            "typeString": "contract KernelMock"
                          }
                        },
                        "id": 45179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1671:15:31",
                        "memberName": "withdraw_base58",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44701,
                        "src": "1664:22:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) payable external"
                        }
                      },
                      {
                        "id": 45180,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45149,
                        "src": "1688:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) payable external"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 45176,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1649:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 45177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1653:10:31",
                      "memberName": "encodeCall",
                      "nodeType": "MemberAccess",
                      "src": "1649:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 45181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:46:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1609:86:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45188,
                            "name": "kernel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44892,
                            "src": "1727:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KernelMock_$44702",
                              "typeString": "contract KernelMock"
                            }
                          ],
                          "id": 45187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1719:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1719:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1719:15:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45190,
                        "name": "expectedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45175,
                        "src": "1736:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45183,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1705:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13892",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1708:10:31",
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13636,
                      "src": "1705:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1705:44:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45192,
                  "nodeType": "ExpressionStatement",
                  "src": "1705:44:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45198,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45149,
                        "src": "1802:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 45193,
                          "name": "bulkWithdrawal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45006,
                          "src": "1759:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BulkWithdrawal_$44167",
                            "typeString": "contract BulkWithdrawal"
                          }
                        },
                        "id": 45195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1774:15:31",
                        "memberName": "withdraw_base58",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44162,
                        "src": "1759:30:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) payable external"
                        }
                      },
                      "id": 45197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "313030",
                          "id": 45196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1797:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "src": "1759:42:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$returns$__$value",
                        "typeString": "function (string memory) payable external"
                      }
                    },
                    "id": 45199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:50:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45200,
                  "nodeType": "ExpressionStatement",
                  "src": "1759:50:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45204,
                              "name": "kernel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44892,
                              "src": "1836:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_KernelMock_$44702",
                                "typeString": "contract KernelMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_KernelMock_$44702",
                                "typeString": "contract KernelMock"
                              }
                            ],
                            "id": 45203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1828:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1828:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1828:15:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1844:7:31",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1828:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "353030",
                        "id": 45207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1853:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        },
                        "value": "500"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        }
                      ],
                      "id": 45201,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1819:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:38:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45209,
                  "nodeType": "ExpressionStatement",
                  "src": "1819:38:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45215,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44904,
                              "src": "1891:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1883:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45213,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1883:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1883:12:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1896:7:31",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1883:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45210,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21956,
                        "src": "1867:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21956_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 45212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1875:7:31",
                      "memberName": "logUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13955,
                      "src": "1867:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 45218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:37:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45219,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:37:31"
                }
              ]
            },
            "functionSelector": "97361594",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_WithdrawalNativeSucceed",
            "nameLocation": "1224:28:31",
            "parameters": {
              "id": 45126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1252:2:31"
            },
            "returnParameters": {
              "id": 45127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1262:0:31"
            },
            "scope": 45222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45002,
              "name": "BaseTest",
              "nameLocations": [
                "281:8:31"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44991,
              "src": "281:8:31"
            },
            "id": 45003,
            "nodeType": "InheritanceSpecifier",
            "src": "281:8:31"
          }
        ],
        "canonicalName": "BulkWithdrawalTest",
        "contractDependencies": [
          44167,
          44381,
          44702
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45222,
          44991,
          12199,
          12148,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "BulkWithdrawalTest",
        "nameLocation": "259:18:31",
        "scope": 45223,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 31
}