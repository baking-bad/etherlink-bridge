{ parameter
    (or (pair %default
           (nat %withdrawal_id)
           (ticket %ticket (pair nat (option bytes)))
           (timestamp %timestamp)
           (address %base_withdrawer)
           (bytes %payload)
           (bytes %l2_caller))
        (pair %purchase_withdrawal
           (pair %withdrawal
              (nat %withdrawal_id)
              (nat %withdrawal_amount)
              (timestamp %timestamp)
              (address %base_withdrawer)
              (bytes %payload)
              (bytes %l2_caller))
           (address %service_provider)
           (ticket %ticket (pair nat (option bytes))))) ;
  storage
    (pair (address %exchanger)
          (address %smart_rollup)
          (big_map %withdrawals
             (pair (nat %withdrawal_id)
                   (nat %withdrawal_amount)
                   (timestamp %timestamp)
                   (address %base_withdrawer)
                   (bytes %payload)
                   (bytes %l2_caller))
             address)) ;
  code { LAMBDA
           (pair address address (ticket (pair nat (option bytes))))
           operation
           { UNPAIR ;
             CONTRACT %burn (pair address (ticket (pair nat (option bytes)))) ;
             IF_NONE { PUSH string "Invalid tez ticket contract" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 2 ;
             TRANSFER_TOKENS } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { UNPAIR 6 ;
             SWAP ;
             READ_TICKET ;
             UNPAIR ;
             SWAP ;
             CDR ;
             DUP 9 ;
             GET 3 ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Sender is not allowed to call this entrypoint" ; FAILWITH }
                {} ;
             DUP 9 ;
             CAR ;
             DIG 2 ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Wrong ticketer" ; FAILWITH } {} ;
             DIG 6 ;
             DIG 6 ;
             DUP 7 ;
             DIG 6 ;
             DIG 4 ;
             DIG 6 ;
             PAIR 6 ;
             DUP 4 ;
             GET 4 ;
             DUP 2 ;
             GET ;
             IF_NONE
               { DROP ; SWAP ; PAIR ; DUP 2 ; CAR ; PAIR ; DIG 2 ; SWAP ; EXEC }
               { DIG 3 ;
                 DROP ;
                 DUP 4 ;
                 DIG 4 ;
                 GET 4 ;
                 NONE address ;
                 DIG 4 ;
                 UPDATE ;
                 UPDATE 4 ;
                 DUG 2 ;
                 PAIR ;
                 DUP 2 ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC } ;
             SWAP ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             PAIR }
           { DIG 2 ;
             DROP ;
             UNPAIR 3 ;
             DIG 2 ;
             READ_TICKET ;
             UNPAIR ;
             SWAP ;
             CDR ;
             DUP 6 ;
             CAR ;
             DIG 2 ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Wrong ticketer" ; FAILWITH } {} ;
             PACK ;
             DUP 3 ;
             GET 9 ;
             SWAP ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "Invalid purchase amount." ; FAILWITH } {} ;
             DUP 4 ;
             GET 4 ;
             DUP 3 ;
             GET ;
             IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
             NOT ;
             IF { DUP 4 ;
                  DIG 4 ;
                  GET 4 ;
                  DIG 4 ;
                  SOME ;
                  DUP 5 ;
                  UPDATE ;
                  UPDATE 4 ;
                  DUP ;
                  CAR ;
                  CONTRACT %burn (pair address (ticket (pair nat (option bytes)))) ;
                  IF_NONE
                    { DROP 3 ; PUSH string "Invalid tez ticket contract" ; FAILWITH }
                    { SWAP ;
                      NIL operation ;
                      DIG 2 ;
                      PUSH mutez 0 ;
                      DIG 4 ;
                      DIG 5 ;
                      GET 7 ;
                      PAIR ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      PAIR } }
                { DROP 4 ; PUSH string "The fast withdrawal was already payed" ; FAILWITH } } } }

