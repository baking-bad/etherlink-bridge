{ parameter
    (or (nat %deposit)
        (pair %withdraw (address %receiver) (ticket %ticket (pair nat (option bytes))))) ;
  storage
    (pair (pair (pair %content nat (option bytes)) (big_map %metadata string bytes))
          (or %token (address %fa12) (pair %fa2 address nat))) ;
  code { LAMBDA
           (pair (or address (pair address nat)) nat address address)
           operation
           { UNPAIR 4 ;
             IF_LEFT
               { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                 IF_NONE
                   { DROP 3 ; PUSH string "INVALID_FA12" ; FAILWITH }
                   { PUSH mutez 0 ; DIG 2 ; DIG 4 ; DIG 4 ; PAIR 3 ; TRANSFER_TOKENS } }
               { UNPAIR ;
                 CONTRACT %transfer
                   (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                 IF_NONE
                   { DROP 4 ; PUSH string "INVALID_FA2" ; FAILWITH }
                   { PUSH mutez 0 ;
                     NIL (pair address (list (pair address nat nat))) ;
                     NIL (pair address nat nat) ;
                     DIG 5 ;
                     DIG 5 ;
                     DIG 7 ;
                     PAIR 3 ;
                     CONS ;
                     DIG 4 ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS } } } ;
         LAMBDA
           unit
           unit
           { PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             GT ;
             IF { DROP ; PUSH string "XTZ_DEPOSIT_DISALLOWED" ; FAILWITH } {} } ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { UNIT ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             SELF_ADDRESS ;
             SENDER ;
             DUP 3 ;
             DUP 5 ;
             CAR ;
             CAR ;
             TICKET ;
             IF_NONE { PUSH string "TKT_CREATION_FAILED" ; FAILWITH } {} ;
             DIG 2 ;
             DUP 3 ;
             DIG 4 ;
             DUP 6 ;
             CDR ;
             PAIR 4 ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             CONTRACT (ticket (pair nat (option bytes))) ;
             IF_NONE { PUSH string "FAILED_TO_GET_TKT_ENTRYPOINT" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 3 ;
             TRANSFER_TOKENS ;
             DIG 2 ;
             NIL operation ;
             DIG 2 ;
             CONS }
           { UNPAIR ;
             SWAP ;
             READ_TICKET ;
             SWAP ;
             DROP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SELF_ADDRESS ;
             DIG 3 ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "UNAUTHORIZED_TKTR" ; FAILWITH } {} ;
             UNIT ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DROP ;
             DUP 4 ;
             CAR ;
             CAR ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "UNEXPECTED_TICKET_PAYLOAD" ; FAILWITH } ;
             SELF_ADDRESS ;
             DIG 2 ;
             SWAP ;
             DIG 2 ;
             DUP 4 ;
             CDR ;
             PAIR 4 ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             SWAP ;
             NIL operation } ;
         DIG 2 ;
         CONS ;
         PAIR } }

